
ElectricWaterHeater.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000043fe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000116  00800060  000043fe  00004492  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000019  00800176  00800176  000045a8  2**0
                  ALLOC
  3 .stab         000031c8  00000000  00000000  000045a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000012ab  00000000  00000000  00007770  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000200  00000000  00000000  00008a1b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000025b  00000000  00000000  00008c1b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000277a  00000000  00000000  00008e76  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000015b9  00000000  00000000  0000b5f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000014bf  00000000  00000000  0000cba9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000220  00000000  00000000  0000e068  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000382  00000000  00000000  0000e288  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000e48  00000000  00000000  0000e60a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000f452  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 17 18 	jmp	0x302e	; 0x302e <__vector_1>
       8:	0c 94 4e 18 	jmp	0x309c	; 0x309c <__vector_2>
       c:	0c 94 85 18 	jmp	0x310a	; 0x310a <__vector_3>
      10:	0c 94 24 14 	jmp	0x2848	; 0x2848 <__vector_4>
      14:	0c 94 5b 14 	jmp	0x28b6	; 0x28b6 <__vector_5>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee ef       	ldi	r30, 0xFE	; 254
      68:	f3 e4       	ldi	r31, 0x43	; 67
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 37       	cpi	r26, 0x76	; 118
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a6 e7       	ldi	r26, 0x76	; 118
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	af 38       	cpi	r26, 0x8F	; 143
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 cf 1f 	call	0x3f9e	; 0x3f9e <main>
      8a:	0c 94 fd 21 	jmp	0x43fa	; 0x43fa <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__muldi3>:
      92:	a0 e3       	ldi	r26, 0x30	; 48
      94:	b0 e0       	ldi	r27, 0x00	; 0
      96:	ef e4       	ldi	r30, 0x4F	; 79
      98:	f0 e0       	ldi	r31, 0x00	; 0
      9a:	0c 94 c6 21 	jmp	0x438c	; 0x438c <__prologue_saves__>
      9e:	a8 e0       	ldi	r26, 0x08	; 8
      a0:	4e 01       	movw	r8, r28
      a2:	08 94       	sec
      a4:	81 1c       	adc	r8, r1
      a6:	91 1c       	adc	r9, r1
      a8:	f4 01       	movw	r30, r8
      aa:	ba 2f       	mov	r27, r26
      ac:	11 92       	st	Z+, r1
      ae:	ba 95       	dec	r27
      b0:	e9 f7       	brne	.-6      	; 0xac <__muldi3+0x1a>
      b2:	29 83       	std	Y+1, r18	; 0x01
      b4:	3a 83       	std	Y+2, r19	; 0x02
      b6:	4b 83       	std	Y+3, r20	; 0x03
      b8:	5c 83       	std	Y+4, r21	; 0x04
      ba:	6d 83       	std	Y+5, r22	; 0x05
      bc:	7e 83       	std	Y+6, r23	; 0x06
      be:	8f 83       	std	Y+7, r24	; 0x07
      c0:	98 87       	std	Y+8, r25	; 0x08
      c2:	ce 01       	movw	r24, r28
      c4:	09 96       	adiw	r24, 0x09	; 9
      c6:	fc 01       	movw	r30, r24
      c8:	11 92       	st	Z+, r1
      ca:	aa 95       	dec	r26
      cc:	e9 f7       	brne	.-6      	; 0xc8 <__muldi3+0x36>
      ce:	a9 86       	std	Y+9, r10	; 0x09
      d0:	ba 86       	std	Y+10, r11	; 0x0a
      d2:	cb 86       	std	Y+11, r12	; 0x0b
      d4:	dc 86       	std	Y+12, r13	; 0x0c
      d6:	ed 86       	std	Y+13, r14	; 0x0d
      d8:	fe 86       	std	Y+14, r15	; 0x0e
      da:	0f 87       	std	Y+15, r16	; 0x0f
      dc:	18 8b       	std	Y+16, r17	; 0x10
      de:	29 81       	ldd	r18, Y+1	; 0x01
      e0:	3a 81       	ldd	r19, Y+2	; 0x02
      e2:	4b 81       	ldd	r20, Y+3	; 0x03
      e4:	5c 81       	ldd	r21, Y+4	; 0x04
      e6:	2d a7       	std	Y+45, r18	; 0x2d
      e8:	3e a7       	std	Y+46, r19	; 0x2e
      ea:	4f a7       	std	Y+47, r20	; 0x2f
      ec:	58 ab       	std	Y+48, r21	; 0x30
      ee:	79 01       	movw	r14, r18
      f0:	8a 01       	movw	r16, r20
      f2:	8f ef       	ldi	r24, 0xFF	; 255
      f4:	9f ef       	ldi	r25, 0xFF	; 255
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b0 e0       	ldi	r27, 0x00	; 0
      fa:	e8 22       	and	r14, r24
      fc:	f9 22       	and	r15, r25
      fe:	0a 23       	and	r16, r26
     100:	1b 23       	and	r17, r27
     102:	1a 01       	movw	r2, r20
     104:	44 24       	eor	r4, r4
     106:	55 24       	eor	r5, r5
     108:	29 85       	ldd	r18, Y+9	; 0x09
     10a:	3a 85       	ldd	r19, Y+10	; 0x0a
     10c:	4b 85       	ldd	r20, Y+11	; 0x0b
     10e:	5c 85       	ldd	r21, Y+12	; 0x0c
     110:	29 a7       	std	Y+41, r18	; 0x29
     112:	3a a7       	std	Y+42, r19	; 0x2a
     114:	4b a7       	std	Y+43, r20	; 0x2b
     116:	5c a7       	std	Y+44, r21	; 0x2c
     118:	59 01       	movw	r10, r18
     11a:	6a 01       	movw	r12, r20
     11c:	a8 22       	and	r10, r24
     11e:	b9 22       	and	r11, r25
     120:	ca 22       	and	r12, r26
     122:	db 22       	and	r13, r27
     124:	3a 01       	movw	r6, r20
     126:	88 24       	eor	r8, r8
     128:	99 24       	eor	r9, r9
     12a:	c6 01       	movw	r24, r12
     12c:	b5 01       	movw	r22, r10
     12e:	a8 01       	movw	r20, r16
     130:	97 01       	movw	r18, r14
     132:	0e 94 93 21 	call	0x4326	; 0x4326 <__mulsi3>
     136:	6d a3       	std	Y+37, r22	; 0x25
     138:	7e a3       	std	Y+38, r23	; 0x26
     13a:	8f a3       	std	Y+39, r24	; 0x27
     13c:	98 a7       	std	Y+40, r25	; 0x28
     13e:	c4 01       	movw	r24, r8
     140:	b3 01       	movw	r22, r6
     142:	0e 94 93 21 	call	0x4326	; 0x4326 <__mulsi3>
     146:	69 a3       	std	Y+33, r22	; 0x21
     148:	7a a3       	std	Y+34, r23	; 0x22
     14a:	8b a3       	std	Y+35, r24	; 0x23
     14c:	9c a3       	std	Y+36, r25	; 0x24
     14e:	c6 01       	movw	r24, r12
     150:	b5 01       	movw	r22, r10
     152:	a2 01       	movw	r20, r4
     154:	91 01       	movw	r18, r2
     156:	0e 94 93 21 	call	0x4326	; 0x4326 <__mulsi3>
     15a:	7b 01       	movw	r14, r22
     15c:	8c 01       	movw	r16, r24
     15e:	c4 01       	movw	r24, r8
     160:	b3 01       	movw	r22, r6
     162:	0e 94 93 21 	call	0x4326	; 0x4326 <__mulsi3>
     166:	5b 01       	movw	r10, r22
     168:	6c 01       	movw	r12, r24
     16a:	89 a1       	ldd	r24, Y+33	; 0x21
     16c:	9a a1       	ldd	r25, Y+34	; 0x22
     16e:	ab a1       	ldd	r26, Y+35	; 0x23
     170:	bc a1       	ldd	r27, Y+36	; 0x24
     172:	8e 0d       	add	r24, r14
     174:	9f 1d       	adc	r25, r15
     176:	a0 1f       	adc	r26, r16
     178:	b1 1f       	adc	r27, r17
     17a:	89 a3       	std	Y+33, r24	; 0x21
     17c:	9a a3       	std	Y+34, r25	; 0x22
     17e:	ab a3       	std	Y+35, r26	; 0x23
     180:	bc a3       	std	Y+36, r27	; 0x24
     182:	2d a1       	ldd	r18, Y+37	; 0x25
     184:	3e a1       	ldd	r19, Y+38	; 0x26
     186:	4f a1       	ldd	r20, Y+39	; 0x27
     188:	58 a5       	ldd	r21, Y+40	; 0x28
     18a:	ca 01       	movw	r24, r20
     18c:	aa 27       	eor	r26, r26
     18e:	bb 27       	eor	r27, r27
     190:	29 a1       	ldd	r18, Y+33	; 0x21
     192:	3a a1       	ldd	r19, Y+34	; 0x22
     194:	4b a1       	ldd	r20, Y+35	; 0x23
     196:	5c a1       	ldd	r21, Y+36	; 0x24
     198:	28 0f       	add	r18, r24
     19a:	39 1f       	adc	r19, r25
     19c:	4a 1f       	adc	r20, r26
     19e:	5b 1f       	adc	r21, r27
     1a0:	29 a3       	std	Y+33, r18	; 0x21
     1a2:	3a a3       	std	Y+34, r19	; 0x22
     1a4:	4b a3       	std	Y+35, r20	; 0x23
     1a6:	5c a3       	std	Y+36, r21	; 0x24
     1a8:	2e 15       	cp	r18, r14
     1aa:	3f 05       	cpc	r19, r15
     1ac:	40 07       	cpc	r20, r16
     1ae:	51 07       	cpc	r21, r17
     1b0:	40 f4       	brcc	.+16     	; 0x1c2 <__muldi3+0x130>
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	a1 e0       	ldi	r26, 0x01	; 1
     1b8:	b0 e0       	ldi	r27, 0x00	; 0
     1ba:	a8 0e       	add	r10, r24
     1bc:	b9 1e       	adc	r11, r25
     1be:	ca 1e       	adc	r12, r26
     1c0:	db 1e       	adc	r13, r27
     1c2:	89 a1       	ldd	r24, Y+33	; 0x21
     1c4:	9a a1       	ldd	r25, Y+34	; 0x22
     1c6:	ab a1       	ldd	r26, Y+35	; 0x23
     1c8:	bc a1       	ldd	r27, Y+36	; 0x24
     1ca:	9d 01       	movw	r18, r26
     1cc:	44 27       	eor	r20, r20
     1ce:	55 27       	eor	r21, r21
     1d0:	2a 0d       	add	r18, r10
     1d2:	3b 1d       	adc	r19, r11
     1d4:	4c 1d       	adc	r20, r12
     1d6:	5d 1d       	adc	r21, r13
     1d8:	2d 8f       	std	Y+29, r18	; 0x1d
     1da:	3e 8f       	std	Y+30, r19	; 0x1e
     1dc:	4f 8f       	std	Y+31, r20	; 0x1f
     1de:	58 a3       	std	Y+32, r21	; 0x20
     1e0:	6c 01       	movw	r12, r24
     1e2:	bb 24       	eor	r11, r11
     1e4:	aa 24       	eor	r10, r10
     1e6:	8d a1       	ldd	r24, Y+37	; 0x25
     1e8:	9e a1       	ldd	r25, Y+38	; 0x26
     1ea:	af a1       	ldd	r26, Y+39	; 0x27
     1ec:	b8 a5       	ldd	r27, Y+40	; 0x28
     1ee:	a0 70       	andi	r26, 0x00	; 0
     1f0:	b0 70       	andi	r27, 0x00	; 0
     1f2:	a8 0e       	add	r10, r24
     1f4:	b9 1e       	adc	r11, r25
     1f6:	ca 1e       	adc	r12, r26
     1f8:	db 1e       	adc	r13, r27
     1fa:	a9 8e       	std	Y+25, r10	; 0x19
     1fc:	ba 8e       	std	Y+26, r11	; 0x1a
     1fe:	cb 8e       	std	Y+27, r12	; 0x1b
     200:	dc 8e       	std	Y+28, r13	; 0x1c
     202:	9a 8c       	ldd	r9, Y+26	; 0x1a
     204:	8b 8c       	ldd	r8, Y+27	; 0x1b
     206:	7c 8c       	ldd	r7, Y+28	; 0x1c
     208:	9e 8d       	ldd	r25, Y+30	; 0x1e
     20a:	6f 8d       	ldd	r22, Y+31	; 0x1f
     20c:	78 a1       	ldd	r23, Y+32	; 0x20
     20e:	fe 01       	movw	r30, r28
     210:	71 96       	adiw	r30, 0x11	; 17
     212:	88 e0       	ldi	r24, 0x08	; 8
     214:	df 01       	movw	r26, r30
     216:	1d 92       	st	X+, r1
     218:	8a 95       	dec	r24
     21a:	e9 f7       	brne	.-6      	; 0x216 <__muldi3+0x184>
     21c:	2d 8b       	std	Y+21, r18	; 0x15
     21e:	9e 8b       	std	Y+22, r25	; 0x16
     220:	6f 8b       	std	Y+23, r22	; 0x17
     222:	78 8f       	std	Y+24, r23	; 0x18
     224:	2d 85       	ldd	r18, Y+13	; 0x0d
     226:	3e 85       	ldd	r19, Y+14	; 0x0e
     228:	4f 85       	ldd	r20, Y+15	; 0x0f
     22a:	58 89       	ldd	r21, Y+16	; 0x10
     22c:	6d a5       	ldd	r22, Y+45	; 0x2d
     22e:	7e a5       	ldd	r23, Y+46	; 0x2e
     230:	8f a5       	ldd	r24, Y+47	; 0x2f
     232:	98 a9       	ldd	r25, Y+48	; 0x30
     234:	0e 94 93 21 	call	0x4326	; 0x4326 <__mulsi3>
     238:	7b 01       	movw	r14, r22
     23a:	8c 01       	movw	r16, r24
     23c:	2d 81       	ldd	r18, Y+5	; 0x05
     23e:	3e 81       	ldd	r19, Y+6	; 0x06
     240:	4f 81       	ldd	r20, Y+7	; 0x07
     242:	58 85       	ldd	r21, Y+8	; 0x08
     244:	69 a5       	ldd	r22, Y+41	; 0x29
     246:	7a a5       	ldd	r23, Y+42	; 0x2a
     248:	8b a5       	ldd	r24, Y+43	; 0x2b
     24a:	9c a5       	ldd	r25, Y+44	; 0x2c
     24c:	0e 94 93 21 	call	0x4326	; 0x4326 <__mulsi3>
     250:	e6 0e       	add	r14, r22
     252:	f7 1e       	adc	r15, r23
     254:	08 1f       	adc	r16, r24
     256:	19 1f       	adc	r17, r25
     258:	6d 89       	ldd	r22, Y+21	; 0x15
     25a:	7e 89       	ldd	r23, Y+22	; 0x16
     25c:	8f 89       	ldd	r24, Y+23	; 0x17
     25e:	98 8d       	ldd	r25, Y+24	; 0x18
     260:	6e 0d       	add	r22, r14
     262:	7f 1d       	adc	r23, r15
     264:	80 1f       	adc	r24, r16
     266:	91 1f       	adc	r25, r17
     268:	6d 8b       	std	Y+21, r22	; 0x15
     26a:	7e 8b       	std	Y+22, r23	; 0x16
     26c:	8f 8b       	std	Y+23, r24	; 0x17
     26e:	98 8f       	std	Y+24, r25	; 0x18
     270:	ee 89       	ldd	r30, Y+22	; 0x16
     272:	2a 2d       	mov	r18, r10
     274:	39 2d       	mov	r19, r9
     276:	48 2d       	mov	r20, r8
     278:	57 2d       	mov	r21, r7
     27a:	7e 2f       	mov	r23, r30
     27c:	8f 89       	ldd	r24, Y+23	; 0x17
     27e:	98 8d       	ldd	r25, Y+24	; 0x18
     280:	e0 96       	adiw	r28, 0x30	; 48
     282:	e2 e1       	ldi	r30, 0x12	; 18
     284:	0c 94 e2 21 	jmp	0x43c4	; 0x43c4 <__epilogue_restores__>

00000288 <__ashldi3>:
     288:	ef 92       	push	r14
     28a:	ff 92       	push	r15
     28c:	0f 93       	push	r16
     28e:	df 93       	push	r29
     290:	cf 93       	push	r28
     292:	cd b7       	in	r28, 0x3d	; 61
     294:	de b7       	in	r29, 0x3e	; 62
     296:	60 97       	sbiw	r28, 0x10	; 16
     298:	0f b6       	in	r0, 0x3f	; 63
     29a:	f8 94       	cli
     29c:	de bf       	out	0x3e, r29	; 62
     29e:	0f be       	out	0x3f, r0	; 63
     2a0:	cd bf       	out	0x3d, r28	; 61
     2a2:	a8 2f       	mov	r26, r24
     2a4:	00 23       	and	r16, r16
     2a6:	09 f4       	brne	.+2      	; 0x2aa <__ashldi3+0x22>
     2a8:	61 c0       	rjmp	.+194    	; 0x36c <__ashldi3+0xe4>
     2aa:	7e 01       	movw	r14, r28
     2ac:	08 94       	sec
     2ae:	e1 1c       	adc	r14, r1
     2b0:	f1 1c       	adc	r15, r1
     2b2:	88 e0       	ldi	r24, 0x08	; 8
     2b4:	f7 01       	movw	r30, r14
     2b6:	11 92       	st	Z+, r1
     2b8:	8a 95       	dec	r24
     2ba:	e9 f7       	brne	.-6      	; 0x2b6 <__ashldi3+0x2e>
     2bc:	29 83       	std	Y+1, r18	; 0x01
     2be:	3a 83       	std	Y+2, r19	; 0x02
     2c0:	4b 83       	std	Y+3, r20	; 0x03
     2c2:	5c 83       	std	Y+4, r21	; 0x04
     2c4:	6d 83       	std	Y+5, r22	; 0x05
     2c6:	7e 83       	std	Y+6, r23	; 0x06
     2c8:	af 83       	std	Y+7, r26	; 0x07
     2ca:	98 87       	std	Y+8, r25	; 0x08
     2cc:	80 e2       	ldi	r24, 0x20	; 32
     2ce:	80 1b       	sub	r24, r16
     2d0:	e8 2f       	mov	r30, r24
     2d2:	ff 27       	eor	r31, r31
     2d4:	e7 fd       	sbrc	r30, 7
     2d6:	f0 95       	com	r31
     2d8:	49 81       	ldd	r20, Y+1	; 0x01
     2da:	5a 81       	ldd	r21, Y+2	; 0x02
     2dc:	6b 81       	ldd	r22, Y+3	; 0x03
     2de:	7c 81       	ldd	r23, Y+4	; 0x04
     2e0:	18 16       	cp	r1, r24
     2e2:	84 f0       	brlt	.+32     	; 0x304 <__ashldi3+0x7c>
     2e4:	19 86       	std	Y+9, r1	; 0x09
     2e6:	1a 86       	std	Y+10, r1	; 0x0a
     2e8:	1b 86       	std	Y+11, r1	; 0x0b
     2ea:	1c 86       	std	Y+12, r1	; 0x0c
     2ec:	88 27       	eor	r24, r24
     2ee:	99 27       	eor	r25, r25
     2f0:	8e 1b       	sub	r24, r30
     2f2:	9f 0b       	sbc	r25, r31
     2f4:	04 c0       	rjmp	.+8      	; 0x2fe <__ashldi3+0x76>
     2f6:	44 0f       	add	r20, r20
     2f8:	55 1f       	adc	r21, r21
     2fa:	66 1f       	adc	r22, r22
     2fc:	77 1f       	adc	r23, r23
     2fe:	8a 95       	dec	r24
     300:	d2 f7       	brpl	.-12     	; 0x2f6 <__ashldi3+0x6e>
     302:	28 c0       	rjmp	.+80     	; 0x354 <__ashldi3+0xcc>
     304:	20 2f       	mov	r18, r16
     306:	33 27       	eor	r19, r19
     308:	27 fd       	sbrc	r18, 7
     30a:	30 95       	com	r19
     30c:	db 01       	movw	r26, r22
     30e:	ca 01       	movw	r24, r20
     310:	02 2e       	mov	r0, r18
     312:	04 c0       	rjmp	.+8      	; 0x31c <__ashldi3+0x94>
     314:	88 0f       	add	r24, r24
     316:	99 1f       	adc	r25, r25
     318:	aa 1f       	adc	r26, r26
     31a:	bb 1f       	adc	r27, r27
     31c:	0a 94       	dec	r0
     31e:	d2 f7       	brpl	.-12     	; 0x314 <__ashldi3+0x8c>
     320:	89 87       	std	Y+9, r24	; 0x09
     322:	9a 87       	std	Y+10, r25	; 0x0a
     324:	ab 87       	std	Y+11, r26	; 0x0b
     326:	bc 87       	std	Y+12, r27	; 0x0c
     328:	04 c0       	rjmp	.+8      	; 0x332 <__ashldi3+0xaa>
     32a:	76 95       	lsr	r23
     32c:	67 95       	ror	r22
     32e:	57 95       	ror	r21
     330:	47 95       	ror	r20
     332:	ea 95       	dec	r30
     334:	d2 f7       	brpl	.-12     	; 0x32a <__ashldi3+0xa2>
     336:	8d 81       	ldd	r24, Y+5	; 0x05
     338:	9e 81       	ldd	r25, Y+6	; 0x06
     33a:	af 81       	ldd	r26, Y+7	; 0x07
     33c:	b8 85       	ldd	r27, Y+8	; 0x08
     33e:	04 c0       	rjmp	.+8      	; 0x348 <__ashldi3+0xc0>
     340:	88 0f       	add	r24, r24
     342:	99 1f       	adc	r25, r25
     344:	aa 1f       	adc	r26, r26
     346:	bb 1f       	adc	r27, r27
     348:	2a 95       	dec	r18
     34a:	d2 f7       	brpl	.-12     	; 0x340 <__ashldi3+0xb8>
     34c:	48 2b       	or	r20, r24
     34e:	59 2b       	or	r21, r25
     350:	6a 2b       	or	r22, r26
     352:	7b 2b       	or	r23, r27
     354:	4d 87       	std	Y+13, r20	; 0x0d
     356:	5e 87       	std	Y+14, r21	; 0x0e
     358:	6f 87       	std	Y+15, r22	; 0x0f
     35a:	78 8b       	std	Y+16, r23	; 0x10
     35c:	29 85       	ldd	r18, Y+9	; 0x09
     35e:	3a 85       	ldd	r19, Y+10	; 0x0a
     360:	4b 85       	ldd	r20, Y+11	; 0x0b
     362:	5c 85       	ldd	r21, Y+12	; 0x0c
     364:	6d 85       	ldd	r22, Y+13	; 0x0d
     366:	7e 85       	ldd	r23, Y+14	; 0x0e
     368:	af 85       	ldd	r26, Y+15	; 0x0f
     36a:	98 89       	ldd	r25, Y+16	; 0x10
     36c:	8a 2f       	mov	r24, r26
     36e:	60 96       	adiw	r28, 0x10	; 16
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	f8 94       	cli
     374:	de bf       	out	0x3e, r29	; 62
     376:	0f be       	out	0x3f, r0	; 63
     378:	cd bf       	out	0x3d, r28	; 61
     37a:	cf 91       	pop	r28
     37c:	df 91       	pop	r29
     37e:	0f 91       	pop	r16
     380:	ff 90       	pop	r15
     382:	ef 90       	pop	r14
     384:	08 95       	ret

00000386 <__fixunssfsi>:
     386:	ef 92       	push	r14
     388:	ff 92       	push	r15
     38a:	0f 93       	push	r16
     38c:	1f 93       	push	r17
     38e:	7b 01       	movw	r14, r22
     390:	8c 01       	movw	r16, r24
     392:	20 e0       	ldi	r18, 0x00	; 0
     394:	30 e0       	ldi	r19, 0x00	; 0
     396:	40 e0       	ldi	r20, 0x00	; 0
     398:	5f e4       	ldi	r21, 0x4F	; 79
     39a:	0e 94 1b 06 	call	0xc36	; 0xc36 <__gesf2>
     39e:	88 23       	and	r24, r24
     3a0:	8c f0       	brlt	.+34     	; 0x3c4 <__fixunssfsi+0x3e>
     3a2:	c8 01       	movw	r24, r16
     3a4:	b7 01       	movw	r22, r14
     3a6:	20 e0       	ldi	r18, 0x00	; 0
     3a8:	30 e0       	ldi	r19, 0x00	; 0
     3aa:	40 e0       	ldi	r20, 0x00	; 0
     3ac:	5f e4       	ldi	r21, 0x4F	; 79
     3ae:	0e 94 17 04 	call	0x82e	; 0x82e <__subsf3>
     3b2:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fixsfsi>
     3b6:	9b 01       	movw	r18, r22
     3b8:	ac 01       	movw	r20, r24
     3ba:	20 50       	subi	r18, 0x00	; 0
     3bc:	30 40       	sbci	r19, 0x00	; 0
     3be:	40 40       	sbci	r20, 0x00	; 0
     3c0:	50 48       	sbci	r21, 0x80	; 128
     3c2:	06 c0       	rjmp	.+12     	; 0x3d0 <__fixunssfsi+0x4a>
     3c4:	c8 01       	movw	r24, r16
     3c6:	b7 01       	movw	r22, r14
     3c8:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fixsfsi>
     3cc:	9b 01       	movw	r18, r22
     3ce:	ac 01       	movw	r20, r24
     3d0:	b9 01       	movw	r22, r18
     3d2:	ca 01       	movw	r24, r20
     3d4:	1f 91       	pop	r17
     3d6:	0f 91       	pop	r16
     3d8:	ff 90       	pop	r15
     3da:	ef 90       	pop	r14
     3dc:	08 95       	ret

000003de <__floatundisf>:
     3de:	a2 e0       	ldi	r26, 0x02	; 2
     3e0:	b0 e0       	ldi	r27, 0x00	; 0
     3e2:	e5 ef       	ldi	r30, 0xF5	; 245
     3e4:	f1 e0       	ldi	r31, 0x01	; 1
     3e6:	0c 94 c6 21 	jmp	0x438c	; 0x438c <__prologue_saves__>
     3ea:	12 2f       	mov	r17, r18
     3ec:	b3 2e       	mov	r11, r19
     3ee:	a4 2e       	mov	r10, r20
     3f0:	95 2e       	mov	r9, r21
     3f2:	86 2e       	mov	r8, r22
     3f4:	37 2e       	mov	r3, r23
     3f6:	28 2e       	mov	r2, r24
     3f8:	9a 83       	std	Y+2, r25	; 0x02
     3fa:	c2 2e       	mov	r12, r18
     3fc:	d3 2e       	mov	r13, r19
     3fe:	e4 2e       	mov	r14, r20
     400:	f5 2e       	mov	r15, r21
     402:	a7 01       	movw	r20, r14
     404:	96 01       	movw	r18, r12
     406:	60 e0       	ldi	r22, 0x00	; 0
     408:	70 e0       	ldi	r23, 0x00	; 0
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	21 17       	cp	r18, r17
     410:	a1 f4       	brne	.+40     	; 0x43a <__floatundisf+0x5c>
     412:	3b 15       	cp	r19, r11
     414:	91 f4       	brne	.+36     	; 0x43a <__floatundisf+0x5c>
     416:	4a 15       	cp	r20, r10
     418:	81 f4       	brne	.+32     	; 0x43a <__floatundisf+0x5c>
     41a:	59 15       	cp	r21, r9
     41c:	71 f4       	brne	.+28     	; 0x43a <__floatundisf+0x5c>
     41e:	68 15       	cp	r22, r8
     420:	61 f4       	brne	.+24     	; 0x43a <__floatundisf+0x5c>
     422:	73 15       	cp	r23, r3
     424:	51 f4       	brne	.+20     	; 0x43a <__floatundisf+0x5c>
     426:	82 15       	cp	r24, r2
     428:	41 f4       	brne	.+16     	; 0x43a <__floatundisf+0x5c>
     42a:	aa 81       	ldd	r26, Y+2	; 0x02
     42c:	9a 17       	cp	r25, r26
     42e:	29 f4       	brne	.+10     	; 0x43a <__floatundisf+0x5c>
     430:	c7 01       	movw	r24, r14
     432:	b6 01       	movw	r22, r12
     434:	0e 94 fd 06 	call	0xdfa	; 0xdfa <__floatunsisf>
     438:	aa c0       	rjmp	.+340    	; 0x58e <__floatundisf+0x1b0>
     43a:	21 2f       	mov	r18, r17
     43c:	3b 2d       	mov	r19, r11
     43e:	4a 2d       	mov	r20, r10
     440:	59 2d       	mov	r21, r9
     442:	68 2d       	mov	r22, r8
     444:	73 2d       	mov	r23, r3
     446:	82 2d       	mov	r24, r2
     448:	9a 81       	ldd	r25, Y+2	; 0x02
     44a:	00 e2       	ldi	r16, 0x20	; 32
     44c:	0e 94 76 07 	call	0xeec	; 0xeec <__lshrdi3>
     450:	c9 01       	movw	r24, r18
     452:	da 01       	movw	r26, r20
     454:	80 30       	cpi	r24, 0x00	; 0
     456:	e0 e0       	ldi	r30, 0x00	; 0
     458:	9e 07       	cpc	r25, r30
     45a:	e1 e0       	ldi	r30, 0x01	; 1
     45c:	ae 07       	cpc	r26, r30
     45e:	e0 e0       	ldi	r30, 0x00	; 0
     460:	be 07       	cpc	r27, r30
     462:	80 f4       	brcc	.+32     	; 0x484 <__floatundisf+0xa6>
     464:	8f 3f       	cpi	r24, 0xFF	; 255
     466:	91 05       	cpc	r25, r1
     468:	a1 05       	cpc	r26, r1
     46a:	b1 05       	cpc	r27, r1
     46c:	31 f0       	breq	.+12     	; 0x47a <__floatundisf+0x9c>
     46e:	28 f0       	brcs	.+10     	; 0x47a <__floatundisf+0x9c>
     470:	28 e0       	ldi	r18, 0x08	; 8
     472:	30 e0       	ldi	r19, 0x00	; 0
     474:	40 e0       	ldi	r20, 0x00	; 0
     476:	50 e0       	ldi	r21, 0x00	; 0
     478:	16 c0       	rjmp	.+44     	; 0x4a6 <__floatundisf+0xc8>
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	30 e0       	ldi	r19, 0x00	; 0
     47e:	40 e0       	ldi	r20, 0x00	; 0
     480:	50 e0       	ldi	r21, 0x00	; 0
     482:	11 c0       	rjmp	.+34     	; 0x4a6 <__floatundisf+0xc8>
     484:	80 30       	cpi	r24, 0x00	; 0
     486:	f0 e0       	ldi	r31, 0x00	; 0
     488:	9f 07       	cpc	r25, r31
     48a:	f0 e0       	ldi	r31, 0x00	; 0
     48c:	af 07       	cpc	r26, r31
     48e:	f1 e0       	ldi	r31, 0x01	; 1
     490:	bf 07       	cpc	r27, r31
     492:	28 f0       	brcs	.+10     	; 0x49e <__floatundisf+0xc0>
     494:	28 e1       	ldi	r18, 0x18	; 24
     496:	30 e0       	ldi	r19, 0x00	; 0
     498:	40 e0       	ldi	r20, 0x00	; 0
     49a:	50 e0       	ldi	r21, 0x00	; 0
     49c:	04 c0       	rjmp	.+8      	; 0x4a6 <__floatundisf+0xc8>
     49e:	20 e1       	ldi	r18, 0x10	; 16
     4a0:	30 e0       	ldi	r19, 0x00	; 0
     4a2:	40 e0       	ldi	r20, 0x00	; 0
     4a4:	50 e0       	ldi	r21, 0x00	; 0
     4a6:	02 2e       	mov	r0, r18
     4a8:	04 c0       	rjmp	.+8      	; 0x4b2 <__floatundisf+0xd4>
     4aa:	b6 95       	lsr	r27
     4ac:	a7 95       	ror	r26
     4ae:	97 95       	ror	r25
     4b0:	87 95       	ror	r24
     4b2:	0a 94       	dec	r0
     4b4:	d2 f7       	brpl	.-12     	; 0x4aa <__floatundisf+0xcc>
     4b6:	fc 01       	movw	r30, r24
     4b8:	e8 59       	subi	r30, 0x98	; 152
     4ba:	ff 4f       	sbci	r31, 0xFF	; 255
     4bc:	80 81       	ld	r24, Z
     4be:	29 01       	movw	r4, r18
     4c0:	3a 01       	movw	r6, r20
     4c2:	48 0e       	add	r4, r24
     4c4:	51 1c       	adc	r5, r1
     4c6:	61 1c       	adc	r6, r1
     4c8:	71 1c       	adc	r7, r1
     4ca:	49 82       	std	Y+1, r4	; 0x01
     4cc:	21 2f       	mov	r18, r17
     4ce:	3b 2d       	mov	r19, r11
     4d0:	4a 2d       	mov	r20, r10
     4d2:	59 2d       	mov	r21, r9
     4d4:	68 2d       	mov	r22, r8
     4d6:	73 2d       	mov	r23, r3
     4d8:	82 2d       	mov	r24, r2
     4da:	9a 81       	ldd	r25, Y+2	; 0x02
     4dc:	04 2d       	mov	r16, r4
     4de:	0e 94 76 07 	call	0xeec	; 0xeec <__lshrdi3>
     4e2:	c9 01       	movw	r24, r18
     4e4:	da 01       	movw	r26, r20
     4e6:	4c 01       	movw	r8, r24
     4e8:	5d 01       	movw	r10, r26
     4ea:	80 e2       	ldi	r24, 0x20	; 32
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	84 19       	sub	r24, r4
     4f0:	95 09       	sbc	r25, r5
     4f2:	04 c0       	rjmp	.+8      	; 0x4fc <__floatundisf+0x11e>
     4f4:	cc 0c       	add	r12, r12
     4f6:	dd 1c       	adc	r13, r13
     4f8:	ee 1c       	adc	r14, r14
     4fa:	ff 1c       	adc	r15, r15
     4fc:	8a 95       	dec	r24
     4fe:	d2 f7       	brpl	.-12     	; 0x4f4 <__floatundisf+0x116>
     500:	c1 14       	cp	r12, r1
     502:	d1 04       	cpc	r13, r1
     504:	e1 04       	cpc	r14, r1
     506:	f1 04       	cpc	r15, r1
     508:	41 f0       	breq	.+16     	; 0x51a <__floatundisf+0x13c>
     50a:	81 e0       	ldi	r24, 0x01	; 1
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	a0 e0       	ldi	r26, 0x00	; 0
     510:	b0 e0       	ldi	r27, 0x00	; 0
     512:	88 2a       	or	r8, r24
     514:	99 2a       	or	r9, r25
     516:	aa 2a       	or	r10, r26
     518:	bb 2a       	or	r11, r27
     51a:	90 e2       	ldi	r25, 0x20	; 32
     51c:	49 16       	cp	r4, r25
     51e:	51 04       	cpc	r5, r1
     520:	61 04       	cpc	r6, r1
     522:	71 04       	cpc	r7, r1
     524:	59 f4       	brne	.+22     	; 0x53c <__floatundisf+0x15e>
     526:	0f 2e       	mov	r0, r31
     528:	f0 e0       	ldi	r31, 0x00	; 0
     52a:	ef 2e       	mov	r14, r31
     52c:	f0 e0       	ldi	r31, 0x00	; 0
     52e:	ff 2e       	mov	r15, r31
     530:	f0 e8       	ldi	r31, 0x80	; 128
     532:	0f 2f       	mov	r16, r31
     534:	ff e4       	ldi	r31, 0x4F	; 79
     536:	1f 2f       	mov	r17, r31
     538:	f0 2d       	mov	r31, r0
     53a:	21 c0       	rjmp	.+66     	; 0x57e <__floatundisf+0x1a0>
     53c:	af e1       	ldi	r26, 0x1F	; 31
     53e:	4a 16       	cp	r4, r26
     540:	51 04       	cpc	r5, r1
     542:	61 04       	cpc	r6, r1
     544:	71 04       	cpc	r7, r1
     546:	59 f4       	brne	.+22     	; 0x55e <__floatundisf+0x180>
     548:	0f 2e       	mov	r0, r31
     54a:	f0 e0       	ldi	r31, 0x00	; 0
     54c:	ef 2e       	mov	r14, r31
     54e:	f0 e0       	ldi	r31, 0x00	; 0
     550:	ff 2e       	mov	r15, r31
     552:	f0 e0       	ldi	r31, 0x00	; 0
     554:	0f 2f       	mov	r16, r31
     556:	ff e4       	ldi	r31, 0x4F	; 79
     558:	1f 2f       	mov	r17, r31
     55a:	f0 2d       	mov	r31, r0
     55c:	10 c0       	rjmp	.+32     	; 0x57e <__floatundisf+0x1a0>
     55e:	61 e0       	ldi	r22, 0x01	; 1
     560:	70 e0       	ldi	r23, 0x00	; 0
     562:	80 e0       	ldi	r24, 0x00	; 0
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	09 80       	ldd	r0, Y+1	; 0x01
     568:	04 c0       	rjmp	.+8      	; 0x572 <__floatundisf+0x194>
     56a:	66 0f       	add	r22, r22
     56c:	77 1f       	adc	r23, r23
     56e:	88 1f       	adc	r24, r24
     570:	99 1f       	adc	r25, r25
     572:	0a 94       	dec	r0
     574:	d2 f7       	brpl	.-12     	; 0x56a <__floatundisf+0x18c>
     576:	0e 94 4b 06 	call	0xc96	; 0xc96 <__floatsisf>
     57a:	7b 01       	movw	r14, r22
     57c:	8c 01       	movw	r16, r24
     57e:	c5 01       	movw	r24, r10
     580:	b4 01       	movw	r22, r8
     582:	0e 94 fd 06 	call	0xdfa	; 0xdfa <__floatunsisf>
     586:	a8 01       	movw	r20, r16
     588:	97 01       	movw	r18, r14
     58a:	0e 94 75 04 	call	0x8ea	; 0x8ea <__mulsf3>
     58e:	22 96       	adiw	r28, 0x02	; 2
     590:	e2 e1       	ldi	r30, 0x12	; 18
     592:	0c 94 e2 21 	jmp	0x43c4	; 0x43c4 <__epilogue_restores__>

00000596 <_fpadd_parts>:
     596:	a0 e0       	ldi	r26, 0x00	; 0
     598:	b0 e0       	ldi	r27, 0x00	; 0
     59a:	e1 ed       	ldi	r30, 0xD1	; 209
     59c:	f2 e0       	ldi	r31, 0x02	; 2
     59e:	0c 94 c6 21 	jmp	0x438c	; 0x438c <__prologue_saves__>
     5a2:	dc 01       	movw	r26, r24
     5a4:	2b 01       	movw	r4, r22
     5a6:	fa 01       	movw	r30, r20
     5a8:	9c 91       	ld	r25, X
     5aa:	92 30       	cpi	r25, 0x02	; 2
     5ac:	08 f4       	brcc	.+2      	; 0x5b0 <_fpadd_parts+0x1a>
     5ae:	39 c1       	rjmp	.+626    	; 0x822 <_fpadd_parts+0x28c>
     5b0:	eb 01       	movw	r28, r22
     5b2:	88 81       	ld	r24, Y
     5b4:	82 30       	cpi	r24, 0x02	; 2
     5b6:	08 f4       	brcc	.+2      	; 0x5ba <_fpadd_parts+0x24>
     5b8:	33 c1       	rjmp	.+614    	; 0x820 <_fpadd_parts+0x28a>
     5ba:	94 30       	cpi	r25, 0x04	; 4
     5bc:	69 f4       	brne	.+26     	; 0x5d8 <_fpadd_parts+0x42>
     5be:	84 30       	cpi	r24, 0x04	; 4
     5c0:	09 f0       	breq	.+2      	; 0x5c4 <_fpadd_parts+0x2e>
     5c2:	2f c1       	rjmp	.+606    	; 0x822 <_fpadd_parts+0x28c>
     5c4:	11 96       	adiw	r26, 0x01	; 1
     5c6:	9c 91       	ld	r25, X
     5c8:	11 97       	sbiw	r26, 0x01	; 1
     5ca:	89 81       	ldd	r24, Y+1	; 0x01
     5cc:	98 17       	cp	r25, r24
     5ce:	09 f4       	brne	.+2      	; 0x5d2 <_fpadd_parts+0x3c>
     5d0:	28 c1       	rjmp	.+592    	; 0x822 <_fpadd_parts+0x28c>
     5d2:	a0 e6       	ldi	r26, 0x60	; 96
     5d4:	b0 e0       	ldi	r27, 0x00	; 0
     5d6:	25 c1       	rjmp	.+586    	; 0x822 <_fpadd_parts+0x28c>
     5d8:	84 30       	cpi	r24, 0x04	; 4
     5da:	09 f4       	brne	.+2      	; 0x5de <_fpadd_parts+0x48>
     5dc:	21 c1       	rjmp	.+578    	; 0x820 <_fpadd_parts+0x28a>
     5de:	82 30       	cpi	r24, 0x02	; 2
     5e0:	a9 f4       	brne	.+42     	; 0x60c <_fpadd_parts+0x76>
     5e2:	92 30       	cpi	r25, 0x02	; 2
     5e4:	09 f0       	breq	.+2      	; 0x5e8 <_fpadd_parts+0x52>
     5e6:	1d c1       	rjmp	.+570    	; 0x822 <_fpadd_parts+0x28c>
     5e8:	9a 01       	movw	r18, r20
     5ea:	ad 01       	movw	r20, r26
     5ec:	88 e0       	ldi	r24, 0x08	; 8
     5ee:	ea 01       	movw	r28, r20
     5f0:	09 90       	ld	r0, Y+
     5f2:	ae 01       	movw	r20, r28
     5f4:	e9 01       	movw	r28, r18
     5f6:	09 92       	st	Y+, r0
     5f8:	9e 01       	movw	r18, r28
     5fa:	81 50       	subi	r24, 0x01	; 1
     5fc:	c1 f7       	brne	.-16     	; 0x5ee <_fpadd_parts+0x58>
     5fe:	e2 01       	movw	r28, r4
     600:	89 81       	ldd	r24, Y+1	; 0x01
     602:	11 96       	adiw	r26, 0x01	; 1
     604:	9c 91       	ld	r25, X
     606:	89 23       	and	r24, r25
     608:	81 83       	std	Z+1, r24	; 0x01
     60a:	08 c1       	rjmp	.+528    	; 0x81c <_fpadd_parts+0x286>
     60c:	92 30       	cpi	r25, 0x02	; 2
     60e:	09 f4       	brne	.+2      	; 0x612 <_fpadd_parts+0x7c>
     610:	07 c1       	rjmp	.+526    	; 0x820 <_fpadd_parts+0x28a>
     612:	12 96       	adiw	r26, 0x02	; 2
     614:	2d 90       	ld	r2, X+
     616:	3c 90       	ld	r3, X
     618:	13 97       	sbiw	r26, 0x03	; 3
     61a:	eb 01       	movw	r28, r22
     61c:	8a 81       	ldd	r24, Y+2	; 0x02
     61e:	9b 81       	ldd	r25, Y+3	; 0x03
     620:	14 96       	adiw	r26, 0x04	; 4
     622:	ad 90       	ld	r10, X+
     624:	bd 90       	ld	r11, X+
     626:	cd 90       	ld	r12, X+
     628:	dc 90       	ld	r13, X
     62a:	17 97       	sbiw	r26, 0x07	; 7
     62c:	ec 80       	ldd	r14, Y+4	; 0x04
     62e:	fd 80       	ldd	r15, Y+5	; 0x05
     630:	0e 81       	ldd	r16, Y+6	; 0x06
     632:	1f 81       	ldd	r17, Y+7	; 0x07
     634:	91 01       	movw	r18, r2
     636:	28 1b       	sub	r18, r24
     638:	39 0b       	sbc	r19, r25
     63a:	b9 01       	movw	r22, r18
     63c:	37 ff       	sbrs	r19, 7
     63e:	04 c0       	rjmp	.+8      	; 0x648 <_fpadd_parts+0xb2>
     640:	66 27       	eor	r22, r22
     642:	77 27       	eor	r23, r23
     644:	62 1b       	sub	r22, r18
     646:	73 0b       	sbc	r23, r19
     648:	60 32       	cpi	r22, 0x20	; 32
     64a:	71 05       	cpc	r23, r1
     64c:	0c f0       	brlt	.+2      	; 0x650 <_fpadd_parts+0xba>
     64e:	61 c0       	rjmp	.+194    	; 0x712 <_fpadd_parts+0x17c>
     650:	12 16       	cp	r1, r18
     652:	13 06       	cpc	r1, r19
     654:	6c f5       	brge	.+90     	; 0x6b0 <_fpadd_parts+0x11a>
     656:	37 01       	movw	r6, r14
     658:	48 01       	movw	r8, r16
     65a:	06 2e       	mov	r0, r22
     65c:	04 c0       	rjmp	.+8      	; 0x666 <_fpadd_parts+0xd0>
     65e:	96 94       	lsr	r9
     660:	87 94       	ror	r8
     662:	77 94       	ror	r7
     664:	67 94       	ror	r6
     666:	0a 94       	dec	r0
     668:	d2 f7       	brpl	.-12     	; 0x65e <_fpadd_parts+0xc8>
     66a:	21 e0       	ldi	r18, 0x01	; 1
     66c:	30 e0       	ldi	r19, 0x00	; 0
     66e:	40 e0       	ldi	r20, 0x00	; 0
     670:	50 e0       	ldi	r21, 0x00	; 0
     672:	04 c0       	rjmp	.+8      	; 0x67c <_fpadd_parts+0xe6>
     674:	22 0f       	add	r18, r18
     676:	33 1f       	adc	r19, r19
     678:	44 1f       	adc	r20, r20
     67a:	55 1f       	adc	r21, r21
     67c:	6a 95       	dec	r22
     67e:	d2 f7       	brpl	.-12     	; 0x674 <_fpadd_parts+0xde>
     680:	21 50       	subi	r18, 0x01	; 1
     682:	30 40       	sbci	r19, 0x00	; 0
     684:	40 40       	sbci	r20, 0x00	; 0
     686:	50 40       	sbci	r21, 0x00	; 0
     688:	2e 21       	and	r18, r14
     68a:	3f 21       	and	r19, r15
     68c:	40 23       	and	r20, r16
     68e:	51 23       	and	r21, r17
     690:	21 15       	cp	r18, r1
     692:	31 05       	cpc	r19, r1
     694:	41 05       	cpc	r20, r1
     696:	51 05       	cpc	r21, r1
     698:	21 f0       	breq	.+8      	; 0x6a2 <_fpadd_parts+0x10c>
     69a:	21 e0       	ldi	r18, 0x01	; 1
     69c:	30 e0       	ldi	r19, 0x00	; 0
     69e:	40 e0       	ldi	r20, 0x00	; 0
     6a0:	50 e0       	ldi	r21, 0x00	; 0
     6a2:	79 01       	movw	r14, r18
     6a4:	8a 01       	movw	r16, r20
     6a6:	e6 28       	or	r14, r6
     6a8:	f7 28       	or	r15, r7
     6aa:	08 29       	or	r16, r8
     6ac:	19 29       	or	r17, r9
     6ae:	3c c0       	rjmp	.+120    	; 0x728 <_fpadd_parts+0x192>
     6b0:	23 2b       	or	r18, r19
     6b2:	d1 f1       	breq	.+116    	; 0x728 <_fpadd_parts+0x192>
     6b4:	26 0e       	add	r2, r22
     6b6:	37 1e       	adc	r3, r23
     6b8:	35 01       	movw	r6, r10
     6ba:	46 01       	movw	r8, r12
     6bc:	06 2e       	mov	r0, r22
     6be:	04 c0       	rjmp	.+8      	; 0x6c8 <_fpadd_parts+0x132>
     6c0:	96 94       	lsr	r9
     6c2:	87 94       	ror	r8
     6c4:	77 94       	ror	r7
     6c6:	67 94       	ror	r6
     6c8:	0a 94       	dec	r0
     6ca:	d2 f7       	brpl	.-12     	; 0x6c0 <_fpadd_parts+0x12a>
     6cc:	21 e0       	ldi	r18, 0x01	; 1
     6ce:	30 e0       	ldi	r19, 0x00	; 0
     6d0:	40 e0       	ldi	r20, 0x00	; 0
     6d2:	50 e0       	ldi	r21, 0x00	; 0
     6d4:	04 c0       	rjmp	.+8      	; 0x6de <_fpadd_parts+0x148>
     6d6:	22 0f       	add	r18, r18
     6d8:	33 1f       	adc	r19, r19
     6da:	44 1f       	adc	r20, r20
     6dc:	55 1f       	adc	r21, r21
     6de:	6a 95       	dec	r22
     6e0:	d2 f7       	brpl	.-12     	; 0x6d6 <_fpadd_parts+0x140>
     6e2:	21 50       	subi	r18, 0x01	; 1
     6e4:	30 40       	sbci	r19, 0x00	; 0
     6e6:	40 40       	sbci	r20, 0x00	; 0
     6e8:	50 40       	sbci	r21, 0x00	; 0
     6ea:	2a 21       	and	r18, r10
     6ec:	3b 21       	and	r19, r11
     6ee:	4c 21       	and	r20, r12
     6f0:	5d 21       	and	r21, r13
     6f2:	21 15       	cp	r18, r1
     6f4:	31 05       	cpc	r19, r1
     6f6:	41 05       	cpc	r20, r1
     6f8:	51 05       	cpc	r21, r1
     6fa:	21 f0       	breq	.+8      	; 0x704 <_fpadd_parts+0x16e>
     6fc:	21 e0       	ldi	r18, 0x01	; 1
     6fe:	30 e0       	ldi	r19, 0x00	; 0
     700:	40 e0       	ldi	r20, 0x00	; 0
     702:	50 e0       	ldi	r21, 0x00	; 0
     704:	59 01       	movw	r10, r18
     706:	6a 01       	movw	r12, r20
     708:	a6 28       	or	r10, r6
     70a:	b7 28       	or	r11, r7
     70c:	c8 28       	or	r12, r8
     70e:	d9 28       	or	r13, r9
     710:	0b c0       	rjmp	.+22     	; 0x728 <_fpadd_parts+0x192>
     712:	82 15       	cp	r24, r2
     714:	93 05       	cpc	r25, r3
     716:	2c f0       	brlt	.+10     	; 0x722 <_fpadd_parts+0x18c>
     718:	1c 01       	movw	r2, r24
     71a:	aa 24       	eor	r10, r10
     71c:	bb 24       	eor	r11, r11
     71e:	65 01       	movw	r12, r10
     720:	03 c0       	rjmp	.+6      	; 0x728 <_fpadd_parts+0x192>
     722:	ee 24       	eor	r14, r14
     724:	ff 24       	eor	r15, r15
     726:	87 01       	movw	r16, r14
     728:	11 96       	adiw	r26, 0x01	; 1
     72a:	9c 91       	ld	r25, X
     72c:	d2 01       	movw	r26, r4
     72e:	11 96       	adiw	r26, 0x01	; 1
     730:	8c 91       	ld	r24, X
     732:	98 17       	cp	r25, r24
     734:	09 f4       	brne	.+2      	; 0x738 <_fpadd_parts+0x1a2>
     736:	45 c0       	rjmp	.+138    	; 0x7c2 <_fpadd_parts+0x22c>
     738:	99 23       	and	r25, r25
     73a:	39 f0       	breq	.+14     	; 0x74a <_fpadd_parts+0x1b4>
     73c:	a8 01       	movw	r20, r16
     73e:	97 01       	movw	r18, r14
     740:	2a 19       	sub	r18, r10
     742:	3b 09       	sbc	r19, r11
     744:	4c 09       	sbc	r20, r12
     746:	5d 09       	sbc	r21, r13
     748:	06 c0       	rjmp	.+12     	; 0x756 <_fpadd_parts+0x1c0>
     74a:	a6 01       	movw	r20, r12
     74c:	95 01       	movw	r18, r10
     74e:	2e 19       	sub	r18, r14
     750:	3f 09       	sbc	r19, r15
     752:	40 0b       	sbc	r20, r16
     754:	51 0b       	sbc	r21, r17
     756:	57 fd       	sbrc	r21, 7
     758:	08 c0       	rjmp	.+16     	; 0x76a <_fpadd_parts+0x1d4>
     75a:	11 82       	std	Z+1, r1	; 0x01
     75c:	33 82       	std	Z+3, r3	; 0x03
     75e:	22 82       	std	Z+2, r2	; 0x02
     760:	24 83       	std	Z+4, r18	; 0x04
     762:	35 83       	std	Z+5, r19	; 0x05
     764:	46 83       	std	Z+6, r20	; 0x06
     766:	57 83       	std	Z+7, r21	; 0x07
     768:	1d c0       	rjmp	.+58     	; 0x7a4 <_fpadd_parts+0x20e>
     76a:	81 e0       	ldi	r24, 0x01	; 1
     76c:	81 83       	std	Z+1, r24	; 0x01
     76e:	33 82       	std	Z+3, r3	; 0x03
     770:	22 82       	std	Z+2, r2	; 0x02
     772:	88 27       	eor	r24, r24
     774:	99 27       	eor	r25, r25
     776:	dc 01       	movw	r26, r24
     778:	82 1b       	sub	r24, r18
     77a:	93 0b       	sbc	r25, r19
     77c:	a4 0b       	sbc	r26, r20
     77e:	b5 0b       	sbc	r27, r21
     780:	84 83       	std	Z+4, r24	; 0x04
     782:	95 83       	std	Z+5, r25	; 0x05
     784:	a6 83       	std	Z+6, r26	; 0x06
     786:	b7 83       	std	Z+7, r27	; 0x07
     788:	0d c0       	rjmp	.+26     	; 0x7a4 <_fpadd_parts+0x20e>
     78a:	22 0f       	add	r18, r18
     78c:	33 1f       	adc	r19, r19
     78e:	44 1f       	adc	r20, r20
     790:	55 1f       	adc	r21, r21
     792:	24 83       	std	Z+4, r18	; 0x04
     794:	35 83       	std	Z+5, r19	; 0x05
     796:	46 83       	std	Z+6, r20	; 0x06
     798:	57 83       	std	Z+7, r21	; 0x07
     79a:	82 81       	ldd	r24, Z+2	; 0x02
     79c:	93 81       	ldd	r25, Z+3	; 0x03
     79e:	01 97       	sbiw	r24, 0x01	; 1
     7a0:	93 83       	std	Z+3, r25	; 0x03
     7a2:	82 83       	std	Z+2, r24	; 0x02
     7a4:	24 81       	ldd	r18, Z+4	; 0x04
     7a6:	35 81       	ldd	r19, Z+5	; 0x05
     7a8:	46 81       	ldd	r20, Z+6	; 0x06
     7aa:	57 81       	ldd	r21, Z+7	; 0x07
     7ac:	da 01       	movw	r26, r20
     7ae:	c9 01       	movw	r24, r18
     7b0:	01 97       	sbiw	r24, 0x01	; 1
     7b2:	a1 09       	sbc	r26, r1
     7b4:	b1 09       	sbc	r27, r1
     7b6:	8f 5f       	subi	r24, 0xFF	; 255
     7b8:	9f 4f       	sbci	r25, 0xFF	; 255
     7ba:	af 4f       	sbci	r26, 0xFF	; 255
     7bc:	bf 43       	sbci	r27, 0x3F	; 63
     7be:	28 f3       	brcs	.-54     	; 0x78a <_fpadd_parts+0x1f4>
     7c0:	0b c0       	rjmp	.+22     	; 0x7d8 <_fpadd_parts+0x242>
     7c2:	91 83       	std	Z+1, r25	; 0x01
     7c4:	33 82       	std	Z+3, r3	; 0x03
     7c6:	22 82       	std	Z+2, r2	; 0x02
     7c8:	ea 0c       	add	r14, r10
     7ca:	fb 1c       	adc	r15, r11
     7cc:	0c 1d       	adc	r16, r12
     7ce:	1d 1d       	adc	r17, r13
     7d0:	e4 82       	std	Z+4, r14	; 0x04
     7d2:	f5 82       	std	Z+5, r15	; 0x05
     7d4:	06 83       	std	Z+6, r16	; 0x06
     7d6:	17 83       	std	Z+7, r17	; 0x07
     7d8:	83 e0       	ldi	r24, 0x03	; 3
     7da:	80 83       	st	Z, r24
     7dc:	24 81       	ldd	r18, Z+4	; 0x04
     7de:	35 81       	ldd	r19, Z+5	; 0x05
     7e0:	46 81       	ldd	r20, Z+6	; 0x06
     7e2:	57 81       	ldd	r21, Z+7	; 0x07
     7e4:	57 ff       	sbrs	r21, 7
     7e6:	1a c0       	rjmp	.+52     	; 0x81c <_fpadd_parts+0x286>
     7e8:	c9 01       	movw	r24, r18
     7ea:	aa 27       	eor	r26, r26
     7ec:	97 fd       	sbrc	r25, 7
     7ee:	a0 95       	com	r26
     7f0:	ba 2f       	mov	r27, r26
     7f2:	81 70       	andi	r24, 0x01	; 1
     7f4:	90 70       	andi	r25, 0x00	; 0
     7f6:	a0 70       	andi	r26, 0x00	; 0
     7f8:	b0 70       	andi	r27, 0x00	; 0
     7fa:	56 95       	lsr	r21
     7fc:	47 95       	ror	r20
     7fe:	37 95       	ror	r19
     800:	27 95       	ror	r18
     802:	82 2b       	or	r24, r18
     804:	93 2b       	or	r25, r19
     806:	a4 2b       	or	r26, r20
     808:	b5 2b       	or	r27, r21
     80a:	84 83       	std	Z+4, r24	; 0x04
     80c:	95 83       	std	Z+5, r25	; 0x05
     80e:	a6 83       	std	Z+6, r26	; 0x06
     810:	b7 83       	std	Z+7, r27	; 0x07
     812:	82 81       	ldd	r24, Z+2	; 0x02
     814:	93 81       	ldd	r25, Z+3	; 0x03
     816:	01 96       	adiw	r24, 0x01	; 1
     818:	93 83       	std	Z+3, r25	; 0x03
     81a:	82 83       	std	Z+2, r24	; 0x02
     81c:	df 01       	movw	r26, r30
     81e:	01 c0       	rjmp	.+2      	; 0x822 <_fpadd_parts+0x28c>
     820:	d2 01       	movw	r26, r4
     822:	cd 01       	movw	r24, r26
     824:	cd b7       	in	r28, 0x3d	; 61
     826:	de b7       	in	r29, 0x3e	; 62
     828:	e2 e1       	ldi	r30, 0x12	; 18
     82a:	0c 94 e2 21 	jmp	0x43c4	; 0x43c4 <__epilogue_restores__>

0000082e <__subsf3>:
     82e:	a0 e2       	ldi	r26, 0x20	; 32
     830:	b0 e0       	ldi	r27, 0x00	; 0
     832:	ed e1       	ldi	r30, 0x1D	; 29
     834:	f4 e0       	ldi	r31, 0x04	; 4
     836:	0c 94 d2 21 	jmp	0x43a4	; 0x43a4 <__prologue_saves__+0x18>
     83a:	69 83       	std	Y+1, r22	; 0x01
     83c:	7a 83       	std	Y+2, r23	; 0x02
     83e:	8b 83       	std	Y+3, r24	; 0x03
     840:	9c 83       	std	Y+4, r25	; 0x04
     842:	2d 83       	std	Y+5, r18	; 0x05
     844:	3e 83       	std	Y+6, r19	; 0x06
     846:	4f 83       	std	Y+7, r20	; 0x07
     848:	58 87       	std	Y+8, r21	; 0x08
     84a:	e9 e0       	ldi	r30, 0x09	; 9
     84c:	ee 2e       	mov	r14, r30
     84e:	f1 2c       	mov	r15, r1
     850:	ec 0e       	add	r14, r28
     852:	fd 1e       	adc	r15, r29
     854:	ce 01       	movw	r24, r28
     856:	01 96       	adiw	r24, 0x01	; 1
     858:	b7 01       	movw	r22, r14
     85a:	0e 94 19 09 	call	0x1232	; 0x1232 <__unpack_f>
     85e:	8e 01       	movw	r16, r28
     860:	0f 5e       	subi	r16, 0xEF	; 239
     862:	1f 4f       	sbci	r17, 0xFF	; 255
     864:	ce 01       	movw	r24, r28
     866:	05 96       	adiw	r24, 0x05	; 5
     868:	b8 01       	movw	r22, r16
     86a:	0e 94 19 09 	call	0x1232	; 0x1232 <__unpack_f>
     86e:	8a 89       	ldd	r24, Y+18	; 0x12
     870:	91 e0       	ldi	r25, 0x01	; 1
     872:	89 27       	eor	r24, r25
     874:	8a 8b       	std	Y+18, r24	; 0x12
     876:	c7 01       	movw	r24, r14
     878:	b8 01       	movw	r22, r16
     87a:	ae 01       	movw	r20, r28
     87c:	47 5e       	subi	r20, 0xE7	; 231
     87e:	5f 4f       	sbci	r21, 0xFF	; 255
     880:	0e 94 cb 02 	call	0x596	; 0x596 <_fpadd_parts>
     884:	0e 94 44 08 	call	0x1088	; 0x1088 <__pack_f>
     888:	a0 96       	adiw	r28, 0x20	; 32
     88a:	e6 e0       	ldi	r30, 0x06	; 6
     88c:	0c 94 ee 21 	jmp	0x43dc	; 0x43dc <__epilogue_restores__+0x18>

00000890 <__addsf3>:
     890:	a0 e2       	ldi	r26, 0x20	; 32
     892:	b0 e0       	ldi	r27, 0x00	; 0
     894:	ee e4       	ldi	r30, 0x4E	; 78
     896:	f4 e0       	ldi	r31, 0x04	; 4
     898:	0c 94 d2 21 	jmp	0x43a4	; 0x43a4 <__prologue_saves__+0x18>
     89c:	69 83       	std	Y+1, r22	; 0x01
     89e:	7a 83       	std	Y+2, r23	; 0x02
     8a0:	8b 83       	std	Y+3, r24	; 0x03
     8a2:	9c 83       	std	Y+4, r25	; 0x04
     8a4:	2d 83       	std	Y+5, r18	; 0x05
     8a6:	3e 83       	std	Y+6, r19	; 0x06
     8a8:	4f 83       	std	Y+7, r20	; 0x07
     8aa:	58 87       	std	Y+8, r21	; 0x08
     8ac:	f9 e0       	ldi	r31, 0x09	; 9
     8ae:	ef 2e       	mov	r14, r31
     8b0:	f1 2c       	mov	r15, r1
     8b2:	ec 0e       	add	r14, r28
     8b4:	fd 1e       	adc	r15, r29
     8b6:	ce 01       	movw	r24, r28
     8b8:	01 96       	adiw	r24, 0x01	; 1
     8ba:	b7 01       	movw	r22, r14
     8bc:	0e 94 19 09 	call	0x1232	; 0x1232 <__unpack_f>
     8c0:	8e 01       	movw	r16, r28
     8c2:	0f 5e       	subi	r16, 0xEF	; 239
     8c4:	1f 4f       	sbci	r17, 0xFF	; 255
     8c6:	ce 01       	movw	r24, r28
     8c8:	05 96       	adiw	r24, 0x05	; 5
     8ca:	b8 01       	movw	r22, r16
     8cc:	0e 94 19 09 	call	0x1232	; 0x1232 <__unpack_f>
     8d0:	c7 01       	movw	r24, r14
     8d2:	b8 01       	movw	r22, r16
     8d4:	ae 01       	movw	r20, r28
     8d6:	47 5e       	subi	r20, 0xE7	; 231
     8d8:	5f 4f       	sbci	r21, 0xFF	; 255
     8da:	0e 94 cb 02 	call	0x596	; 0x596 <_fpadd_parts>
     8de:	0e 94 44 08 	call	0x1088	; 0x1088 <__pack_f>
     8e2:	a0 96       	adiw	r28, 0x20	; 32
     8e4:	e6 e0       	ldi	r30, 0x06	; 6
     8e6:	0c 94 ee 21 	jmp	0x43dc	; 0x43dc <__epilogue_restores__+0x18>

000008ea <__mulsf3>:
     8ea:	a0 e2       	ldi	r26, 0x20	; 32
     8ec:	b0 e0       	ldi	r27, 0x00	; 0
     8ee:	eb e7       	ldi	r30, 0x7B	; 123
     8f0:	f4 e0       	ldi	r31, 0x04	; 4
     8f2:	0c 94 c6 21 	jmp	0x438c	; 0x438c <__prologue_saves__>
     8f6:	69 83       	std	Y+1, r22	; 0x01
     8f8:	7a 83       	std	Y+2, r23	; 0x02
     8fa:	8b 83       	std	Y+3, r24	; 0x03
     8fc:	9c 83       	std	Y+4, r25	; 0x04
     8fe:	2d 83       	std	Y+5, r18	; 0x05
     900:	3e 83       	std	Y+6, r19	; 0x06
     902:	4f 83       	std	Y+7, r20	; 0x07
     904:	58 87       	std	Y+8, r21	; 0x08
     906:	ce 01       	movw	r24, r28
     908:	01 96       	adiw	r24, 0x01	; 1
     90a:	be 01       	movw	r22, r28
     90c:	67 5f       	subi	r22, 0xF7	; 247
     90e:	7f 4f       	sbci	r23, 0xFF	; 255
     910:	0e 94 19 09 	call	0x1232	; 0x1232 <__unpack_f>
     914:	ce 01       	movw	r24, r28
     916:	05 96       	adiw	r24, 0x05	; 5
     918:	be 01       	movw	r22, r28
     91a:	6f 5e       	subi	r22, 0xEF	; 239
     91c:	7f 4f       	sbci	r23, 0xFF	; 255
     91e:	0e 94 19 09 	call	0x1232	; 0x1232 <__unpack_f>
     922:	99 85       	ldd	r25, Y+9	; 0x09
     924:	92 30       	cpi	r25, 0x02	; 2
     926:	88 f0       	brcs	.+34     	; 0x94a <__mulsf3+0x60>
     928:	89 89       	ldd	r24, Y+17	; 0x11
     92a:	82 30       	cpi	r24, 0x02	; 2
     92c:	c8 f0       	brcs	.+50     	; 0x960 <__mulsf3+0x76>
     92e:	94 30       	cpi	r25, 0x04	; 4
     930:	19 f4       	brne	.+6      	; 0x938 <__mulsf3+0x4e>
     932:	82 30       	cpi	r24, 0x02	; 2
     934:	51 f4       	brne	.+20     	; 0x94a <__mulsf3+0x60>
     936:	04 c0       	rjmp	.+8      	; 0x940 <__mulsf3+0x56>
     938:	84 30       	cpi	r24, 0x04	; 4
     93a:	29 f4       	brne	.+10     	; 0x946 <__mulsf3+0x5c>
     93c:	92 30       	cpi	r25, 0x02	; 2
     93e:	81 f4       	brne	.+32     	; 0x960 <__mulsf3+0x76>
     940:	80 e6       	ldi	r24, 0x60	; 96
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	c6 c0       	rjmp	.+396    	; 0xad2 <__mulsf3+0x1e8>
     946:	92 30       	cpi	r25, 0x02	; 2
     948:	49 f4       	brne	.+18     	; 0x95c <__mulsf3+0x72>
     94a:	20 e0       	ldi	r18, 0x00	; 0
     94c:	9a 85       	ldd	r25, Y+10	; 0x0a
     94e:	8a 89       	ldd	r24, Y+18	; 0x12
     950:	98 13       	cpse	r25, r24
     952:	21 e0       	ldi	r18, 0x01	; 1
     954:	2a 87       	std	Y+10, r18	; 0x0a
     956:	ce 01       	movw	r24, r28
     958:	09 96       	adiw	r24, 0x09	; 9
     95a:	bb c0       	rjmp	.+374    	; 0xad2 <__mulsf3+0x1e8>
     95c:	82 30       	cpi	r24, 0x02	; 2
     95e:	49 f4       	brne	.+18     	; 0x972 <__mulsf3+0x88>
     960:	20 e0       	ldi	r18, 0x00	; 0
     962:	9a 85       	ldd	r25, Y+10	; 0x0a
     964:	8a 89       	ldd	r24, Y+18	; 0x12
     966:	98 13       	cpse	r25, r24
     968:	21 e0       	ldi	r18, 0x01	; 1
     96a:	2a 8b       	std	Y+18, r18	; 0x12
     96c:	ce 01       	movw	r24, r28
     96e:	41 96       	adiw	r24, 0x11	; 17
     970:	b0 c0       	rjmp	.+352    	; 0xad2 <__mulsf3+0x1e8>
     972:	2d 84       	ldd	r2, Y+13	; 0x0d
     974:	3e 84       	ldd	r3, Y+14	; 0x0e
     976:	4f 84       	ldd	r4, Y+15	; 0x0f
     978:	58 88       	ldd	r5, Y+16	; 0x10
     97a:	6d 88       	ldd	r6, Y+21	; 0x15
     97c:	7e 88       	ldd	r7, Y+22	; 0x16
     97e:	8f 88       	ldd	r8, Y+23	; 0x17
     980:	98 8c       	ldd	r9, Y+24	; 0x18
     982:	ee 24       	eor	r14, r14
     984:	ff 24       	eor	r15, r15
     986:	87 01       	movw	r16, r14
     988:	aa 24       	eor	r10, r10
     98a:	bb 24       	eor	r11, r11
     98c:	65 01       	movw	r12, r10
     98e:	40 e0       	ldi	r20, 0x00	; 0
     990:	50 e0       	ldi	r21, 0x00	; 0
     992:	60 e0       	ldi	r22, 0x00	; 0
     994:	70 e0       	ldi	r23, 0x00	; 0
     996:	e0 e0       	ldi	r30, 0x00	; 0
     998:	f0 e0       	ldi	r31, 0x00	; 0
     99a:	c1 01       	movw	r24, r2
     99c:	81 70       	andi	r24, 0x01	; 1
     99e:	90 70       	andi	r25, 0x00	; 0
     9a0:	89 2b       	or	r24, r25
     9a2:	e9 f0       	breq	.+58     	; 0x9de <__mulsf3+0xf4>
     9a4:	e6 0c       	add	r14, r6
     9a6:	f7 1c       	adc	r15, r7
     9a8:	08 1d       	adc	r16, r8
     9aa:	19 1d       	adc	r17, r9
     9ac:	9a 01       	movw	r18, r20
     9ae:	ab 01       	movw	r20, r22
     9b0:	2a 0d       	add	r18, r10
     9b2:	3b 1d       	adc	r19, r11
     9b4:	4c 1d       	adc	r20, r12
     9b6:	5d 1d       	adc	r21, r13
     9b8:	80 e0       	ldi	r24, 0x00	; 0
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	a0 e0       	ldi	r26, 0x00	; 0
     9be:	b0 e0       	ldi	r27, 0x00	; 0
     9c0:	e6 14       	cp	r14, r6
     9c2:	f7 04       	cpc	r15, r7
     9c4:	08 05       	cpc	r16, r8
     9c6:	19 05       	cpc	r17, r9
     9c8:	20 f4       	brcc	.+8      	; 0x9d2 <__mulsf3+0xe8>
     9ca:	81 e0       	ldi	r24, 0x01	; 1
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	a0 e0       	ldi	r26, 0x00	; 0
     9d0:	b0 e0       	ldi	r27, 0x00	; 0
     9d2:	ba 01       	movw	r22, r20
     9d4:	a9 01       	movw	r20, r18
     9d6:	48 0f       	add	r20, r24
     9d8:	59 1f       	adc	r21, r25
     9da:	6a 1f       	adc	r22, r26
     9dc:	7b 1f       	adc	r23, r27
     9de:	aa 0c       	add	r10, r10
     9e0:	bb 1c       	adc	r11, r11
     9e2:	cc 1c       	adc	r12, r12
     9e4:	dd 1c       	adc	r13, r13
     9e6:	97 fe       	sbrs	r9, 7
     9e8:	08 c0       	rjmp	.+16     	; 0x9fa <__mulsf3+0x110>
     9ea:	81 e0       	ldi	r24, 0x01	; 1
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	a8 2a       	or	r10, r24
     9f4:	b9 2a       	or	r11, r25
     9f6:	ca 2a       	or	r12, r26
     9f8:	db 2a       	or	r13, r27
     9fa:	31 96       	adiw	r30, 0x01	; 1
     9fc:	e0 32       	cpi	r30, 0x20	; 32
     9fe:	f1 05       	cpc	r31, r1
     a00:	49 f0       	breq	.+18     	; 0xa14 <__mulsf3+0x12a>
     a02:	66 0c       	add	r6, r6
     a04:	77 1c       	adc	r7, r7
     a06:	88 1c       	adc	r8, r8
     a08:	99 1c       	adc	r9, r9
     a0a:	56 94       	lsr	r5
     a0c:	47 94       	ror	r4
     a0e:	37 94       	ror	r3
     a10:	27 94       	ror	r2
     a12:	c3 cf       	rjmp	.-122    	; 0x99a <__mulsf3+0xb0>
     a14:	fa 85       	ldd	r31, Y+10	; 0x0a
     a16:	ea 89       	ldd	r30, Y+18	; 0x12
     a18:	2b 89       	ldd	r18, Y+19	; 0x13
     a1a:	3c 89       	ldd	r19, Y+20	; 0x14
     a1c:	8b 85       	ldd	r24, Y+11	; 0x0b
     a1e:	9c 85       	ldd	r25, Y+12	; 0x0c
     a20:	28 0f       	add	r18, r24
     a22:	39 1f       	adc	r19, r25
     a24:	2e 5f       	subi	r18, 0xFE	; 254
     a26:	3f 4f       	sbci	r19, 0xFF	; 255
     a28:	17 c0       	rjmp	.+46     	; 0xa58 <__mulsf3+0x16e>
     a2a:	ca 01       	movw	r24, r20
     a2c:	81 70       	andi	r24, 0x01	; 1
     a2e:	90 70       	andi	r25, 0x00	; 0
     a30:	89 2b       	or	r24, r25
     a32:	61 f0       	breq	.+24     	; 0xa4c <__mulsf3+0x162>
     a34:	16 95       	lsr	r17
     a36:	07 95       	ror	r16
     a38:	f7 94       	ror	r15
     a3a:	e7 94       	ror	r14
     a3c:	80 e0       	ldi	r24, 0x00	; 0
     a3e:	90 e0       	ldi	r25, 0x00	; 0
     a40:	a0 e0       	ldi	r26, 0x00	; 0
     a42:	b0 e8       	ldi	r27, 0x80	; 128
     a44:	e8 2a       	or	r14, r24
     a46:	f9 2a       	or	r15, r25
     a48:	0a 2b       	or	r16, r26
     a4a:	1b 2b       	or	r17, r27
     a4c:	76 95       	lsr	r23
     a4e:	67 95       	ror	r22
     a50:	57 95       	ror	r21
     a52:	47 95       	ror	r20
     a54:	2f 5f       	subi	r18, 0xFF	; 255
     a56:	3f 4f       	sbci	r19, 0xFF	; 255
     a58:	77 fd       	sbrc	r23, 7
     a5a:	e7 cf       	rjmp	.-50     	; 0xa2a <__mulsf3+0x140>
     a5c:	0c c0       	rjmp	.+24     	; 0xa76 <__mulsf3+0x18c>
     a5e:	44 0f       	add	r20, r20
     a60:	55 1f       	adc	r21, r21
     a62:	66 1f       	adc	r22, r22
     a64:	77 1f       	adc	r23, r23
     a66:	17 fd       	sbrc	r17, 7
     a68:	41 60       	ori	r20, 0x01	; 1
     a6a:	ee 0c       	add	r14, r14
     a6c:	ff 1c       	adc	r15, r15
     a6e:	00 1f       	adc	r16, r16
     a70:	11 1f       	adc	r17, r17
     a72:	21 50       	subi	r18, 0x01	; 1
     a74:	30 40       	sbci	r19, 0x00	; 0
     a76:	40 30       	cpi	r20, 0x00	; 0
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	59 07       	cpc	r21, r25
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	69 07       	cpc	r22, r25
     a80:	90 e4       	ldi	r25, 0x40	; 64
     a82:	79 07       	cpc	r23, r25
     a84:	60 f3       	brcs	.-40     	; 0xa5e <__mulsf3+0x174>
     a86:	2b 8f       	std	Y+27, r18	; 0x1b
     a88:	3c 8f       	std	Y+28, r19	; 0x1c
     a8a:	db 01       	movw	r26, r22
     a8c:	ca 01       	movw	r24, r20
     a8e:	8f 77       	andi	r24, 0x7F	; 127
     a90:	90 70       	andi	r25, 0x00	; 0
     a92:	a0 70       	andi	r26, 0x00	; 0
     a94:	b0 70       	andi	r27, 0x00	; 0
     a96:	80 34       	cpi	r24, 0x40	; 64
     a98:	91 05       	cpc	r25, r1
     a9a:	a1 05       	cpc	r26, r1
     a9c:	b1 05       	cpc	r27, r1
     a9e:	61 f4       	brne	.+24     	; 0xab8 <__mulsf3+0x1ce>
     aa0:	47 fd       	sbrc	r20, 7
     aa2:	0a c0       	rjmp	.+20     	; 0xab8 <__mulsf3+0x1ce>
     aa4:	e1 14       	cp	r14, r1
     aa6:	f1 04       	cpc	r15, r1
     aa8:	01 05       	cpc	r16, r1
     aaa:	11 05       	cpc	r17, r1
     aac:	29 f0       	breq	.+10     	; 0xab8 <__mulsf3+0x1ce>
     aae:	40 5c       	subi	r20, 0xC0	; 192
     ab0:	5f 4f       	sbci	r21, 0xFF	; 255
     ab2:	6f 4f       	sbci	r22, 0xFF	; 255
     ab4:	7f 4f       	sbci	r23, 0xFF	; 255
     ab6:	40 78       	andi	r20, 0x80	; 128
     ab8:	1a 8e       	std	Y+26, r1	; 0x1a
     aba:	fe 17       	cp	r31, r30
     abc:	11 f0       	breq	.+4      	; 0xac2 <__mulsf3+0x1d8>
     abe:	81 e0       	ldi	r24, 0x01	; 1
     ac0:	8a 8f       	std	Y+26, r24	; 0x1a
     ac2:	4d 8f       	std	Y+29, r20	; 0x1d
     ac4:	5e 8f       	std	Y+30, r21	; 0x1e
     ac6:	6f 8f       	std	Y+31, r22	; 0x1f
     ac8:	78 a3       	std	Y+32, r23	; 0x20
     aca:	83 e0       	ldi	r24, 0x03	; 3
     acc:	89 8f       	std	Y+25, r24	; 0x19
     ace:	ce 01       	movw	r24, r28
     ad0:	49 96       	adiw	r24, 0x19	; 25
     ad2:	0e 94 44 08 	call	0x1088	; 0x1088 <__pack_f>
     ad6:	a0 96       	adiw	r28, 0x20	; 32
     ad8:	e2 e1       	ldi	r30, 0x12	; 18
     ada:	0c 94 e2 21 	jmp	0x43c4	; 0x43c4 <__epilogue_restores__>

00000ade <__divsf3>:
     ade:	a8 e1       	ldi	r26, 0x18	; 24
     ae0:	b0 e0       	ldi	r27, 0x00	; 0
     ae2:	e5 e7       	ldi	r30, 0x75	; 117
     ae4:	f5 e0       	ldi	r31, 0x05	; 5
     ae6:	0c 94 ce 21 	jmp	0x439c	; 0x439c <__prologue_saves__+0x10>
     aea:	69 83       	std	Y+1, r22	; 0x01
     aec:	7a 83       	std	Y+2, r23	; 0x02
     aee:	8b 83       	std	Y+3, r24	; 0x03
     af0:	9c 83       	std	Y+4, r25	; 0x04
     af2:	2d 83       	std	Y+5, r18	; 0x05
     af4:	3e 83       	std	Y+6, r19	; 0x06
     af6:	4f 83       	std	Y+7, r20	; 0x07
     af8:	58 87       	std	Y+8, r21	; 0x08
     afa:	b9 e0       	ldi	r27, 0x09	; 9
     afc:	eb 2e       	mov	r14, r27
     afe:	f1 2c       	mov	r15, r1
     b00:	ec 0e       	add	r14, r28
     b02:	fd 1e       	adc	r15, r29
     b04:	ce 01       	movw	r24, r28
     b06:	01 96       	adiw	r24, 0x01	; 1
     b08:	b7 01       	movw	r22, r14
     b0a:	0e 94 19 09 	call	0x1232	; 0x1232 <__unpack_f>
     b0e:	8e 01       	movw	r16, r28
     b10:	0f 5e       	subi	r16, 0xEF	; 239
     b12:	1f 4f       	sbci	r17, 0xFF	; 255
     b14:	ce 01       	movw	r24, r28
     b16:	05 96       	adiw	r24, 0x05	; 5
     b18:	b8 01       	movw	r22, r16
     b1a:	0e 94 19 09 	call	0x1232	; 0x1232 <__unpack_f>
     b1e:	29 85       	ldd	r18, Y+9	; 0x09
     b20:	22 30       	cpi	r18, 0x02	; 2
     b22:	08 f4       	brcc	.+2      	; 0xb26 <__divsf3+0x48>
     b24:	7e c0       	rjmp	.+252    	; 0xc22 <__divsf3+0x144>
     b26:	39 89       	ldd	r19, Y+17	; 0x11
     b28:	32 30       	cpi	r19, 0x02	; 2
     b2a:	10 f4       	brcc	.+4      	; 0xb30 <__divsf3+0x52>
     b2c:	b8 01       	movw	r22, r16
     b2e:	7c c0       	rjmp	.+248    	; 0xc28 <__divsf3+0x14a>
     b30:	8a 85       	ldd	r24, Y+10	; 0x0a
     b32:	9a 89       	ldd	r25, Y+18	; 0x12
     b34:	89 27       	eor	r24, r25
     b36:	8a 87       	std	Y+10, r24	; 0x0a
     b38:	24 30       	cpi	r18, 0x04	; 4
     b3a:	11 f0       	breq	.+4      	; 0xb40 <__divsf3+0x62>
     b3c:	22 30       	cpi	r18, 0x02	; 2
     b3e:	31 f4       	brne	.+12     	; 0xb4c <__divsf3+0x6e>
     b40:	23 17       	cp	r18, r19
     b42:	09 f0       	breq	.+2      	; 0xb46 <__divsf3+0x68>
     b44:	6e c0       	rjmp	.+220    	; 0xc22 <__divsf3+0x144>
     b46:	60 e6       	ldi	r22, 0x60	; 96
     b48:	70 e0       	ldi	r23, 0x00	; 0
     b4a:	6e c0       	rjmp	.+220    	; 0xc28 <__divsf3+0x14a>
     b4c:	34 30       	cpi	r19, 0x04	; 4
     b4e:	39 f4       	brne	.+14     	; 0xb5e <__divsf3+0x80>
     b50:	1d 86       	std	Y+13, r1	; 0x0d
     b52:	1e 86       	std	Y+14, r1	; 0x0e
     b54:	1f 86       	std	Y+15, r1	; 0x0f
     b56:	18 8a       	std	Y+16, r1	; 0x10
     b58:	1c 86       	std	Y+12, r1	; 0x0c
     b5a:	1b 86       	std	Y+11, r1	; 0x0b
     b5c:	04 c0       	rjmp	.+8      	; 0xb66 <__divsf3+0x88>
     b5e:	32 30       	cpi	r19, 0x02	; 2
     b60:	21 f4       	brne	.+8      	; 0xb6a <__divsf3+0x8c>
     b62:	84 e0       	ldi	r24, 0x04	; 4
     b64:	89 87       	std	Y+9, r24	; 0x09
     b66:	b7 01       	movw	r22, r14
     b68:	5f c0       	rjmp	.+190    	; 0xc28 <__divsf3+0x14a>
     b6a:	2b 85       	ldd	r18, Y+11	; 0x0b
     b6c:	3c 85       	ldd	r19, Y+12	; 0x0c
     b6e:	8b 89       	ldd	r24, Y+19	; 0x13
     b70:	9c 89       	ldd	r25, Y+20	; 0x14
     b72:	28 1b       	sub	r18, r24
     b74:	39 0b       	sbc	r19, r25
     b76:	3c 87       	std	Y+12, r19	; 0x0c
     b78:	2b 87       	std	Y+11, r18	; 0x0b
     b7a:	ed 84       	ldd	r14, Y+13	; 0x0d
     b7c:	fe 84       	ldd	r15, Y+14	; 0x0e
     b7e:	0f 85       	ldd	r16, Y+15	; 0x0f
     b80:	18 89       	ldd	r17, Y+16	; 0x10
     b82:	ad 88       	ldd	r10, Y+21	; 0x15
     b84:	be 88       	ldd	r11, Y+22	; 0x16
     b86:	cf 88       	ldd	r12, Y+23	; 0x17
     b88:	d8 8c       	ldd	r13, Y+24	; 0x18
     b8a:	ea 14       	cp	r14, r10
     b8c:	fb 04       	cpc	r15, r11
     b8e:	0c 05       	cpc	r16, r12
     b90:	1d 05       	cpc	r17, r13
     b92:	40 f4       	brcc	.+16     	; 0xba4 <__divsf3+0xc6>
     b94:	ee 0c       	add	r14, r14
     b96:	ff 1c       	adc	r15, r15
     b98:	00 1f       	adc	r16, r16
     b9a:	11 1f       	adc	r17, r17
     b9c:	21 50       	subi	r18, 0x01	; 1
     b9e:	30 40       	sbci	r19, 0x00	; 0
     ba0:	3c 87       	std	Y+12, r19	; 0x0c
     ba2:	2b 87       	std	Y+11, r18	; 0x0b
     ba4:	20 e0       	ldi	r18, 0x00	; 0
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	40 e0       	ldi	r20, 0x00	; 0
     baa:	50 e0       	ldi	r21, 0x00	; 0
     bac:	80 e0       	ldi	r24, 0x00	; 0
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	a0 e0       	ldi	r26, 0x00	; 0
     bb2:	b0 e4       	ldi	r27, 0x40	; 64
     bb4:	60 e0       	ldi	r22, 0x00	; 0
     bb6:	70 e0       	ldi	r23, 0x00	; 0
     bb8:	ea 14       	cp	r14, r10
     bba:	fb 04       	cpc	r15, r11
     bbc:	0c 05       	cpc	r16, r12
     bbe:	1d 05       	cpc	r17, r13
     bc0:	40 f0       	brcs	.+16     	; 0xbd2 <__divsf3+0xf4>
     bc2:	28 2b       	or	r18, r24
     bc4:	39 2b       	or	r19, r25
     bc6:	4a 2b       	or	r20, r26
     bc8:	5b 2b       	or	r21, r27
     bca:	ea 18       	sub	r14, r10
     bcc:	fb 08       	sbc	r15, r11
     bce:	0c 09       	sbc	r16, r12
     bd0:	1d 09       	sbc	r17, r13
     bd2:	b6 95       	lsr	r27
     bd4:	a7 95       	ror	r26
     bd6:	97 95       	ror	r25
     bd8:	87 95       	ror	r24
     bda:	ee 0c       	add	r14, r14
     bdc:	ff 1c       	adc	r15, r15
     bde:	00 1f       	adc	r16, r16
     be0:	11 1f       	adc	r17, r17
     be2:	6f 5f       	subi	r22, 0xFF	; 255
     be4:	7f 4f       	sbci	r23, 0xFF	; 255
     be6:	6f 31       	cpi	r22, 0x1F	; 31
     be8:	71 05       	cpc	r23, r1
     bea:	31 f7       	brne	.-52     	; 0xbb8 <__divsf3+0xda>
     bec:	da 01       	movw	r26, r20
     bee:	c9 01       	movw	r24, r18
     bf0:	8f 77       	andi	r24, 0x7F	; 127
     bf2:	90 70       	andi	r25, 0x00	; 0
     bf4:	a0 70       	andi	r26, 0x00	; 0
     bf6:	b0 70       	andi	r27, 0x00	; 0
     bf8:	80 34       	cpi	r24, 0x40	; 64
     bfa:	91 05       	cpc	r25, r1
     bfc:	a1 05       	cpc	r26, r1
     bfe:	b1 05       	cpc	r27, r1
     c00:	61 f4       	brne	.+24     	; 0xc1a <__divsf3+0x13c>
     c02:	27 fd       	sbrc	r18, 7
     c04:	0a c0       	rjmp	.+20     	; 0xc1a <__divsf3+0x13c>
     c06:	e1 14       	cp	r14, r1
     c08:	f1 04       	cpc	r15, r1
     c0a:	01 05       	cpc	r16, r1
     c0c:	11 05       	cpc	r17, r1
     c0e:	29 f0       	breq	.+10     	; 0xc1a <__divsf3+0x13c>
     c10:	20 5c       	subi	r18, 0xC0	; 192
     c12:	3f 4f       	sbci	r19, 0xFF	; 255
     c14:	4f 4f       	sbci	r20, 0xFF	; 255
     c16:	5f 4f       	sbci	r21, 0xFF	; 255
     c18:	20 78       	andi	r18, 0x80	; 128
     c1a:	2d 87       	std	Y+13, r18	; 0x0d
     c1c:	3e 87       	std	Y+14, r19	; 0x0e
     c1e:	4f 87       	std	Y+15, r20	; 0x0f
     c20:	58 8b       	std	Y+16, r21	; 0x10
     c22:	be 01       	movw	r22, r28
     c24:	67 5f       	subi	r22, 0xF7	; 247
     c26:	7f 4f       	sbci	r23, 0xFF	; 255
     c28:	cb 01       	movw	r24, r22
     c2a:	0e 94 44 08 	call	0x1088	; 0x1088 <__pack_f>
     c2e:	68 96       	adiw	r28, 0x18	; 24
     c30:	ea e0       	ldi	r30, 0x0A	; 10
     c32:	0c 94 ea 21 	jmp	0x43d4	; 0x43d4 <__epilogue_restores__+0x10>

00000c36 <__gesf2>:
     c36:	a8 e1       	ldi	r26, 0x18	; 24
     c38:	b0 e0       	ldi	r27, 0x00	; 0
     c3a:	e1 e2       	ldi	r30, 0x21	; 33
     c3c:	f6 e0       	ldi	r31, 0x06	; 6
     c3e:	0c 94 d2 21 	jmp	0x43a4	; 0x43a4 <__prologue_saves__+0x18>
     c42:	69 83       	std	Y+1, r22	; 0x01
     c44:	7a 83       	std	Y+2, r23	; 0x02
     c46:	8b 83       	std	Y+3, r24	; 0x03
     c48:	9c 83       	std	Y+4, r25	; 0x04
     c4a:	2d 83       	std	Y+5, r18	; 0x05
     c4c:	3e 83       	std	Y+6, r19	; 0x06
     c4e:	4f 83       	std	Y+7, r20	; 0x07
     c50:	58 87       	std	Y+8, r21	; 0x08
     c52:	89 e0       	ldi	r24, 0x09	; 9
     c54:	e8 2e       	mov	r14, r24
     c56:	f1 2c       	mov	r15, r1
     c58:	ec 0e       	add	r14, r28
     c5a:	fd 1e       	adc	r15, r29
     c5c:	ce 01       	movw	r24, r28
     c5e:	01 96       	adiw	r24, 0x01	; 1
     c60:	b7 01       	movw	r22, r14
     c62:	0e 94 19 09 	call	0x1232	; 0x1232 <__unpack_f>
     c66:	8e 01       	movw	r16, r28
     c68:	0f 5e       	subi	r16, 0xEF	; 239
     c6a:	1f 4f       	sbci	r17, 0xFF	; 255
     c6c:	ce 01       	movw	r24, r28
     c6e:	05 96       	adiw	r24, 0x05	; 5
     c70:	b8 01       	movw	r22, r16
     c72:	0e 94 19 09 	call	0x1232	; 0x1232 <__unpack_f>
     c76:	89 85       	ldd	r24, Y+9	; 0x09
     c78:	82 30       	cpi	r24, 0x02	; 2
     c7a:	40 f0       	brcs	.+16     	; 0xc8c <__gesf2+0x56>
     c7c:	89 89       	ldd	r24, Y+17	; 0x11
     c7e:	82 30       	cpi	r24, 0x02	; 2
     c80:	28 f0       	brcs	.+10     	; 0xc8c <__gesf2+0x56>
     c82:	c7 01       	movw	r24, r14
     c84:	b8 01       	movw	r22, r16
     c86:	0e 94 91 09 	call	0x1322	; 0x1322 <__fpcmp_parts_f>
     c8a:	01 c0       	rjmp	.+2      	; 0xc8e <__gesf2+0x58>
     c8c:	8f ef       	ldi	r24, 0xFF	; 255
     c8e:	68 96       	adiw	r28, 0x18	; 24
     c90:	e6 e0       	ldi	r30, 0x06	; 6
     c92:	0c 94 ee 21 	jmp	0x43dc	; 0x43dc <__epilogue_restores__+0x18>

00000c96 <__floatsisf>:
     c96:	a8 e0       	ldi	r26, 0x08	; 8
     c98:	b0 e0       	ldi	r27, 0x00	; 0
     c9a:	e1 e5       	ldi	r30, 0x51	; 81
     c9c:	f6 e0       	ldi	r31, 0x06	; 6
     c9e:	0c 94 cf 21 	jmp	0x439e	; 0x439e <__prologue_saves__+0x12>
     ca2:	9b 01       	movw	r18, r22
     ca4:	ac 01       	movw	r20, r24
     ca6:	83 e0       	ldi	r24, 0x03	; 3
     ca8:	89 83       	std	Y+1, r24	; 0x01
     caa:	da 01       	movw	r26, r20
     cac:	c9 01       	movw	r24, r18
     cae:	88 27       	eor	r24, r24
     cb0:	b7 fd       	sbrc	r27, 7
     cb2:	83 95       	inc	r24
     cb4:	99 27       	eor	r25, r25
     cb6:	aa 27       	eor	r26, r26
     cb8:	bb 27       	eor	r27, r27
     cba:	b8 2e       	mov	r11, r24
     cbc:	21 15       	cp	r18, r1
     cbe:	31 05       	cpc	r19, r1
     cc0:	41 05       	cpc	r20, r1
     cc2:	51 05       	cpc	r21, r1
     cc4:	19 f4       	brne	.+6      	; 0xccc <__floatsisf+0x36>
     cc6:	82 e0       	ldi	r24, 0x02	; 2
     cc8:	89 83       	std	Y+1, r24	; 0x01
     cca:	3a c0       	rjmp	.+116    	; 0xd40 <__floatsisf+0xaa>
     ccc:	88 23       	and	r24, r24
     cce:	a9 f0       	breq	.+42     	; 0xcfa <__floatsisf+0x64>
     cd0:	20 30       	cpi	r18, 0x00	; 0
     cd2:	80 e0       	ldi	r24, 0x00	; 0
     cd4:	38 07       	cpc	r19, r24
     cd6:	80 e0       	ldi	r24, 0x00	; 0
     cd8:	48 07       	cpc	r20, r24
     cda:	80 e8       	ldi	r24, 0x80	; 128
     cdc:	58 07       	cpc	r21, r24
     cde:	29 f4       	brne	.+10     	; 0xcea <__floatsisf+0x54>
     ce0:	60 e0       	ldi	r22, 0x00	; 0
     ce2:	70 e0       	ldi	r23, 0x00	; 0
     ce4:	80 e0       	ldi	r24, 0x00	; 0
     ce6:	9f ec       	ldi	r25, 0xCF	; 207
     ce8:	30 c0       	rjmp	.+96     	; 0xd4a <__floatsisf+0xb4>
     cea:	ee 24       	eor	r14, r14
     cec:	ff 24       	eor	r15, r15
     cee:	87 01       	movw	r16, r14
     cf0:	e2 1a       	sub	r14, r18
     cf2:	f3 0a       	sbc	r15, r19
     cf4:	04 0b       	sbc	r16, r20
     cf6:	15 0b       	sbc	r17, r21
     cf8:	02 c0       	rjmp	.+4      	; 0xcfe <__floatsisf+0x68>
     cfa:	79 01       	movw	r14, r18
     cfc:	8a 01       	movw	r16, r20
     cfe:	8e e1       	ldi	r24, 0x1E	; 30
     d00:	c8 2e       	mov	r12, r24
     d02:	d1 2c       	mov	r13, r1
     d04:	dc 82       	std	Y+4, r13	; 0x04
     d06:	cb 82       	std	Y+3, r12	; 0x03
     d08:	ed 82       	std	Y+5, r14	; 0x05
     d0a:	fe 82       	std	Y+6, r15	; 0x06
     d0c:	0f 83       	std	Y+7, r16	; 0x07
     d0e:	18 87       	std	Y+8, r17	; 0x08
     d10:	c8 01       	movw	r24, r16
     d12:	b7 01       	movw	r22, r14
     d14:	0e 94 f5 07 	call	0xfea	; 0xfea <__clzsi2>
     d18:	01 97       	sbiw	r24, 0x01	; 1
     d1a:	18 16       	cp	r1, r24
     d1c:	19 06       	cpc	r1, r25
     d1e:	84 f4       	brge	.+32     	; 0xd40 <__floatsisf+0xaa>
     d20:	08 2e       	mov	r0, r24
     d22:	04 c0       	rjmp	.+8      	; 0xd2c <__floatsisf+0x96>
     d24:	ee 0c       	add	r14, r14
     d26:	ff 1c       	adc	r15, r15
     d28:	00 1f       	adc	r16, r16
     d2a:	11 1f       	adc	r17, r17
     d2c:	0a 94       	dec	r0
     d2e:	d2 f7       	brpl	.-12     	; 0xd24 <__floatsisf+0x8e>
     d30:	ed 82       	std	Y+5, r14	; 0x05
     d32:	fe 82       	std	Y+6, r15	; 0x06
     d34:	0f 83       	std	Y+7, r16	; 0x07
     d36:	18 87       	std	Y+8, r17	; 0x08
     d38:	c8 1a       	sub	r12, r24
     d3a:	d9 0a       	sbc	r13, r25
     d3c:	dc 82       	std	Y+4, r13	; 0x04
     d3e:	cb 82       	std	Y+3, r12	; 0x03
     d40:	ba 82       	std	Y+2, r11	; 0x02
     d42:	ce 01       	movw	r24, r28
     d44:	01 96       	adiw	r24, 0x01	; 1
     d46:	0e 94 44 08 	call	0x1088	; 0x1088 <__pack_f>
     d4a:	28 96       	adiw	r28, 0x08	; 8
     d4c:	e9 e0       	ldi	r30, 0x09	; 9
     d4e:	0c 94 eb 21 	jmp	0x43d6	; 0x43d6 <__epilogue_restores__+0x12>

00000d52 <__fixsfsi>:
     d52:	ac e0       	ldi	r26, 0x0C	; 12
     d54:	b0 e0       	ldi	r27, 0x00	; 0
     d56:	ef ea       	ldi	r30, 0xAF	; 175
     d58:	f6 e0       	ldi	r31, 0x06	; 6
     d5a:	0c 94 d6 21 	jmp	0x43ac	; 0x43ac <__prologue_saves__+0x20>
     d5e:	69 83       	std	Y+1, r22	; 0x01
     d60:	7a 83       	std	Y+2, r23	; 0x02
     d62:	8b 83       	std	Y+3, r24	; 0x03
     d64:	9c 83       	std	Y+4, r25	; 0x04
     d66:	ce 01       	movw	r24, r28
     d68:	01 96       	adiw	r24, 0x01	; 1
     d6a:	be 01       	movw	r22, r28
     d6c:	6b 5f       	subi	r22, 0xFB	; 251
     d6e:	7f 4f       	sbci	r23, 0xFF	; 255
     d70:	0e 94 19 09 	call	0x1232	; 0x1232 <__unpack_f>
     d74:	8d 81       	ldd	r24, Y+5	; 0x05
     d76:	82 30       	cpi	r24, 0x02	; 2
     d78:	61 f1       	breq	.+88     	; 0xdd2 <__fixsfsi+0x80>
     d7a:	82 30       	cpi	r24, 0x02	; 2
     d7c:	50 f1       	brcs	.+84     	; 0xdd2 <__fixsfsi+0x80>
     d7e:	84 30       	cpi	r24, 0x04	; 4
     d80:	21 f4       	brne	.+8      	; 0xd8a <__fixsfsi+0x38>
     d82:	8e 81       	ldd	r24, Y+6	; 0x06
     d84:	88 23       	and	r24, r24
     d86:	51 f1       	breq	.+84     	; 0xddc <__fixsfsi+0x8a>
     d88:	2e c0       	rjmp	.+92     	; 0xde6 <__fixsfsi+0x94>
     d8a:	2f 81       	ldd	r18, Y+7	; 0x07
     d8c:	38 85       	ldd	r19, Y+8	; 0x08
     d8e:	37 fd       	sbrc	r19, 7
     d90:	20 c0       	rjmp	.+64     	; 0xdd2 <__fixsfsi+0x80>
     d92:	6e 81       	ldd	r22, Y+6	; 0x06
     d94:	2f 31       	cpi	r18, 0x1F	; 31
     d96:	31 05       	cpc	r19, r1
     d98:	1c f0       	brlt	.+6      	; 0xda0 <__fixsfsi+0x4e>
     d9a:	66 23       	and	r22, r22
     d9c:	f9 f0       	breq	.+62     	; 0xddc <__fixsfsi+0x8a>
     d9e:	23 c0       	rjmp	.+70     	; 0xde6 <__fixsfsi+0x94>
     da0:	8e e1       	ldi	r24, 0x1E	; 30
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	82 1b       	sub	r24, r18
     da6:	93 0b       	sbc	r25, r19
     da8:	29 85       	ldd	r18, Y+9	; 0x09
     daa:	3a 85       	ldd	r19, Y+10	; 0x0a
     dac:	4b 85       	ldd	r20, Y+11	; 0x0b
     dae:	5c 85       	ldd	r21, Y+12	; 0x0c
     db0:	04 c0       	rjmp	.+8      	; 0xdba <__fixsfsi+0x68>
     db2:	56 95       	lsr	r21
     db4:	47 95       	ror	r20
     db6:	37 95       	ror	r19
     db8:	27 95       	ror	r18
     dba:	8a 95       	dec	r24
     dbc:	d2 f7       	brpl	.-12     	; 0xdb2 <__fixsfsi+0x60>
     dbe:	66 23       	and	r22, r22
     dc0:	b1 f0       	breq	.+44     	; 0xdee <__fixsfsi+0x9c>
     dc2:	50 95       	com	r21
     dc4:	40 95       	com	r20
     dc6:	30 95       	com	r19
     dc8:	21 95       	neg	r18
     dca:	3f 4f       	sbci	r19, 0xFF	; 255
     dcc:	4f 4f       	sbci	r20, 0xFF	; 255
     dce:	5f 4f       	sbci	r21, 0xFF	; 255
     dd0:	0e c0       	rjmp	.+28     	; 0xdee <__fixsfsi+0x9c>
     dd2:	20 e0       	ldi	r18, 0x00	; 0
     dd4:	30 e0       	ldi	r19, 0x00	; 0
     dd6:	40 e0       	ldi	r20, 0x00	; 0
     dd8:	50 e0       	ldi	r21, 0x00	; 0
     dda:	09 c0       	rjmp	.+18     	; 0xdee <__fixsfsi+0x9c>
     ddc:	2f ef       	ldi	r18, 0xFF	; 255
     dde:	3f ef       	ldi	r19, 0xFF	; 255
     de0:	4f ef       	ldi	r20, 0xFF	; 255
     de2:	5f e7       	ldi	r21, 0x7F	; 127
     de4:	04 c0       	rjmp	.+8      	; 0xdee <__fixsfsi+0x9c>
     de6:	20 e0       	ldi	r18, 0x00	; 0
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	40 e0       	ldi	r20, 0x00	; 0
     dec:	50 e8       	ldi	r21, 0x80	; 128
     dee:	b9 01       	movw	r22, r18
     df0:	ca 01       	movw	r24, r20
     df2:	2c 96       	adiw	r28, 0x0c	; 12
     df4:	e2 e0       	ldi	r30, 0x02	; 2
     df6:	0c 94 f2 21 	jmp	0x43e4	; 0x43e4 <__epilogue_restores__+0x20>

00000dfa <__floatunsisf>:
     dfa:	a8 e0       	ldi	r26, 0x08	; 8
     dfc:	b0 e0       	ldi	r27, 0x00	; 0
     dfe:	e3 e0       	ldi	r30, 0x03	; 3
     e00:	f7 e0       	ldi	r31, 0x07	; 7
     e02:	0c 94 ce 21 	jmp	0x439c	; 0x439c <__prologue_saves__+0x10>
     e06:	7b 01       	movw	r14, r22
     e08:	8c 01       	movw	r16, r24
     e0a:	61 15       	cp	r22, r1
     e0c:	71 05       	cpc	r23, r1
     e0e:	81 05       	cpc	r24, r1
     e10:	91 05       	cpc	r25, r1
     e12:	19 f4       	brne	.+6      	; 0xe1a <__floatunsisf+0x20>
     e14:	82 e0       	ldi	r24, 0x02	; 2
     e16:	89 83       	std	Y+1, r24	; 0x01
     e18:	60 c0       	rjmp	.+192    	; 0xeda <__floatunsisf+0xe0>
     e1a:	83 e0       	ldi	r24, 0x03	; 3
     e1c:	89 83       	std	Y+1, r24	; 0x01
     e1e:	8e e1       	ldi	r24, 0x1E	; 30
     e20:	c8 2e       	mov	r12, r24
     e22:	d1 2c       	mov	r13, r1
     e24:	dc 82       	std	Y+4, r13	; 0x04
     e26:	cb 82       	std	Y+3, r12	; 0x03
     e28:	ed 82       	std	Y+5, r14	; 0x05
     e2a:	fe 82       	std	Y+6, r15	; 0x06
     e2c:	0f 83       	std	Y+7, r16	; 0x07
     e2e:	18 87       	std	Y+8, r17	; 0x08
     e30:	c8 01       	movw	r24, r16
     e32:	b7 01       	movw	r22, r14
     e34:	0e 94 f5 07 	call	0xfea	; 0xfea <__clzsi2>
     e38:	fc 01       	movw	r30, r24
     e3a:	31 97       	sbiw	r30, 0x01	; 1
     e3c:	f7 ff       	sbrs	r31, 7
     e3e:	3b c0       	rjmp	.+118    	; 0xeb6 <__floatunsisf+0xbc>
     e40:	22 27       	eor	r18, r18
     e42:	33 27       	eor	r19, r19
     e44:	2e 1b       	sub	r18, r30
     e46:	3f 0b       	sbc	r19, r31
     e48:	57 01       	movw	r10, r14
     e4a:	68 01       	movw	r12, r16
     e4c:	02 2e       	mov	r0, r18
     e4e:	04 c0       	rjmp	.+8      	; 0xe58 <__floatunsisf+0x5e>
     e50:	d6 94       	lsr	r13
     e52:	c7 94       	ror	r12
     e54:	b7 94       	ror	r11
     e56:	a7 94       	ror	r10
     e58:	0a 94       	dec	r0
     e5a:	d2 f7       	brpl	.-12     	; 0xe50 <__floatunsisf+0x56>
     e5c:	40 e0       	ldi	r20, 0x00	; 0
     e5e:	50 e0       	ldi	r21, 0x00	; 0
     e60:	60 e0       	ldi	r22, 0x00	; 0
     e62:	70 e0       	ldi	r23, 0x00	; 0
     e64:	81 e0       	ldi	r24, 0x01	; 1
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	a0 e0       	ldi	r26, 0x00	; 0
     e6a:	b0 e0       	ldi	r27, 0x00	; 0
     e6c:	04 c0       	rjmp	.+8      	; 0xe76 <__floatunsisf+0x7c>
     e6e:	88 0f       	add	r24, r24
     e70:	99 1f       	adc	r25, r25
     e72:	aa 1f       	adc	r26, r26
     e74:	bb 1f       	adc	r27, r27
     e76:	2a 95       	dec	r18
     e78:	d2 f7       	brpl	.-12     	; 0xe6e <__floatunsisf+0x74>
     e7a:	01 97       	sbiw	r24, 0x01	; 1
     e7c:	a1 09       	sbc	r26, r1
     e7e:	b1 09       	sbc	r27, r1
     e80:	8e 21       	and	r24, r14
     e82:	9f 21       	and	r25, r15
     e84:	a0 23       	and	r26, r16
     e86:	b1 23       	and	r27, r17
     e88:	00 97       	sbiw	r24, 0x00	; 0
     e8a:	a1 05       	cpc	r26, r1
     e8c:	b1 05       	cpc	r27, r1
     e8e:	21 f0       	breq	.+8      	; 0xe98 <__floatunsisf+0x9e>
     e90:	41 e0       	ldi	r20, 0x01	; 1
     e92:	50 e0       	ldi	r21, 0x00	; 0
     e94:	60 e0       	ldi	r22, 0x00	; 0
     e96:	70 e0       	ldi	r23, 0x00	; 0
     e98:	4a 29       	or	r20, r10
     e9a:	5b 29       	or	r21, r11
     e9c:	6c 29       	or	r22, r12
     e9e:	7d 29       	or	r23, r13
     ea0:	4d 83       	std	Y+5, r20	; 0x05
     ea2:	5e 83       	std	Y+6, r21	; 0x06
     ea4:	6f 83       	std	Y+7, r22	; 0x07
     ea6:	78 87       	std	Y+8, r23	; 0x08
     ea8:	8e e1       	ldi	r24, 0x1E	; 30
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	8e 1b       	sub	r24, r30
     eae:	9f 0b       	sbc	r25, r31
     eb0:	9c 83       	std	Y+4, r25	; 0x04
     eb2:	8b 83       	std	Y+3, r24	; 0x03
     eb4:	12 c0       	rjmp	.+36     	; 0xeda <__floatunsisf+0xe0>
     eb6:	30 97       	sbiw	r30, 0x00	; 0
     eb8:	81 f0       	breq	.+32     	; 0xeda <__floatunsisf+0xe0>
     eba:	0e 2e       	mov	r0, r30
     ebc:	04 c0       	rjmp	.+8      	; 0xec6 <__floatunsisf+0xcc>
     ebe:	ee 0c       	add	r14, r14
     ec0:	ff 1c       	adc	r15, r15
     ec2:	00 1f       	adc	r16, r16
     ec4:	11 1f       	adc	r17, r17
     ec6:	0a 94       	dec	r0
     ec8:	d2 f7       	brpl	.-12     	; 0xebe <__floatunsisf+0xc4>
     eca:	ed 82       	std	Y+5, r14	; 0x05
     ecc:	fe 82       	std	Y+6, r15	; 0x06
     ece:	0f 83       	std	Y+7, r16	; 0x07
     ed0:	18 87       	std	Y+8, r17	; 0x08
     ed2:	ce 1a       	sub	r12, r30
     ed4:	df 0a       	sbc	r13, r31
     ed6:	dc 82       	std	Y+4, r13	; 0x04
     ed8:	cb 82       	std	Y+3, r12	; 0x03
     eda:	1a 82       	std	Y+2, r1	; 0x02
     edc:	ce 01       	movw	r24, r28
     ede:	01 96       	adiw	r24, 0x01	; 1
     ee0:	0e 94 44 08 	call	0x1088	; 0x1088 <__pack_f>
     ee4:	28 96       	adiw	r28, 0x08	; 8
     ee6:	ea e0       	ldi	r30, 0x0A	; 10
     ee8:	0c 94 ea 21 	jmp	0x43d4	; 0x43d4 <__epilogue_restores__+0x10>

00000eec <__lshrdi3>:
     eec:	ef 92       	push	r14
     eee:	ff 92       	push	r15
     ef0:	0f 93       	push	r16
     ef2:	df 93       	push	r29
     ef4:	cf 93       	push	r28
     ef6:	cd b7       	in	r28, 0x3d	; 61
     ef8:	de b7       	in	r29, 0x3e	; 62
     efa:	60 97       	sbiw	r28, 0x10	; 16
     efc:	0f b6       	in	r0, 0x3f	; 63
     efe:	f8 94       	cli
     f00:	de bf       	out	0x3e, r29	; 62
     f02:	0f be       	out	0x3f, r0	; 63
     f04:	cd bf       	out	0x3d, r28	; 61
     f06:	a8 2f       	mov	r26, r24
     f08:	00 23       	and	r16, r16
     f0a:	09 f4       	brne	.+2      	; 0xf0e <__lshrdi3+0x22>
     f0c:	61 c0       	rjmp	.+194    	; 0xfd0 <__lshrdi3+0xe4>
     f0e:	7e 01       	movw	r14, r28
     f10:	08 94       	sec
     f12:	e1 1c       	adc	r14, r1
     f14:	f1 1c       	adc	r15, r1
     f16:	88 e0       	ldi	r24, 0x08	; 8
     f18:	f7 01       	movw	r30, r14
     f1a:	11 92       	st	Z+, r1
     f1c:	8a 95       	dec	r24
     f1e:	e9 f7       	brne	.-6      	; 0xf1a <__lshrdi3+0x2e>
     f20:	29 83       	std	Y+1, r18	; 0x01
     f22:	3a 83       	std	Y+2, r19	; 0x02
     f24:	4b 83       	std	Y+3, r20	; 0x03
     f26:	5c 83       	std	Y+4, r21	; 0x04
     f28:	6d 83       	std	Y+5, r22	; 0x05
     f2a:	7e 83       	std	Y+6, r23	; 0x06
     f2c:	af 83       	std	Y+7, r26	; 0x07
     f2e:	98 87       	std	Y+8, r25	; 0x08
     f30:	80 e2       	ldi	r24, 0x20	; 32
     f32:	80 1b       	sub	r24, r16
     f34:	e8 2f       	mov	r30, r24
     f36:	ff 27       	eor	r31, r31
     f38:	e7 fd       	sbrc	r30, 7
     f3a:	f0 95       	com	r31
     f3c:	4d 81       	ldd	r20, Y+5	; 0x05
     f3e:	5e 81       	ldd	r21, Y+6	; 0x06
     f40:	6f 81       	ldd	r22, Y+7	; 0x07
     f42:	78 85       	ldd	r23, Y+8	; 0x08
     f44:	18 16       	cp	r1, r24
     f46:	84 f0       	brlt	.+32     	; 0xf68 <__lshrdi3+0x7c>
     f48:	1d 86       	std	Y+13, r1	; 0x0d
     f4a:	1e 86       	std	Y+14, r1	; 0x0e
     f4c:	1f 86       	std	Y+15, r1	; 0x0f
     f4e:	18 8a       	std	Y+16, r1	; 0x10
     f50:	88 27       	eor	r24, r24
     f52:	99 27       	eor	r25, r25
     f54:	8e 1b       	sub	r24, r30
     f56:	9f 0b       	sbc	r25, r31
     f58:	04 c0       	rjmp	.+8      	; 0xf62 <__lshrdi3+0x76>
     f5a:	76 95       	lsr	r23
     f5c:	67 95       	ror	r22
     f5e:	57 95       	ror	r21
     f60:	47 95       	ror	r20
     f62:	8a 95       	dec	r24
     f64:	d2 f7       	brpl	.-12     	; 0xf5a <__lshrdi3+0x6e>
     f66:	28 c0       	rjmp	.+80     	; 0xfb8 <__lshrdi3+0xcc>
     f68:	20 2f       	mov	r18, r16
     f6a:	33 27       	eor	r19, r19
     f6c:	27 fd       	sbrc	r18, 7
     f6e:	30 95       	com	r19
     f70:	db 01       	movw	r26, r22
     f72:	ca 01       	movw	r24, r20
     f74:	02 2e       	mov	r0, r18
     f76:	04 c0       	rjmp	.+8      	; 0xf80 <__lshrdi3+0x94>
     f78:	b6 95       	lsr	r27
     f7a:	a7 95       	ror	r26
     f7c:	97 95       	ror	r25
     f7e:	87 95       	ror	r24
     f80:	0a 94       	dec	r0
     f82:	d2 f7       	brpl	.-12     	; 0xf78 <__lshrdi3+0x8c>
     f84:	8d 87       	std	Y+13, r24	; 0x0d
     f86:	9e 87       	std	Y+14, r25	; 0x0e
     f88:	af 87       	std	Y+15, r26	; 0x0f
     f8a:	b8 8b       	std	Y+16, r27	; 0x10
     f8c:	04 c0       	rjmp	.+8      	; 0xf96 <__lshrdi3+0xaa>
     f8e:	44 0f       	add	r20, r20
     f90:	55 1f       	adc	r21, r21
     f92:	66 1f       	adc	r22, r22
     f94:	77 1f       	adc	r23, r23
     f96:	ea 95       	dec	r30
     f98:	d2 f7       	brpl	.-12     	; 0xf8e <__lshrdi3+0xa2>
     f9a:	89 81       	ldd	r24, Y+1	; 0x01
     f9c:	9a 81       	ldd	r25, Y+2	; 0x02
     f9e:	ab 81       	ldd	r26, Y+3	; 0x03
     fa0:	bc 81       	ldd	r27, Y+4	; 0x04
     fa2:	04 c0       	rjmp	.+8      	; 0xfac <__lshrdi3+0xc0>
     fa4:	b6 95       	lsr	r27
     fa6:	a7 95       	ror	r26
     fa8:	97 95       	ror	r25
     faa:	87 95       	ror	r24
     fac:	2a 95       	dec	r18
     fae:	d2 f7       	brpl	.-12     	; 0xfa4 <__lshrdi3+0xb8>
     fb0:	48 2b       	or	r20, r24
     fb2:	59 2b       	or	r21, r25
     fb4:	6a 2b       	or	r22, r26
     fb6:	7b 2b       	or	r23, r27
     fb8:	49 87       	std	Y+9, r20	; 0x09
     fba:	5a 87       	std	Y+10, r21	; 0x0a
     fbc:	6b 87       	std	Y+11, r22	; 0x0b
     fbe:	7c 87       	std	Y+12, r23	; 0x0c
     fc0:	29 85       	ldd	r18, Y+9	; 0x09
     fc2:	3a 85       	ldd	r19, Y+10	; 0x0a
     fc4:	4b 85       	ldd	r20, Y+11	; 0x0b
     fc6:	5c 85       	ldd	r21, Y+12	; 0x0c
     fc8:	6d 85       	ldd	r22, Y+13	; 0x0d
     fca:	7e 85       	ldd	r23, Y+14	; 0x0e
     fcc:	af 85       	ldd	r26, Y+15	; 0x0f
     fce:	98 89       	ldd	r25, Y+16	; 0x10
     fd0:	8a 2f       	mov	r24, r26
     fd2:	60 96       	adiw	r28, 0x10	; 16
     fd4:	0f b6       	in	r0, 0x3f	; 63
     fd6:	f8 94       	cli
     fd8:	de bf       	out	0x3e, r29	; 62
     fda:	0f be       	out	0x3f, r0	; 63
     fdc:	cd bf       	out	0x3d, r28	; 61
     fde:	cf 91       	pop	r28
     fe0:	df 91       	pop	r29
     fe2:	0f 91       	pop	r16
     fe4:	ff 90       	pop	r15
     fe6:	ef 90       	pop	r14
     fe8:	08 95       	ret

00000fea <__clzsi2>:
     fea:	ef 92       	push	r14
     fec:	ff 92       	push	r15
     fee:	0f 93       	push	r16
     ff0:	1f 93       	push	r17
     ff2:	7b 01       	movw	r14, r22
     ff4:	8c 01       	movw	r16, r24
     ff6:	80 e0       	ldi	r24, 0x00	; 0
     ff8:	e8 16       	cp	r14, r24
     ffa:	80 e0       	ldi	r24, 0x00	; 0
     ffc:	f8 06       	cpc	r15, r24
     ffe:	81 e0       	ldi	r24, 0x01	; 1
    1000:	08 07       	cpc	r16, r24
    1002:	80 e0       	ldi	r24, 0x00	; 0
    1004:	18 07       	cpc	r17, r24
    1006:	88 f4       	brcc	.+34     	; 0x102a <__clzsi2+0x40>
    1008:	8f ef       	ldi	r24, 0xFF	; 255
    100a:	e8 16       	cp	r14, r24
    100c:	f1 04       	cpc	r15, r1
    100e:	01 05       	cpc	r16, r1
    1010:	11 05       	cpc	r17, r1
    1012:	31 f0       	breq	.+12     	; 0x1020 <__clzsi2+0x36>
    1014:	28 f0       	brcs	.+10     	; 0x1020 <__clzsi2+0x36>
    1016:	88 e0       	ldi	r24, 0x08	; 8
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	a0 e0       	ldi	r26, 0x00	; 0
    101c:	b0 e0       	ldi	r27, 0x00	; 0
    101e:	17 c0       	rjmp	.+46     	; 0x104e <__clzsi2+0x64>
    1020:	80 e0       	ldi	r24, 0x00	; 0
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	a0 e0       	ldi	r26, 0x00	; 0
    1026:	b0 e0       	ldi	r27, 0x00	; 0
    1028:	12 c0       	rjmp	.+36     	; 0x104e <__clzsi2+0x64>
    102a:	80 e0       	ldi	r24, 0x00	; 0
    102c:	e8 16       	cp	r14, r24
    102e:	80 e0       	ldi	r24, 0x00	; 0
    1030:	f8 06       	cpc	r15, r24
    1032:	80 e0       	ldi	r24, 0x00	; 0
    1034:	08 07       	cpc	r16, r24
    1036:	81 e0       	ldi	r24, 0x01	; 1
    1038:	18 07       	cpc	r17, r24
    103a:	28 f0       	brcs	.+10     	; 0x1046 <__clzsi2+0x5c>
    103c:	88 e1       	ldi	r24, 0x18	; 24
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	a0 e0       	ldi	r26, 0x00	; 0
    1042:	b0 e0       	ldi	r27, 0x00	; 0
    1044:	04 c0       	rjmp	.+8      	; 0x104e <__clzsi2+0x64>
    1046:	80 e1       	ldi	r24, 0x10	; 16
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	a0 e0       	ldi	r26, 0x00	; 0
    104c:	b0 e0       	ldi	r27, 0x00	; 0
    104e:	20 e2       	ldi	r18, 0x20	; 32
    1050:	30 e0       	ldi	r19, 0x00	; 0
    1052:	40 e0       	ldi	r20, 0x00	; 0
    1054:	50 e0       	ldi	r21, 0x00	; 0
    1056:	28 1b       	sub	r18, r24
    1058:	39 0b       	sbc	r19, r25
    105a:	4a 0b       	sbc	r20, r26
    105c:	5b 0b       	sbc	r21, r27
    105e:	04 c0       	rjmp	.+8      	; 0x1068 <__clzsi2+0x7e>
    1060:	16 95       	lsr	r17
    1062:	07 95       	ror	r16
    1064:	f7 94       	ror	r15
    1066:	e7 94       	ror	r14
    1068:	8a 95       	dec	r24
    106a:	d2 f7       	brpl	.-12     	; 0x1060 <__clzsi2+0x76>
    106c:	f7 01       	movw	r30, r14
    106e:	e8 59       	subi	r30, 0x98	; 152
    1070:	ff 4f       	sbci	r31, 0xFF	; 255
    1072:	80 81       	ld	r24, Z
    1074:	28 1b       	sub	r18, r24
    1076:	31 09       	sbc	r19, r1
    1078:	41 09       	sbc	r20, r1
    107a:	51 09       	sbc	r21, r1
    107c:	c9 01       	movw	r24, r18
    107e:	1f 91       	pop	r17
    1080:	0f 91       	pop	r16
    1082:	ff 90       	pop	r15
    1084:	ef 90       	pop	r14
    1086:	08 95       	ret

00001088 <__pack_f>:
    1088:	df 92       	push	r13
    108a:	ef 92       	push	r14
    108c:	ff 92       	push	r15
    108e:	0f 93       	push	r16
    1090:	1f 93       	push	r17
    1092:	fc 01       	movw	r30, r24
    1094:	e4 80       	ldd	r14, Z+4	; 0x04
    1096:	f5 80       	ldd	r15, Z+5	; 0x05
    1098:	06 81       	ldd	r16, Z+6	; 0x06
    109a:	17 81       	ldd	r17, Z+7	; 0x07
    109c:	d1 80       	ldd	r13, Z+1	; 0x01
    109e:	80 81       	ld	r24, Z
    10a0:	82 30       	cpi	r24, 0x02	; 2
    10a2:	48 f4       	brcc	.+18     	; 0x10b6 <__pack_f+0x2e>
    10a4:	80 e0       	ldi	r24, 0x00	; 0
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	a0 e1       	ldi	r26, 0x10	; 16
    10aa:	b0 e0       	ldi	r27, 0x00	; 0
    10ac:	e8 2a       	or	r14, r24
    10ae:	f9 2a       	or	r15, r25
    10b0:	0a 2b       	or	r16, r26
    10b2:	1b 2b       	or	r17, r27
    10b4:	a5 c0       	rjmp	.+330    	; 0x1200 <__pack_f+0x178>
    10b6:	84 30       	cpi	r24, 0x04	; 4
    10b8:	09 f4       	brne	.+2      	; 0x10bc <__pack_f+0x34>
    10ba:	9f c0       	rjmp	.+318    	; 0x11fa <__pack_f+0x172>
    10bc:	82 30       	cpi	r24, 0x02	; 2
    10be:	21 f4       	brne	.+8      	; 0x10c8 <__pack_f+0x40>
    10c0:	ee 24       	eor	r14, r14
    10c2:	ff 24       	eor	r15, r15
    10c4:	87 01       	movw	r16, r14
    10c6:	05 c0       	rjmp	.+10     	; 0x10d2 <__pack_f+0x4a>
    10c8:	e1 14       	cp	r14, r1
    10ca:	f1 04       	cpc	r15, r1
    10cc:	01 05       	cpc	r16, r1
    10ce:	11 05       	cpc	r17, r1
    10d0:	19 f4       	brne	.+6      	; 0x10d8 <__pack_f+0x50>
    10d2:	e0 e0       	ldi	r30, 0x00	; 0
    10d4:	f0 e0       	ldi	r31, 0x00	; 0
    10d6:	96 c0       	rjmp	.+300    	; 0x1204 <__pack_f+0x17c>
    10d8:	62 81       	ldd	r22, Z+2	; 0x02
    10da:	73 81       	ldd	r23, Z+3	; 0x03
    10dc:	9f ef       	ldi	r25, 0xFF	; 255
    10de:	62 38       	cpi	r22, 0x82	; 130
    10e0:	79 07       	cpc	r23, r25
    10e2:	0c f0       	brlt	.+2      	; 0x10e6 <__pack_f+0x5e>
    10e4:	5b c0       	rjmp	.+182    	; 0x119c <__pack_f+0x114>
    10e6:	22 e8       	ldi	r18, 0x82	; 130
    10e8:	3f ef       	ldi	r19, 0xFF	; 255
    10ea:	26 1b       	sub	r18, r22
    10ec:	37 0b       	sbc	r19, r23
    10ee:	2a 31       	cpi	r18, 0x1A	; 26
    10f0:	31 05       	cpc	r19, r1
    10f2:	2c f0       	brlt	.+10     	; 0x10fe <__pack_f+0x76>
    10f4:	20 e0       	ldi	r18, 0x00	; 0
    10f6:	30 e0       	ldi	r19, 0x00	; 0
    10f8:	40 e0       	ldi	r20, 0x00	; 0
    10fa:	50 e0       	ldi	r21, 0x00	; 0
    10fc:	2a c0       	rjmp	.+84     	; 0x1152 <__pack_f+0xca>
    10fe:	b8 01       	movw	r22, r16
    1100:	a7 01       	movw	r20, r14
    1102:	02 2e       	mov	r0, r18
    1104:	04 c0       	rjmp	.+8      	; 0x110e <__pack_f+0x86>
    1106:	76 95       	lsr	r23
    1108:	67 95       	ror	r22
    110a:	57 95       	ror	r21
    110c:	47 95       	ror	r20
    110e:	0a 94       	dec	r0
    1110:	d2 f7       	brpl	.-12     	; 0x1106 <__pack_f+0x7e>
    1112:	81 e0       	ldi	r24, 0x01	; 1
    1114:	90 e0       	ldi	r25, 0x00	; 0
    1116:	a0 e0       	ldi	r26, 0x00	; 0
    1118:	b0 e0       	ldi	r27, 0x00	; 0
    111a:	04 c0       	rjmp	.+8      	; 0x1124 <__pack_f+0x9c>
    111c:	88 0f       	add	r24, r24
    111e:	99 1f       	adc	r25, r25
    1120:	aa 1f       	adc	r26, r26
    1122:	bb 1f       	adc	r27, r27
    1124:	2a 95       	dec	r18
    1126:	d2 f7       	brpl	.-12     	; 0x111c <__pack_f+0x94>
    1128:	01 97       	sbiw	r24, 0x01	; 1
    112a:	a1 09       	sbc	r26, r1
    112c:	b1 09       	sbc	r27, r1
    112e:	8e 21       	and	r24, r14
    1130:	9f 21       	and	r25, r15
    1132:	a0 23       	and	r26, r16
    1134:	b1 23       	and	r27, r17
    1136:	00 97       	sbiw	r24, 0x00	; 0
    1138:	a1 05       	cpc	r26, r1
    113a:	b1 05       	cpc	r27, r1
    113c:	21 f0       	breq	.+8      	; 0x1146 <__pack_f+0xbe>
    113e:	81 e0       	ldi	r24, 0x01	; 1
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	a0 e0       	ldi	r26, 0x00	; 0
    1144:	b0 e0       	ldi	r27, 0x00	; 0
    1146:	9a 01       	movw	r18, r20
    1148:	ab 01       	movw	r20, r22
    114a:	28 2b       	or	r18, r24
    114c:	39 2b       	or	r19, r25
    114e:	4a 2b       	or	r20, r26
    1150:	5b 2b       	or	r21, r27
    1152:	da 01       	movw	r26, r20
    1154:	c9 01       	movw	r24, r18
    1156:	8f 77       	andi	r24, 0x7F	; 127
    1158:	90 70       	andi	r25, 0x00	; 0
    115a:	a0 70       	andi	r26, 0x00	; 0
    115c:	b0 70       	andi	r27, 0x00	; 0
    115e:	80 34       	cpi	r24, 0x40	; 64
    1160:	91 05       	cpc	r25, r1
    1162:	a1 05       	cpc	r26, r1
    1164:	b1 05       	cpc	r27, r1
    1166:	39 f4       	brne	.+14     	; 0x1176 <__pack_f+0xee>
    1168:	27 ff       	sbrs	r18, 7
    116a:	09 c0       	rjmp	.+18     	; 0x117e <__pack_f+0xf6>
    116c:	20 5c       	subi	r18, 0xC0	; 192
    116e:	3f 4f       	sbci	r19, 0xFF	; 255
    1170:	4f 4f       	sbci	r20, 0xFF	; 255
    1172:	5f 4f       	sbci	r21, 0xFF	; 255
    1174:	04 c0       	rjmp	.+8      	; 0x117e <__pack_f+0xf6>
    1176:	21 5c       	subi	r18, 0xC1	; 193
    1178:	3f 4f       	sbci	r19, 0xFF	; 255
    117a:	4f 4f       	sbci	r20, 0xFF	; 255
    117c:	5f 4f       	sbci	r21, 0xFF	; 255
    117e:	e0 e0       	ldi	r30, 0x00	; 0
    1180:	f0 e0       	ldi	r31, 0x00	; 0
    1182:	20 30       	cpi	r18, 0x00	; 0
    1184:	a0 e0       	ldi	r26, 0x00	; 0
    1186:	3a 07       	cpc	r19, r26
    1188:	a0 e0       	ldi	r26, 0x00	; 0
    118a:	4a 07       	cpc	r20, r26
    118c:	a0 e4       	ldi	r26, 0x40	; 64
    118e:	5a 07       	cpc	r21, r26
    1190:	10 f0       	brcs	.+4      	; 0x1196 <__pack_f+0x10e>
    1192:	e1 e0       	ldi	r30, 0x01	; 1
    1194:	f0 e0       	ldi	r31, 0x00	; 0
    1196:	79 01       	movw	r14, r18
    1198:	8a 01       	movw	r16, r20
    119a:	27 c0       	rjmp	.+78     	; 0x11ea <__pack_f+0x162>
    119c:	60 38       	cpi	r22, 0x80	; 128
    119e:	71 05       	cpc	r23, r1
    11a0:	64 f5       	brge	.+88     	; 0x11fa <__pack_f+0x172>
    11a2:	fb 01       	movw	r30, r22
    11a4:	e1 58       	subi	r30, 0x81	; 129
    11a6:	ff 4f       	sbci	r31, 0xFF	; 255
    11a8:	d8 01       	movw	r26, r16
    11aa:	c7 01       	movw	r24, r14
    11ac:	8f 77       	andi	r24, 0x7F	; 127
    11ae:	90 70       	andi	r25, 0x00	; 0
    11b0:	a0 70       	andi	r26, 0x00	; 0
    11b2:	b0 70       	andi	r27, 0x00	; 0
    11b4:	80 34       	cpi	r24, 0x40	; 64
    11b6:	91 05       	cpc	r25, r1
    11b8:	a1 05       	cpc	r26, r1
    11ba:	b1 05       	cpc	r27, r1
    11bc:	39 f4       	brne	.+14     	; 0x11cc <__pack_f+0x144>
    11be:	e7 fe       	sbrs	r14, 7
    11c0:	0d c0       	rjmp	.+26     	; 0x11dc <__pack_f+0x154>
    11c2:	80 e4       	ldi	r24, 0x40	; 64
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	a0 e0       	ldi	r26, 0x00	; 0
    11c8:	b0 e0       	ldi	r27, 0x00	; 0
    11ca:	04 c0       	rjmp	.+8      	; 0x11d4 <__pack_f+0x14c>
    11cc:	8f e3       	ldi	r24, 0x3F	; 63
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	a0 e0       	ldi	r26, 0x00	; 0
    11d2:	b0 e0       	ldi	r27, 0x00	; 0
    11d4:	e8 0e       	add	r14, r24
    11d6:	f9 1e       	adc	r15, r25
    11d8:	0a 1f       	adc	r16, r26
    11da:	1b 1f       	adc	r17, r27
    11dc:	17 ff       	sbrs	r17, 7
    11de:	05 c0       	rjmp	.+10     	; 0x11ea <__pack_f+0x162>
    11e0:	16 95       	lsr	r17
    11e2:	07 95       	ror	r16
    11e4:	f7 94       	ror	r15
    11e6:	e7 94       	ror	r14
    11e8:	31 96       	adiw	r30, 0x01	; 1
    11ea:	87 e0       	ldi	r24, 0x07	; 7
    11ec:	16 95       	lsr	r17
    11ee:	07 95       	ror	r16
    11f0:	f7 94       	ror	r15
    11f2:	e7 94       	ror	r14
    11f4:	8a 95       	dec	r24
    11f6:	d1 f7       	brne	.-12     	; 0x11ec <__pack_f+0x164>
    11f8:	05 c0       	rjmp	.+10     	; 0x1204 <__pack_f+0x17c>
    11fa:	ee 24       	eor	r14, r14
    11fc:	ff 24       	eor	r15, r15
    11fe:	87 01       	movw	r16, r14
    1200:	ef ef       	ldi	r30, 0xFF	; 255
    1202:	f0 e0       	ldi	r31, 0x00	; 0
    1204:	6e 2f       	mov	r22, r30
    1206:	67 95       	ror	r22
    1208:	66 27       	eor	r22, r22
    120a:	67 95       	ror	r22
    120c:	90 2f       	mov	r25, r16
    120e:	9f 77       	andi	r25, 0x7F	; 127
    1210:	d7 94       	ror	r13
    1212:	dd 24       	eor	r13, r13
    1214:	d7 94       	ror	r13
    1216:	8e 2f       	mov	r24, r30
    1218:	86 95       	lsr	r24
    121a:	49 2f       	mov	r20, r25
    121c:	46 2b       	or	r20, r22
    121e:	58 2f       	mov	r21, r24
    1220:	5d 29       	or	r21, r13
    1222:	b7 01       	movw	r22, r14
    1224:	ca 01       	movw	r24, r20
    1226:	1f 91       	pop	r17
    1228:	0f 91       	pop	r16
    122a:	ff 90       	pop	r15
    122c:	ef 90       	pop	r14
    122e:	df 90       	pop	r13
    1230:	08 95       	ret

00001232 <__unpack_f>:
    1232:	fc 01       	movw	r30, r24
    1234:	db 01       	movw	r26, r22
    1236:	40 81       	ld	r20, Z
    1238:	51 81       	ldd	r21, Z+1	; 0x01
    123a:	22 81       	ldd	r18, Z+2	; 0x02
    123c:	62 2f       	mov	r22, r18
    123e:	6f 77       	andi	r22, 0x7F	; 127
    1240:	70 e0       	ldi	r23, 0x00	; 0
    1242:	22 1f       	adc	r18, r18
    1244:	22 27       	eor	r18, r18
    1246:	22 1f       	adc	r18, r18
    1248:	93 81       	ldd	r25, Z+3	; 0x03
    124a:	89 2f       	mov	r24, r25
    124c:	88 0f       	add	r24, r24
    124e:	82 2b       	or	r24, r18
    1250:	28 2f       	mov	r18, r24
    1252:	30 e0       	ldi	r19, 0x00	; 0
    1254:	99 1f       	adc	r25, r25
    1256:	99 27       	eor	r25, r25
    1258:	99 1f       	adc	r25, r25
    125a:	11 96       	adiw	r26, 0x01	; 1
    125c:	9c 93       	st	X, r25
    125e:	11 97       	sbiw	r26, 0x01	; 1
    1260:	21 15       	cp	r18, r1
    1262:	31 05       	cpc	r19, r1
    1264:	a9 f5       	brne	.+106    	; 0x12d0 <__unpack_f+0x9e>
    1266:	41 15       	cp	r20, r1
    1268:	51 05       	cpc	r21, r1
    126a:	61 05       	cpc	r22, r1
    126c:	71 05       	cpc	r23, r1
    126e:	11 f4       	brne	.+4      	; 0x1274 <__unpack_f+0x42>
    1270:	82 e0       	ldi	r24, 0x02	; 2
    1272:	37 c0       	rjmp	.+110    	; 0x12e2 <__unpack_f+0xb0>
    1274:	82 e8       	ldi	r24, 0x82	; 130
    1276:	9f ef       	ldi	r25, 0xFF	; 255
    1278:	13 96       	adiw	r26, 0x03	; 3
    127a:	9c 93       	st	X, r25
    127c:	8e 93       	st	-X, r24
    127e:	12 97       	sbiw	r26, 0x02	; 2
    1280:	9a 01       	movw	r18, r20
    1282:	ab 01       	movw	r20, r22
    1284:	67 e0       	ldi	r22, 0x07	; 7
    1286:	22 0f       	add	r18, r18
    1288:	33 1f       	adc	r19, r19
    128a:	44 1f       	adc	r20, r20
    128c:	55 1f       	adc	r21, r21
    128e:	6a 95       	dec	r22
    1290:	d1 f7       	brne	.-12     	; 0x1286 <__unpack_f+0x54>
    1292:	83 e0       	ldi	r24, 0x03	; 3
    1294:	8c 93       	st	X, r24
    1296:	0d c0       	rjmp	.+26     	; 0x12b2 <__unpack_f+0x80>
    1298:	22 0f       	add	r18, r18
    129a:	33 1f       	adc	r19, r19
    129c:	44 1f       	adc	r20, r20
    129e:	55 1f       	adc	r21, r21
    12a0:	12 96       	adiw	r26, 0x02	; 2
    12a2:	8d 91       	ld	r24, X+
    12a4:	9c 91       	ld	r25, X
    12a6:	13 97       	sbiw	r26, 0x03	; 3
    12a8:	01 97       	sbiw	r24, 0x01	; 1
    12aa:	13 96       	adiw	r26, 0x03	; 3
    12ac:	9c 93       	st	X, r25
    12ae:	8e 93       	st	-X, r24
    12b0:	12 97       	sbiw	r26, 0x02	; 2
    12b2:	20 30       	cpi	r18, 0x00	; 0
    12b4:	80 e0       	ldi	r24, 0x00	; 0
    12b6:	38 07       	cpc	r19, r24
    12b8:	80 e0       	ldi	r24, 0x00	; 0
    12ba:	48 07       	cpc	r20, r24
    12bc:	80 e4       	ldi	r24, 0x40	; 64
    12be:	58 07       	cpc	r21, r24
    12c0:	58 f3       	brcs	.-42     	; 0x1298 <__unpack_f+0x66>
    12c2:	14 96       	adiw	r26, 0x04	; 4
    12c4:	2d 93       	st	X+, r18
    12c6:	3d 93       	st	X+, r19
    12c8:	4d 93       	st	X+, r20
    12ca:	5c 93       	st	X, r21
    12cc:	17 97       	sbiw	r26, 0x07	; 7
    12ce:	08 95       	ret
    12d0:	2f 3f       	cpi	r18, 0xFF	; 255
    12d2:	31 05       	cpc	r19, r1
    12d4:	79 f4       	brne	.+30     	; 0x12f4 <__unpack_f+0xc2>
    12d6:	41 15       	cp	r20, r1
    12d8:	51 05       	cpc	r21, r1
    12da:	61 05       	cpc	r22, r1
    12dc:	71 05       	cpc	r23, r1
    12de:	19 f4       	brne	.+6      	; 0x12e6 <__unpack_f+0xb4>
    12e0:	84 e0       	ldi	r24, 0x04	; 4
    12e2:	8c 93       	st	X, r24
    12e4:	08 95       	ret
    12e6:	64 ff       	sbrs	r22, 4
    12e8:	03 c0       	rjmp	.+6      	; 0x12f0 <__unpack_f+0xbe>
    12ea:	81 e0       	ldi	r24, 0x01	; 1
    12ec:	8c 93       	st	X, r24
    12ee:	12 c0       	rjmp	.+36     	; 0x1314 <__unpack_f+0xe2>
    12f0:	1c 92       	st	X, r1
    12f2:	10 c0       	rjmp	.+32     	; 0x1314 <__unpack_f+0xe2>
    12f4:	2f 57       	subi	r18, 0x7F	; 127
    12f6:	30 40       	sbci	r19, 0x00	; 0
    12f8:	13 96       	adiw	r26, 0x03	; 3
    12fa:	3c 93       	st	X, r19
    12fc:	2e 93       	st	-X, r18
    12fe:	12 97       	sbiw	r26, 0x02	; 2
    1300:	83 e0       	ldi	r24, 0x03	; 3
    1302:	8c 93       	st	X, r24
    1304:	87 e0       	ldi	r24, 0x07	; 7
    1306:	44 0f       	add	r20, r20
    1308:	55 1f       	adc	r21, r21
    130a:	66 1f       	adc	r22, r22
    130c:	77 1f       	adc	r23, r23
    130e:	8a 95       	dec	r24
    1310:	d1 f7       	brne	.-12     	; 0x1306 <__unpack_f+0xd4>
    1312:	70 64       	ori	r23, 0x40	; 64
    1314:	14 96       	adiw	r26, 0x04	; 4
    1316:	4d 93       	st	X+, r20
    1318:	5d 93       	st	X+, r21
    131a:	6d 93       	st	X+, r22
    131c:	7c 93       	st	X, r23
    131e:	17 97       	sbiw	r26, 0x07	; 7
    1320:	08 95       	ret

00001322 <__fpcmp_parts_f>:
    1322:	1f 93       	push	r17
    1324:	dc 01       	movw	r26, r24
    1326:	fb 01       	movw	r30, r22
    1328:	9c 91       	ld	r25, X
    132a:	92 30       	cpi	r25, 0x02	; 2
    132c:	08 f4       	brcc	.+2      	; 0x1330 <__fpcmp_parts_f+0xe>
    132e:	47 c0       	rjmp	.+142    	; 0x13be <__fpcmp_parts_f+0x9c>
    1330:	80 81       	ld	r24, Z
    1332:	82 30       	cpi	r24, 0x02	; 2
    1334:	08 f4       	brcc	.+2      	; 0x1338 <__fpcmp_parts_f+0x16>
    1336:	43 c0       	rjmp	.+134    	; 0x13be <__fpcmp_parts_f+0x9c>
    1338:	94 30       	cpi	r25, 0x04	; 4
    133a:	51 f4       	brne	.+20     	; 0x1350 <__fpcmp_parts_f+0x2e>
    133c:	11 96       	adiw	r26, 0x01	; 1
    133e:	1c 91       	ld	r17, X
    1340:	84 30       	cpi	r24, 0x04	; 4
    1342:	99 f5       	brne	.+102    	; 0x13aa <__fpcmp_parts_f+0x88>
    1344:	81 81       	ldd	r24, Z+1	; 0x01
    1346:	68 2f       	mov	r22, r24
    1348:	70 e0       	ldi	r23, 0x00	; 0
    134a:	61 1b       	sub	r22, r17
    134c:	71 09       	sbc	r23, r1
    134e:	3f c0       	rjmp	.+126    	; 0x13ce <__fpcmp_parts_f+0xac>
    1350:	84 30       	cpi	r24, 0x04	; 4
    1352:	21 f0       	breq	.+8      	; 0x135c <__fpcmp_parts_f+0x3a>
    1354:	92 30       	cpi	r25, 0x02	; 2
    1356:	31 f4       	brne	.+12     	; 0x1364 <__fpcmp_parts_f+0x42>
    1358:	82 30       	cpi	r24, 0x02	; 2
    135a:	b9 f1       	breq	.+110    	; 0x13ca <__fpcmp_parts_f+0xa8>
    135c:	81 81       	ldd	r24, Z+1	; 0x01
    135e:	88 23       	and	r24, r24
    1360:	89 f1       	breq	.+98     	; 0x13c4 <__fpcmp_parts_f+0xa2>
    1362:	2d c0       	rjmp	.+90     	; 0x13be <__fpcmp_parts_f+0x9c>
    1364:	11 96       	adiw	r26, 0x01	; 1
    1366:	1c 91       	ld	r17, X
    1368:	11 97       	sbiw	r26, 0x01	; 1
    136a:	82 30       	cpi	r24, 0x02	; 2
    136c:	f1 f0       	breq	.+60     	; 0x13aa <__fpcmp_parts_f+0x88>
    136e:	81 81       	ldd	r24, Z+1	; 0x01
    1370:	18 17       	cp	r17, r24
    1372:	d9 f4       	brne	.+54     	; 0x13aa <__fpcmp_parts_f+0x88>
    1374:	12 96       	adiw	r26, 0x02	; 2
    1376:	2d 91       	ld	r18, X+
    1378:	3c 91       	ld	r19, X
    137a:	13 97       	sbiw	r26, 0x03	; 3
    137c:	82 81       	ldd	r24, Z+2	; 0x02
    137e:	93 81       	ldd	r25, Z+3	; 0x03
    1380:	82 17       	cp	r24, r18
    1382:	93 07       	cpc	r25, r19
    1384:	94 f0       	brlt	.+36     	; 0x13aa <__fpcmp_parts_f+0x88>
    1386:	28 17       	cp	r18, r24
    1388:	39 07       	cpc	r19, r25
    138a:	bc f0       	brlt	.+46     	; 0x13ba <__fpcmp_parts_f+0x98>
    138c:	14 96       	adiw	r26, 0x04	; 4
    138e:	8d 91       	ld	r24, X+
    1390:	9d 91       	ld	r25, X+
    1392:	0d 90       	ld	r0, X+
    1394:	bc 91       	ld	r27, X
    1396:	a0 2d       	mov	r26, r0
    1398:	24 81       	ldd	r18, Z+4	; 0x04
    139a:	35 81       	ldd	r19, Z+5	; 0x05
    139c:	46 81       	ldd	r20, Z+6	; 0x06
    139e:	57 81       	ldd	r21, Z+7	; 0x07
    13a0:	28 17       	cp	r18, r24
    13a2:	39 07       	cpc	r19, r25
    13a4:	4a 07       	cpc	r20, r26
    13a6:	5b 07       	cpc	r21, r27
    13a8:	18 f4       	brcc	.+6      	; 0x13b0 <__fpcmp_parts_f+0x8e>
    13aa:	11 23       	and	r17, r17
    13ac:	41 f0       	breq	.+16     	; 0x13be <__fpcmp_parts_f+0x9c>
    13ae:	0a c0       	rjmp	.+20     	; 0x13c4 <__fpcmp_parts_f+0xa2>
    13b0:	82 17       	cp	r24, r18
    13b2:	93 07       	cpc	r25, r19
    13b4:	a4 07       	cpc	r26, r20
    13b6:	b5 07       	cpc	r27, r21
    13b8:	40 f4       	brcc	.+16     	; 0x13ca <__fpcmp_parts_f+0xa8>
    13ba:	11 23       	and	r17, r17
    13bc:	19 f0       	breq	.+6      	; 0x13c4 <__fpcmp_parts_f+0xa2>
    13be:	61 e0       	ldi	r22, 0x01	; 1
    13c0:	70 e0       	ldi	r23, 0x00	; 0
    13c2:	05 c0       	rjmp	.+10     	; 0x13ce <__fpcmp_parts_f+0xac>
    13c4:	6f ef       	ldi	r22, 0xFF	; 255
    13c6:	7f ef       	ldi	r23, 0xFF	; 255
    13c8:	02 c0       	rjmp	.+4      	; 0x13ce <__fpcmp_parts_f+0xac>
    13ca:	60 e0       	ldi	r22, 0x00	; 0
    13cc:	70 e0       	ldi	r23, 0x00	; 0
    13ce:	cb 01       	movw	r24, r22
    13d0:	1f 91       	pop	r17
    13d2:	08 95       	ret

000013d4 <TIMER2_enuInit>:
static void (*TIMER2_ApfunISRfun[])(void*) =  {NULL,NULL} ;

static void *TIMER2_ApvidISRParameter []= {NULL,NULL} ;

ES_t TIMER2_enuInit(void)
{
    13d4:	df 93       	push	r29
    13d6:	cf 93       	push	r28
    13d8:	0f 92       	push	r0
    13da:	cd b7       	in	r28, 0x3d	; 61
    13dc:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState=ES_NOK;
    13de:	81 e0       	ldi	r24, 0x01	; 1
    13e0:	89 83       	std	Y+1, r24	; 0x01
#if !(WAVEG_MOOD &~(TIM2_FastPWM))
	TCCR2 = WAVEG_MOOD;
    13e2:	e5 e4       	ldi	r30, 0x45	; 69
    13e4:	f0 e0       	ldi	r31, 0x00	; 0
    13e6:	10 82       	st	Z, r1
#else
	#error"wave mood is out of range"
#endif
#if !(OC2_OUTMOOD &~TIM2_SETONCOMMATCH)
	TCCR2 |= OC2_OUTMOOD;
    13e8:	a5 e4       	ldi	r26, 0x45	; 69
    13ea:	b0 e0       	ldi	r27, 0x00	; 0
    13ec:	e5 e4       	ldi	r30, 0x45	; 69
    13ee:	f0 e0       	ldi	r31, 0x00	; 0
    13f0:	80 81       	ld	r24, Z
    13f2:	8c 93       	st	X, r24
#else
	#error "OC2_OUTMOOD is out of range"
#endif
#if !(PRESCALLER & ~TIM2_PRE1024)
	TCCR2 |= PRESCALLER;
    13f4:	a5 e4       	ldi	r26, 0x45	; 69
    13f6:	b0 e0       	ldi	r27, 0x00	; 0
    13f8:	e5 e4       	ldi	r30, 0x45	; 69
    13fa:	f0 e0       	ldi	r31, 0x00	; 0
    13fc:	80 81       	ld	r24, Z
    13fe:	87 60       	ori	r24, 0x07	; 7
    1400:	8c 93       	st	X, r24
#else
	#error "PRESCALLER is out of range"
#endif

#if !(INTERRUPT_MOOD & ~(OVERFLOW_INTER|COMPMATCH_INTER))
	TIMSK &= ~(OVERFLOW_INTER|COMPMATCH_INTER);
    1402:	a9 e5       	ldi	r26, 0x59	; 89
    1404:	b0 e0       	ldi	r27, 0x00	; 0
    1406:	e9 e5       	ldi	r30, 0x59	; 89
    1408:	f0 e0       	ldi	r31, 0x00	; 0
    140a:	80 81       	ld	r24, Z
    140c:	8f 73       	andi	r24, 0x3F	; 63
    140e:	8c 93       	st	X, r24
	TIMSK |=INTERRUPT_MOOD;
    1410:	a9 e5       	ldi	r26, 0x59	; 89
    1412:	b0 e0       	ldi	r27, 0x00	; 0
    1414:	e9 e5       	ldi	r30, 0x59	; 89
    1416:	f0 e0       	ldi	r31, 0x00	; 0
    1418:	80 81       	ld	r24, Z
    141a:	80 64       	ori	r24, 0x40	; 64
    141c:	8c 93       	st	X, r24
	Local_enuErrorState=ES_OK ;
    141e:	19 82       	std	Y+1, r1	; 0x01
#else
	#error "interrupt mood is out of range"
#endif


	return Local_enuErrorState;
    1420:	89 81       	ldd	r24, Y+1	; 0x01
}
    1422:	0f 90       	pop	r0
    1424:	cf 91       	pop	r28
    1426:	df 91       	pop	r29
    1428:	08 95       	ret

0000142a <TIMER2_enuSetwaveMood>:

ES_t TIMER2_enuSetwaveMood(u8 Copy_u8WaveMood)
{
    142a:	df 93       	push	r29
    142c:	cf 93       	push	r28
    142e:	00 d0       	rcall	.+0      	; 0x1430 <TIMER2_enuSetwaveMood+0x6>
    1430:	cd b7       	in	r28, 0x3d	; 61
    1432:	de b7       	in	r29, 0x3e	; 62
    1434:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState=ES_NOK;
    1436:	81 e0       	ldi	r24, 0x01	; 1
    1438:	89 83       	std	Y+1, r24	; 0x01

	if (!(Copy_u8WaveMood &~(TIM2_FastPWM)))
    143a:	8a 81       	ldd	r24, Y+2	; 0x02
    143c:	88 2f       	mov	r24, r24
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	87 7b       	andi	r24, 0xB7	; 183
    1442:	00 97       	sbiw	r24, 0x00	; 0
    1444:	81 f4       	brne	.+32     	; 0x1466 <TIMER2_enuSetwaveMood+0x3c>
	{
		TCCR2 &= ~TIM2_FastPWM;
    1446:	a5 e4       	ldi	r26, 0x45	; 69
    1448:	b0 e0       	ldi	r27, 0x00	; 0
    144a:	e5 e4       	ldi	r30, 0x45	; 69
    144c:	f0 e0       	ldi	r31, 0x00	; 0
    144e:	80 81       	ld	r24, Z
    1450:	87 7b       	andi	r24, 0xB7	; 183
    1452:	8c 93       	st	X, r24
		TCCR2 |= Copy_u8WaveMood;
    1454:	a5 e4       	ldi	r26, 0x45	; 69
    1456:	b0 e0       	ldi	r27, 0x00	; 0
    1458:	e5 e4       	ldi	r30, 0x45	; 69
    145a:	f0 e0       	ldi	r31, 0x00	; 0
    145c:	90 81       	ld	r25, Z
    145e:	8a 81       	ldd	r24, Y+2	; 0x02
    1460:	89 2b       	or	r24, r25
    1462:	8c 93       	st	X, r24
		Local_enuErrorState = ES_OK;
    1464:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_enuErrorState;
    1466:	89 81       	ldd	r24, Y+1	; 0x01
}
    1468:	0f 90       	pop	r0
    146a:	0f 90       	pop	r0
    146c:	cf 91       	pop	r28
    146e:	df 91       	pop	r29
    1470:	08 95       	ret

00001472 <TIMER2_enuSetOC2Mood>:

ES_t TIMER2_enuSetOC2Mood(u8 Copy_u8OC2OutMood)
{
    1472:	df 93       	push	r29
    1474:	cf 93       	push	r28
    1476:	00 d0       	rcall	.+0      	; 0x1478 <TIMER2_enuSetOC2Mood+0x6>
    1478:	cd b7       	in	r28, 0x3d	; 61
    147a:	de b7       	in	r29, 0x3e	; 62
    147c:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState=ES_NOK;
    147e:	81 e0       	ldi	r24, 0x01	; 1
    1480:	89 83       	std	Y+1, r24	; 0x01
	if(!(Copy_u8OC2OutMood &~TIM2_SETONCOMMATCH))
    1482:	8a 81       	ldd	r24, Y+2	; 0x02
    1484:	88 2f       	mov	r24, r24
    1486:	90 e0       	ldi	r25, 0x00	; 0
    1488:	8f 7c       	andi	r24, 0xCF	; 207
    148a:	00 97       	sbiw	r24, 0x00	; 0
    148c:	81 f4       	brne	.+32     	; 0x14ae <TIMER2_enuSetOC2Mood+0x3c>
	{
		TCCR2 &= ~TIM2_SETONCOMMATCH;
    148e:	a5 e4       	ldi	r26, 0x45	; 69
    1490:	b0 e0       	ldi	r27, 0x00	; 0
    1492:	e5 e4       	ldi	r30, 0x45	; 69
    1494:	f0 e0       	ldi	r31, 0x00	; 0
    1496:	80 81       	ld	r24, Z
    1498:	8f 7c       	andi	r24, 0xCF	; 207
    149a:	8c 93       	st	X, r24
		TCCR2 |= Copy_u8OC2OutMood;
    149c:	a5 e4       	ldi	r26, 0x45	; 69
    149e:	b0 e0       	ldi	r27, 0x00	; 0
    14a0:	e5 e4       	ldi	r30, 0x45	; 69
    14a2:	f0 e0       	ldi	r31, 0x00	; 0
    14a4:	90 81       	ld	r25, Z
    14a6:	8a 81       	ldd	r24, Y+2	; 0x02
    14a8:	89 2b       	or	r24, r25
    14aa:	8c 93       	st	X, r24
		Local_enuErrorState = ES_OK;
    14ac:	19 82       	std	Y+1, r1	; 0x01
	}

	return Local_enuErrorState;
    14ae:	89 81       	ldd	r24, Y+1	; 0x01
}
    14b0:	0f 90       	pop	r0
    14b2:	0f 90       	pop	r0
    14b4:	cf 91       	pop	r28
    14b6:	df 91       	pop	r29
    14b8:	08 95       	ret

000014ba <TIMER2_enuSetPWMDuty>:

ES_t TIMER2_enuSetPWMDuty(u8 Copy_u8Duty)
{
    14ba:	af 92       	push	r10
    14bc:	bf 92       	push	r11
    14be:	cf 92       	push	r12
    14c0:	df 92       	push	r13
    14c2:	ef 92       	push	r14
    14c4:	ff 92       	push	r15
    14c6:	0f 93       	push	r16
    14c8:	1f 93       	push	r17
    14ca:	df 93       	push	r29
    14cc:	cf 93       	push	r28
    14ce:	cd b7       	in	r28, 0x3d	; 61
    14d0:	de b7       	in	r29, 0x3e	; 62
    14d2:	c2 5a       	subi	r28, 0xA2	; 162
    14d4:	d0 40       	sbci	r29, 0x00	; 0
    14d6:	0f b6       	in	r0, 0x3f	; 63
    14d8:	f8 94       	cli
    14da:	de bf       	out	0x3e, r29	; 62
    14dc:	0f be       	out	0x3f, r0	; 63
    14de:	cd bf       	out	0x3d, r28	; 61
    14e0:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState=ES_NOK;
    14e2:	81 e0       	ldi	r24, 0x01	; 1
    14e4:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8Duty<=100)
    14e6:	8a 81       	ldd	r24, Y+2	; 0x02
    14e8:	85 36       	cpi	r24, 0x65	; 101
    14ea:	10 f0       	brcs	.+4      	; 0x14f0 <TIMER2_enuSetPWMDuty+0x36>
    14ec:	0c 94 58 13 	jmp	0x26b0	; 0x26b0 <TIMER2_enuSetPWMDuty+0x11f6>
		if(TIM2_FastPWM == (TCCR2 & TIM2_FastPWM))
    14f0:	e5 e4       	ldi	r30, 0x45	; 69
    14f2:	f0 e0       	ldi	r31, 0x00	; 0
    14f4:	80 81       	ld	r24, Z
    14f6:	88 2f       	mov	r24, r24
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	88 74       	andi	r24, 0x48	; 72
    14fc:	90 70       	andi	r25, 0x00	; 0
    14fe:	88 34       	cpi	r24, 0x48	; 72
    1500:	91 05       	cpc	r25, r1
    1502:	09 f0       	breq	.+2      	; 0x1506 <TIMER2_enuSetPWMDuty+0x4c>
    1504:	88 c0       	rjmp	.+272    	; 0x1616 <TIMER2_enuSetPWMDuty+0x15c>
		{

			if(TIM2_SETONCOMMATCH ==(TCCR2 & TIM2_SETONCOMMATCH) )
    1506:	e5 e4       	ldi	r30, 0x45	; 69
    1508:	f0 e0       	ldi	r31, 0x00	; 0
    150a:	80 81       	ld	r24, Z
    150c:	88 2f       	mov	r24, r24
    150e:	90 e0       	ldi	r25, 0x00	; 0
    1510:	80 73       	andi	r24, 0x30	; 48
    1512:	90 70       	andi	r25, 0x00	; 0
    1514:	80 33       	cpi	r24, 0x30	; 48
    1516:	91 05       	cpc	r25, r1
    1518:	c1 f5       	brne	.+112    	; 0x158a <TIMER2_enuSetPWMDuty+0xd0>
			{
				OCR2 = 255ul - 255.f*Copy_u8Duty/ 100.f ;
    151a:	03 e4       	ldi	r16, 0x43	; 67
    151c:	10 e0       	ldi	r17, 0x00	; 0
    151e:	8a 81       	ldd	r24, Y+2	; 0x02
    1520:	88 2f       	mov	r24, r24
    1522:	90 e0       	ldi	r25, 0x00	; 0
    1524:	aa 27       	eor	r26, r26
    1526:	97 fd       	sbrc	r25, 7
    1528:	a0 95       	com	r26
    152a:	ba 2f       	mov	r27, r26
    152c:	bc 01       	movw	r22, r24
    152e:	cd 01       	movw	r24, r26
    1530:	0e 94 4b 06 	call	0xc96	; 0xc96 <__floatsisf>
    1534:	dc 01       	movw	r26, r24
    1536:	cb 01       	movw	r24, r22
    1538:	bc 01       	movw	r22, r24
    153a:	cd 01       	movw	r24, r26
    153c:	20 e0       	ldi	r18, 0x00	; 0
    153e:	30 e0       	ldi	r19, 0x00	; 0
    1540:	4f e7       	ldi	r20, 0x7F	; 127
    1542:	53 e4       	ldi	r21, 0x43	; 67
    1544:	0e 94 75 04 	call	0x8ea	; 0x8ea <__mulsf3>
    1548:	dc 01       	movw	r26, r24
    154a:	cb 01       	movw	r24, r22
    154c:	bc 01       	movw	r22, r24
    154e:	cd 01       	movw	r24, r26
    1550:	20 e0       	ldi	r18, 0x00	; 0
    1552:	30 e0       	ldi	r19, 0x00	; 0
    1554:	48 ec       	ldi	r20, 0xC8	; 200
    1556:	52 ec       	ldi	r21, 0xC2	; 194
    1558:	0e 94 6f 05 	call	0xade	; 0xade <__divsf3>
    155c:	dc 01       	movw	r26, r24
    155e:	cb 01       	movw	r24, r22
    1560:	bc 01       	movw	r22, r24
    1562:	cd 01       	movw	r24, r26
    1564:	20 e0       	ldi	r18, 0x00	; 0
    1566:	30 e0       	ldi	r19, 0x00	; 0
    1568:	4f e7       	ldi	r20, 0x7F	; 127
    156a:	53 e4       	ldi	r21, 0x43	; 67
    156c:	0e 94 48 04 	call	0x890	; 0x890 <__addsf3>
    1570:	dc 01       	movw	r26, r24
    1572:	cb 01       	movw	r24, r22
    1574:	bc 01       	movw	r22, r24
    1576:	cd 01       	movw	r24, r26
    1578:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    157c:	dc 01       	movw	r26, r24
    157e:	cb 01       	movw	r24, r22
    1580:	f8 01       	movw	r30, r16
    1582:	80 83       	st	Z, r24
				Local_enuErrorState = ES_OK;
    1584:	19 82       	std	Y+1, r1	; 0x01
    1586:	0c 94 5a 13 	jmp	0x26b4	; 0x26b4 <TIMER2_enuSetPWMDuty+0x11fa>
			}
			else if(TIM2_CleraONCOMMATCH ==(TCCR2 & TIM2_SETONCOMMATCH))
    158a:	e5 e4       	ldi	r30, 0x45	; 69
    158c:	f0 e0       	ldi	r31, 0x00	; 0
    158e:	80 81       	ld	r24, Z
    1590:	88 2f       	mov	r24, r24
    1592:	90 e0       	ldi	r25, 0x00	; 0
    1594:	80 73       	andi	r24, 0x30	; 48
    1596:	90 70       	andi	r25, 0x00	; 0
    1598:	80 32       	cpi	r24, 0x20	; 32
    159a:	91 05       	cpc	r25, r1
    159c:	c1 f5       	brne	.+112    	; 0x160e <TIMER2_enuSetPWMDuty+0x154>
			{
				OCR2 = ((256.f * Copy_u8Duty /100.f ) - 1 );
    159e:	03 e4       	ldi	r16, 0x43	; 67
    15a0:	10 e0       	ldi	r17, 0x00	; 0
    15a2:	8a 81       	ldd	r24, Y+2	; 0x02
    15a4:	88 2f       	mov	r24, r24
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	aa 27       	eor	r26, r26
    15aa:	97 fd       	sbrc	r25, 7
    15ac:	a0 95       	com	r26
    15ae:	ba 2f       	mov	r27, r26
    15b0:	bc 01       	movw	r22, r24
    15b2:	cd 01       	movw	r24, r26
    15b4:	0e 94 4b 06 	call	0xc96	; 0xc96 <__floatsisf>
    15b8:	dc 01       	movw	r26, r24
    15ba:	cb 01       	movw	r24, r22
    15bc:	bc 01       	movw	r22, r24
    15be:	cd 01       	movw	r24, r26
    15c0:	20 e0       	ldi	r18, 0x00	; 0
    15c2:	30 e0       	ldi	r19, 0x00	; 0
    15c4:	40 e8       	ldi	r20, 0x80	; 128
    15c6:	53 e4       	ldi	r21, 0x43	; 67
    15c8:	0e 94 75 04 	call	0x8ea	; 0x8ea <__mulsf3>
    15cc:	dc 01       	movw	r26, r24
    15ce:	cb 01       	movw	r24, r22
    15d0:	bc 01       	movw	r22, r24
    15d2:	cd 01       	movw	r24, r26
    15d4:	20 e0       	ldi	r18, 0x00	; 0
    15d6:	30 e0       	ldi	r19, 0x00	; 0
    15d8:	48 ec       	ldi	r20, 0xC8	; 200
    15da:	52 e4       	ldi	r21, 0x42	; 66
    15dc:	0e 94 6f 05 	call	0xade	; 0xade <__divsf3>
    15e0:	dc 01       	movw	r26, r24
    15e2:	cb 01       	movw	r24, r22
    15e4:	bc 01       	movw	r22, r24
    15e6:	cd 01       	movw	r24, r26
    15e8:	20 e0       	ldi	r18, 0x00	; 0
    15ea:	30 e0       	ldi	r19, 0x00	; 0
    15ec:	40 e8       	ldi	r20, 0x80	; 128
    15ee:	5f e3       	ldi	r21, 0x3F	; 63
    15f0:	0e 94 17 04 	call	0x82e	; 0x82e <__subsf3>
    15f4:	dc 01       	movw	r26, r24
    15f6:	cb 01       	movw	r24, r22
    15f8:	bc 01       	movw	r22, r24
    15fa:	cd 01       	movw	r24, r26
    15fc:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    1600:	dc 01       	movw	r26, r24
    1602:	cb 01       	movw	r24, r22
    1604:	f8 01       	movw	r30, r16
    1606:	80 83       	st	Z, r24
				Local_enuErrorState = ES_OK;
    1608:	19 82       	std	Y+1, r1	; 0x01
    160a:	0c 94 5a 13 	jmp	0x26b4	; 0x26b4 <TIMER2_enuSetPWMDuty+0x11fa>
			}
			else Local_enuErrorState = ES_NOK;
    160e:	81 e0       	ldi	r24, 0x01	; 1
    1610:	89 83       	std	Y+1, r24	; 0x01
    1612:	0c 94 5a 13 	jmp	0x26b4	; 0x26b4 <TIMER2_enuSetPWMDuty+0x11fa>
		}
		else if(TIM2_PHASEcorrectWAVmood == (TCCR2 & TIM2_FastPWM) )
    1616:	e5 e4       	ldi	r30, 0x45	; 69
    1618:	f0 e0       	ldi	r31, 0x00	; 0
    161a:	80 81       	ld	r24, Z
    161c:	88 2f       	mov	r24, r24
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	88 74       	andi	r24, 0x48	; 72
    1622:	90 70       	andi	r25, 0x00	; 0
    1624:	80 34       	cpi	r24, 0x40	; 64
    1626:	91 05       	cpc	r25, r1
    1628:	11 f0       	breq	.+4      	; 0x162e <TIMER2_enuSetPWMDuty+0x174>
    162a:	0c 94 5a 13 	jmp	0x26b4	; 0x26b4 <TIMER2_enuSetPWMDuty+0x11fa>
		{

			if(TIM2_SETONCOMMATCH ==(TCCR2 &  TIM2_SETONCOMMATCH) )
    162e:	e5 e4       	ldi	r30, 0x45	; 69
    1630:	f0 e0       	ldi	r31, 0x00	; 0
    1632:	80 81       	ld	r24, Z
    1634:	88 2f       	mov	r24, r24
    1636:	90 e0       	ldi	r25, 0x00	; 0
    1638:	80 73       	andi	r24, 0x30	; 48
    163a:	90 70       	andi	r25, 0x00	; 0
    163c:	80 33       	cpi	r24, 0x30	; 48
    163e:	91 05       	cpc	r25, r1
    1640:	09 f0       	breq	.+2      	; 0x1644 <TIMER2_enuSetPWMDuty+0x18a>
    1642:	e4 c2       	rjmp	.+1480   	; 0x1c0c <TIMER2_enuSetPWMDuty+0x752>
			{
				OCR2 = 255ull -  Copy_u8Duty * 255ull /100.f ;
    1644:	03 e4       	ldi	r16, 0x43	; 67
    1646:	10 e0       	ldi	r17, 0x00	; 0
    1648:	1e 8b       	std	Y+22, r17	; 0x16
    164a:	0d 8b       	std	Y+21, r16	; 0x15
    164c:	8a 81       	ldd	r24, Y+2	; 0x02
    164e:	08 2f       	mov	r16, r24
    1650:	10 e0       	ldi	r17, 0x00	; 0
    1652:	20 e0       	ldi	r18, 0x00	; 0
    1654:	30 e0       	ldi	r19, 0x00	; 0
    1656:	40 e0       	ldi	r20, 0x00	; 0
    1658:	50 e0       	ldi	r21, 0x00	; 0
    165a:	60 e0       	ldi	r22, 0x00	; 0
    165c:	70 e0       	ldi	r23, 0x00	; 0
    165e:	0d 87       	std	Y+13, r16	; 0x0d
    1660:	1e 87       	std	Y+14, r17	; 0x0e
    1662:	2f 87       	std	Y+15, r18	; 0x0f
    1664:	38 8b       	std	Y+16, r19	; 0x10
    1666:	49 8b       	std	Y+17, r20	; 0x11
    1668:	5a 8b       	std	Y+18, r21	; 0x12
    166a:	6b 8b       	std	Y+19, r22	; 0x13
    166c:	7c 8b       	std	Y+20, r23	; 0x14
    166e:	ad 84       	ldd	r10, Y+13	; 0x0d
    1670:	be 84       	ldd	r11, Y+14	; 0x0e
    1672:	cf 84       	ldd	r12, Y+15	; 0x0f
    1674:	d8 88       	ldd	r13, Y+16	; 0x10
    1676:	e9 88       	ldd	r14, Y+17	; 0x11
    1678:	fa 88       	ldd	r15, Y+18	; 0x12
    167a:	0b 89       	ldd	r16, Y+19	; 0x13
    167c:	1c 89       	ldd	r17, Y+20	; 0x14
    167e:	2a 2d       	mov	r18, r10
    1680:	3b 2d       	mov	r19, r11
    1682:	4c 2d       	mov	r20, r12
    1684:	5d 2d       	mov	r21, r13
    1686:	6e 2d       	mov	r22, r14
    1688:	7f 2d       	mov	r23, r15
    168a:	80 2f       	mov	r24, r16
    168c:	91 2f       	mov	r25, r17
    168e:	04 e0       	ldi	r16, 0x04	; 4
    1690:	0e 94 44 01 	call	0x288	; 0x288 <__ashldi3>
    1694:	2f 8b       	std	Y+23, r18	; 0x17
    1696:	38 8f       	std	Y+24, r19	; 0x18
    1698:	49 8f       	std	Y+25, r20	; 0x19
    169a:	5a 8f       	std	Y+26, r21	; 0x1a
    169c:	6b 8f       	std	Y+27, r22	; 0x1b
    169e:	7c 8f       	std	Y+28, r23	; 0x1c
    16a0:	8d 8f       	std	Y+29, r24	; 0x1d
    16a2:	9e 8f       	std	Y+30, r25	; 0x1e
    16a4:	1f 89       	ldd	r17, Y+23	; 0x17
    16a6:	2d 85       	ldd	r18, Y+13	; 0x0d
    16a8:	12 1b       	sub	r17, r18
    16aa:	1f 8f       	std	Y+31, r17	; 0x1f
    16ac:	31 e0       	ldi	r19, 0x01	; 1
    16ae:	3f a3       	std	Y+39, r19	; 0x27
    16b0:	4f 8d       	ldd	r20, Y+31	; 0x1f
    16b2:	5f 89       	ldd	r21, Y+23	; 0x17
    16b4:	54 17       	cp	r21, r20
    16b6:	08 f0       	brcs	.+2      	; 0x16ba <TIMER2_enuSetPWMDuty+0x200>
    16b8:	1f a2       	std	Y+39, r1	; 0x27
    16ba:	68 8d       	ldd	r22, Y+24	; 0x18
    16bc:	7e 85       	ldd	r23, Y+14	; 0x0e
    16be:	67 1b       	sub	r22, r23
    16c0:	68 a3       	std	Y+32, r22	; 0x20
    16c2:	81 e0       	ldi	r24, 0x01	; 1
    16c4:	88 a7       	std	Y+40, r24	; 0x28
    16c6:	98 a1       	ldd	r25, Y+32	; 0x20
    16c8:	e8 8d       	ldd	r30, Y+24	; 0x18
    16ca:	e9 17       	cp	r30, r25
    16cc:	08 f0       	brcs	.+2      	; 0x16d0 <TIMER2_enuSetPWMDuty+0x216>
    16ce:	18 a6       	std	Y+40, r1	; 0x28
    16d0:	f8 a1       	ldd	r31, Y+32	; 0x20
    16d2:	0f a1       	ldd	r16, Y+39	; 0x27
    16d4:	f0 1b       	sub	r31, r16
    16d6:	f9 a7       	std	Y+41, r31	; 0x29
    16d8:	11 e0       	ldi	r17, 0x01	; 1
    16da:	1a a7       	std	Y+42, r17	; 0x2a
    16dc:	29 a5       	ldd	r18, Y+41	; 0x29
    16de:	38 a1       	ldd	r19, Y+32	; 0x20
    16e0:	32 17       	cp	r19, r18
    16e2:	08 f0       	brcs	.+2      	; 0x16e6 <TIMER2_enuSetPWMDuty+0x22c>
    16e4:	1a a6       	std	Y+42, r1	; 0x2a
    16e6:	48 a5       	ldd	r20, Y+40	; 0x28
    16e8:	5a a5       	ldd	r21, Y+42	; 0x2a
    16ea:	45 2b       	or	r20, r21
    16ec:	48 a7       	std	Y+40, r20	; 0x28
    16ee:	69 a5       	ldd	r22, Y+41	; 0x29
    16f0:	68 a3       	std	Y+32, r22	; 0x20
    16f2:	79 8d       	ldd	r23, Y+25	; 0x19
    16f4:	8f 85       	ldd	r24, Y+15	; 0x0f
    16f6:	78 1b       	sub	r23, r24
    16f8:	79 a3       	std	Y+33, r23	; 0x21
    16fa:	91 e0       	ldi	r25, 0x01	; 1
    16fc:	9b a7       	std	Y+43, r25	; 0x2b
    16fe:	e9 a1       	ldd	r30, Y+33	; 0x21
    1700:	f9 8d       	ldd	r31, Y+25	; 0x19
    1702:	fe 17       	cp	r31, r30
    1704:	08 f0       	brcs	.+2      	; 0x1708 <TIMER2_enuSetPWMDuty+0x24e>
    1706:	1b a6       	std	Y+43, r1	; 0x2b
    1708:	09 a1       	ldd	r16, Y+33	; 0x21
    170a:	18 a5       	ldd	r17, Y+40	; 0x28
    170c:	01 1b       	sub	r16, r17
    170e:	0c a7       	std	Y+44, r16	; 0x2c
    1710:	21 e0       	ldi	r18, 0x01	; 1
    1712:	2d a7       	std	Y+45, r18	; 0x2d
    1714:	3c a5       	ldd	r19, Y+44	; 0x2c
    1716:	49 a1       	ldd	r20, Y+33	; 0x21
    1718:	43 17       	cp	r20, r19
    171a:	08 f0       	brcs	.+2      	; 0x171e <TIMER2_enuSetPWMDuty+0x264>
    171c:	1d a6       	std	Y+45, r1	; 0x2d
    171e:	5b a5       	ldd	r21, Y+43	; 0x2b
    1720:	6d a5       	ldd	r22, Y+45	; 0x2d
    1722:	56 2b       	or	r21, r22
    1724:	5b a7       	std	Y+43, r21	; 0x2b
    1726:	7c a5       	ldd	r23, Y+44	; 0x2c
    1728:	79 a3       	std	Y+33, r23	; 0x21
    172a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    172c:	98 89       	ldd	r25, Y+16	; 0x10
    172e:	89 1b       	sub	r24, r25
    1730:	8a a3       	std	Y+34, r24	; 0x22
    1732:	e1 e0       	ldi	r30, 0x01	; 1
    1734:	ee a7       	std	Y+46, r30	; 0x2e
    1736:	fa a1       	ldd	r31, Y+34	; 0x22
    1738:	0a 8d       	ldd	r16, Y+26	; 0x1a
    173a:	0f 17       	cp	r16, r31
    173c:	08 f0       	brcs	.+2      	; 0x1740 <TIMER2_enuSetPWMDuty+0x286>
    173e:	1e a6       	std	Y+46, r1	; 0x2e
    1740:	1a a1       	ldd	r17, Y+34	; 0x22
    1742:	2b a5       	ldd	r18, Y+43	; 0x2b
    1744:	12 1b       	sub	r17, r18
    1746:	1f a7       	std	Y+47, r17	; 0x2f
    1748:	31 e0       	ldi	r19, 0x01	; 1
    174a:	38 ab       	std	Y+48, r19	; 0x30
    174c:	4f a5       	ldd	r20, Y+47	; 0x2f
    174e:	5a a1       	ldd	r21, Y+34	; 0x22
    1750:	54 17       	cp	r21, r20
    1752:	08 f0       	brcs	.+2      	; 0x1756 <TIMER2_enuSetPWMDuty+0x29c>
    1754:	18 aa       	std	Y+48, r1	; 0x30
    1756:	6e a5       	ldd	r22, Y+46	; 0x2e
    1758:	78 a9       	ldd	r23, Y+48	; 0x30
    175a:	67 2b       	or	r22, r23
    175c:	6e a7       	std	Y+46, r22	; 0x2e
    175e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1760:	8a a3       	std	Y+34, r24	; 0x22
    1762:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1764:	e9 89       	ldd	r30, Y+17	; 0x11
    1766:	9e 1b       	sub	r25, r30
    1768:	9b a3       	std	Y+35, r25	; 0x23
    176a:	f1 e0       	ldi	r31, 0x01	; 1
    176c:	f9 ab       	std	Y+49, r31	; 0x31
    176e:	0b a1       	ldd	r16, Y+35	; 0x23
    1770:	1b 8d       	ldd	r17, Y+27	; 0x1b
    1772:	10 17       	cp	r17, r16
    1774:	08 f0       	brcs	.+2      	; 0x1778 <TIMER2_enuSetPWMDuty+0x2be>
    1776:	19 aa       	std	Y+49, r1	; 0x31
    1778:	2b a1       	ldd	r18, Y+35	; 0x23
    177a:	3e a5       	ldd	r19, Y+46	; 0x2e
    177c:	23 1b       	sub	r18, r19
    177e:	2a ab       	std	Y+50, r18	; 0x32
    1780:	41 e0       	ldi	r20, 0x01	; 1
    1782:	4b ab       	std	Y+51, r20	; 0x33
    1784:	5a a9       	ldd	r21, Y+50	; 0x32
    1786:	6b a1       	ldd	r22, Y+35	; 0x23
    1788:	65 17       	cp	r22, r21
    178a:	08 f0       	brcs	.+2      	; 0x178e <TIMER2_enuSetPWMDuty+0x2d4>
    178c:	1b aa       	std	Y+51, r1	; 0x33
    178e:	79 a9       	ldd	r23, Y+49	; 0x31
    1790:	8b a9       	ldd	r24, Y+51	; 0x33
    1792:	78 2b       	or	r23, r24
    1794:	79 ab       	std	Y+49, r23	; 0x31
    1796:	9a a9       	ldd	r25, Y+50	; 0x32
    1798:	9b a3       	std	Y+35, r25	; 0x23
    179a:	ec 8d       	ldd	r30, Y+28	; 0x1c
    179c:	fa 89       	ldd	r31, Y+18	; 0x12
    179e:	ef 1b       	sub	r30, r31
    17a0:	ec a3       	std	Y+36, r30	; 0x24
    17a2:	01 e0       	ldi	r16, 0x01	; 1
    17a4:	0c ab       	std	Y+52, r16	; 0x34
    17a6:	1c a1       	ldd	r17, Y+36	; 0x24
    17a8:	2c 8d       	ldd	r18, Y+28	; 0x1c
    17aa:	21 17       	cp	r18, r17
    17ac:	08 f0       	brcs	.+2      	; 0x17b0 <TIMER2_enuSetPWMDuty+0x2f6>
    17ae:	1c aa       	std	Y+52, r1	; 0x34
    17b0:	3c a1       	ldd	r19, Y+36	; 0x24
    17b2:	49 a9       	ldd	r20, Y+49	; 0x31
    17b4:	34 1b       	sub	r19, r20
    17b6:	3d ab       	std	Y+53, r19	; 0x35
    17b8:	51 e0       	ldi	r21, 0x01	; 1
    17ba:	5e ab       	std	Y+54, r21	; 0x36
    17bc:	6d a9       	ldd	r22, Y+53	; 0x35
    17be:	7c a1       	ldd	r23, Y+36	; 0x24
    17c0:	76 17       	cp	r23, r22
    17c2:	08 f0       	brcs	.+2      	; 0x17c6 <TIMER2_enuSetPWMDuty+0x30c>
    17c4:	1e aa       	std	Y+54, r1	; 0x36
    17c6:	8c a9       	ldd	r24, Y+52	; 0x34
    17c8:	9e a9       	ldd	r25, Y+54	; 0x36
    17ca:	89 2b       	or	r24, r25
    17cc:	8c ab       	std	Y+52, r24	; 0x34
    17ce:	ed a9       	ldd	r30, Y+53	; 0x35
    17d0:	ec a3       	std	Y+36, r30	; 0x24
    17d2:	fd 8d       	ldd	r31, Y+29	; 0x1d
    17d4:	0b 89       	ldd	r16, Y+19	; 0x13
    17d6:	f0 1b       	sub	r31, r16
    17d8:	fd a3       	std	Y+37, r31	; 0x25
    17da:	11 e0       	ldi	r17, 0x01	; 1
    17dc:	1f ab       	std	Y+55, r17	; 0x37
    17de:	2d a1       	ldd	r18, Y+37	; 0x25
    17e0:	3d 8d       	ldd	r19, Y+29	; 0x1d
    17e2:	32 17       	cp	r19, r18
    17e4:	08 f0       	brcs	.+2      	; 0x17e8 <TIMER2_enuSetPWMDuty+0x32e>
    17e6:	1f aa       	std	Y+55, r1	; 0x37
    17e8:	4d a1       	ldd	r20, Y+37	; 0x25
    17ea:	5c a9       	ldd	r21, Y+52	; 0x34
    17ec:	45 1b       	sub	r20, r21
    17ee:	48 af       	std	Y+56, r20	; 0x38
    17f0:	61 e0       	ldi	r22, 0x01	; 1
    17f2:	69 af       	std	Y+57, r22	; 0x39
    17f4:	78 ad       	ldd	r23, Y+56	; 0x38
    17f6:	8d a1       	ldd	r24, Y+37	; 0x25
    17f8:	87 17       	cp	r24, r23
    17fa:	08 f0       	brcs	.+2      	; 0x17fe <TIMER2_enuSetPWMDuty+0x344>
    17fc:	19 ae       	std	Y+57, r1	; 0x39
    17fe:	9f a9       	ldd	r25, Y+55	; 0x37
    1800:	e9 ad       	ldd	r30, Y+57	; 0x39
    1802:	9e 2b       	or	r25, r30
    1804:	9f ab       	std	Y+55, r25	; 0x37
    1806:	f8 ad       	ldd	r31, Y+56	; 0x38
    1808:	fd a3       	std	Y+37, r31	; 0x25
    180a:	0e 8d       	ldd	r16, Y+30	; 0x1e
    180c:	1c 89       	ldd	r17, Y+20	; 0x14
    180e:	01 1b       	sub	r16, r17
    1810:	0e a3       	std	Y+38, r16	; 0x26
    1812:	8e a1       	ldd	r24, Y+38	; 0x26
    1814:	2f a9       	ldd	r18, Y+55	; 0x37
    1816:	82 1b       	sub	r24, r18
    1818:	8e a3       	std	Y+38, r24	; 0x26
    181a:	3f 8d       	ldd	r19, Y+31	; 0x1f
    181c:	3f 8b       	std	Y+23, r19	; 0x17
    181e:	48 a1       	ldd	r20, Y+32	; 0x20
    1820:	48 8f       	std	Y+24, r20	; 0x18
    1822:	59 a1       	ldd	r21, Y+33	; 0x21
    1824:	59 8f       	std	Y+25, r21	; 0x19
    1826:	6a a1       	ldd	r22, Y+34	; 0x22
    1828:	6a 8f       	std	Y+26, r22	; 0x1a
    182a:	7b a1       	ldd	r23, Y+35	; 0x23
    182c:	7b 8f       	std	Y+27, r23	; 0x1b
    182e:	8c a1       	ldd	r24, Y+36	; 0x24
    1830:	8c 8f       	std	Y+28, r24	; 0x1c
    1832:	9d a1       	ldd	r25, Y+37	; 0x25
    1834:	9d 8f       	std	Y+29, r25	; 0x1d
    1836:	ee a1       	ldd	r30, Y+38	; 0x26
    1838:	ee 8f       	std	Y+30, r30	; 0x1e
    183a:	2f 89       	ldd	r18, Y+23	; 0x17
    183c:	38 8d       	ldd	r19, Y+24	; 0x18
    183e:	49 8d       	ldd	r20, Y+25	; 0x19
    1840:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1842:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1844:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1846:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1848:	9e 8d       	ldd	r25, Y+30	; 0x1e
    184a:	04 e0       	ldi	r16, 0x04	; 4
    184c:	0e 94 44 01 	call	0x288	; 0x288 <__ashldi3>
    1850:	2a af       	std	Y+58, r18	; 0x3a
    1852:	3b af       	std	Y+59, r19	; 0x3b
    1854:	4c af       	std	Y+60, r20	; 0x3c
    1856:	5d af       	std	Y+61, r21	; 0x3d
    1858:	6e af       	std	Y+62, r22	; 0x3e
    185a:	7f af       	std	Y+63, r23	; 0x3f
    185c:	21 96       	adiw	r28, 0x01	; 1
    185e:	8f af       	std	Y+63, r24	; 0x3f
    1860:	21 97       	sbiw	r28, 0x01	; 1
    1862:	22 96       	adiw	r28, 0x02	; 2
    1864:	9f af       	std	Y+63, r25	; 0x3f
    1866:	22 97       	sbiw	r28, 0x02	; 2
    1868:	ff 89       	ldd	r31, Y+23	; 0x17
    186a:	0a ad       	ldd	r16, Y+58	; 0x3a
    186c:	f0 0f       	add	r31, r16
    186e:	23 96       	adiw	r28, 0x03	; 3
    1870:	ff af       	std	Y+63, r31	; 0x3f
    1872:	23 97       	sbiw	r28, 0x03	; 3
    1874:	11 e0       	ldi	r17, 0x01	; 1
    1876:	2b 96       	adiw	r28, 0x0b	; 11
    1878:	1f af       	std	Y+63, r17	; 0x3f
    187a:	2b 97       	sbiw	r28, 0x0b	; 11
    187c:	23 96       	adiw	r28, 0x03	; 3
    187e:	2f ad       	ldd	r18, Y+63	; 0x3f
    1880:	23 97       	sbiw	r28, 0x03	; 3
    1882:	3f 89       	ldd	r19, Y+23	; 0x17
    1884:	23 17       	cp	r18, r19
    1886:	18 f0       	brcs	.+6      	; 0x188e <TIMER2_enuSetPWMDuty+0x3d4>
    1888:	2b 96       	adiw	r28, 0x0b	; 11
    188a:	1f ae       	std	Y+63, r1	; 0x3f
    188c:	2b 97       	sbiw	r28, 0x0b	; 11
    188e:	48 8d       	ldd	r20, Y+24	; 0x18
    1890:	5b ad       	ldd	r21, Y+59	; 0x3b
    1892:	45 0f       	add	r20, r21
    1894:	24 96       	adiw	r28, 0x04	; 4
    1896:	4f af       	std	Y+63, r20	; 0x3f
    1898:	24 97       	sbiw	r28, 0x04	; 4
    189a:	61 e0       	ldi	r22, 0x01	; 1
    189c:	2c 96       	adiw	r28, 0x0c	; 12
    189e:	6f af       	std	Y+63, r22	; 0x3f
    18a0:	2c 97       	sbiw	r28, 0x0c	; 12
    18a2:	24 96       	adiw	r28, 0x04	; 4
    18a4:	7f ad       	ldd	r23, Y+63	; 0x3f
    18a6:	24 97       	sbiw	r28, 0x04	; 4
    18a8:	88 8d       	ldd	r24, Y+24	; 0x18
    18aa:	78 17       	cp	r23, r24
    18ac:	18 f0       	brcs	.+6      	; 0x18b4 <TIMER2_enuSetPWMDuty+0x3fa>
    18ae:	2c 96       	adiw	r28, 0x0c	; 12
    18b0:	1f ae       	std	Y+63, r1	; 0x3f
    18b2:	2c 97       	sbiw	r28, 0x0c	; 12
    18b4:	2b 96       	adiw	r28, 0x0b	; 11
    18b6:	9f ad       	ldd	r25, Y+63	; 0x3f
    18b8:	2b 97       	sbiw	r28, 0x0b	; 11
    18ba:	24 96       	adiw	r28, 0x04	; 4
    18bc:	ef ad       	ldd	r30, Y+63	; 0x3f
    18be:	24 97       	sbiw	r28, 0x04	; 4
    18c0:	9e 0f       	add	r25, r30
    18c2:	2d 96       	adiw	r28, 0x0d	; 13
    18c4:	9f af       	std	Y+63, r25	; 0x3f
    18c6:	2d 97       	sbiw	r28, 0x0d	; 13
    18c8:	f1 e0       	ldi	r31, 0x01	; 1
    18ca:	2e 96       	adiw	r28, 0x0e	; 14
    18cc:	ff af       	std	Y+63, r31	; 0x3f
    18ce:	2e 97       	sbiw	r28, 0x0e	; 14
    18d0:	2d 96       	adiw	r28, 0x0d	; 13
    18d2:	0f ad       	ldd	r16, Y+63	; 0x3f
    18d4:	2d 97       	sbiw	r28, 0x0d	; 13
    18d6:	24 96       	adiw	r28, 0x04	; 4
    18d8:	1f ad       	ldd	r17, Y+63	; 0x3f
    18da:	24 97       	sbiw	r28, 0x04	; 4
    18dc:	01 17       	cp	r16, r17
    18de:	18 f0       	brcs	.+6      	; 0x18e6 <TIMER2_enuSetPWMDuty+0x42c>
    18e0:	2e 96       	adiw	r28, 0x0e	; 14
    18e2:	1f ae       	std	Y+63, r1	; 0x3f
    18e4:	2e 97       	sbiw	r28, 0x0e	; 14
    18e6:	2c 96       	adiw	r28, 0x0c	; 12
    18e8:	2f ad       	ldd	r18, Y+63	; 0x3f
    18ea:	2c 97       	sbiw	r28, 0x0c	; 12
    18ec:	2e 96       	adiw	r28, 0x0e	; 14
    18ee:	3f ad       	ldd	r19, Y+63	; 0x3f
    18f0:	2e 97       	sbiw	r28, 0x0e	; 14
    18f2:	23 2b       	or	r18, r19
    18f4:	2c 96       	adiw	r28, 0x0c	; 12
    18f6:	2f af       	std	Y+63, r18	; 0x3f
    18f8:	2c 97       	sbiw	r28, 0x0c	; 12
    18fa:	2d 96       	adiw	r28, 0x0d	; 13
    18fc:	4f ad       	ldd	r20, Y+63	; 0x3f
    18fe:	2d 97       	sbiw	r28, 0x0d	; 13
    1900:	24 96       	adiw	r28, 0x04	; 4
    1902:	4f af       	std	Y+63, r20	; 0x3f
    1904:	24 97       	sbiw	r28, 0x04	; 4
    1906:	59 8d       	ldd	r21, Y+25	; 0x19
    1908:	6c ad       	ldd	r22, Y+60	; 0x3c
    190a:	56 0f       	add	r21, r22
    190c:	25 96       	adiw	r28, 0x05	; 5
    190e:	5f af       	std	Y+63, r21	; 0x3f
    1910:	25 97       	sbiw	r28, 0x05	; 5
    1912:	71 e0       	ldi	r23, 0x01	; 1
    1914:	2f 96       	adiw	r28, 0x0f	; 15
    1916:	7f af       	std	Y+63, r23	; 0x3f
    1918:	2f 97       	sbiw	r28, 0x0f	; 15
    191a:	25 96       	adiw	r28, 0x05	; 5
    191c:	8f ad       	ldd	r24, Y+63	; 0x3f
    191e:	25 97       	sbiw	r28, 0x05	; 5
    1920:	99 8d       	ldd	r25, Y+25	; 0x19
    1922:	89 17       	cp	r24, r25
    1924:	18 f0       	brcs	.+6      	; 0x192c <TIMER2_enuSetPWMDuty+0x472>
    1926:	2f 96       	adiw	r28, 0x0f	; 15
    1928:	1f ae       	std	Y+63, r1	; 0x3f
    192a:	2f 97       	sbiw	r28, 0x0f	; 15
    192c:	2c 96       	adiw	r28, 0x0c	; 12
    192e:	ef ad       	ldd	r30, Y+63	; 0x3f
    1930:	2c 97       	sbiw	r28, 0x0c	; 12
    1932:	25 96       	adiw	r28, 0x05	; 5
    1934:	ff ad       	ldd	r31, Y+63	; 0x3f
    1936:	25 97       	sbiw	r28, 0x05	; 5
    1938:	ef 0f       	add	r30, r31
    193a:	60 96       	adiw	r28, 0x10	; 16
    193c:	ef af       	std	Y+63, r30	; 0x3f
    193e:	60 97       	sbiw	r28, 0x10	; 16
    1940:	01 e0       	ldi	r16, 0x01	; 1
    1942:	61 96       	adiw	r28, 0x11	; 17
    1944:	0f af       	std	Y+63, r16	; 0x3f
    1946:	61 97       	sbiw	r28, 0x11	; 17
    1948:	60 96       	adiw	r28, 0x10	; 16
    194a:	1f ad       	ldd	r17, Y+63	; 0x3f
    194c:	60 97       	sbiw	r28, 0x10	; 16
    194e:	25 96       	adiw	r28, 0x05	; 5
    1950:	2f ad       	ldd	r18, Y+63	; 0x3f
    1952:	25 97       	sbiw	r28, 0x05	; 5
    1954:	12 17       	cp	r17, r18
    1956:	18 f0       	brcs	.+6      	; 0x195e <TIMER2_enuSetPWMDuty+0x4a4>
    1958:	61 96       	adiw	r28, 0x11	; 17
    195a:	1f ae       	std	Y+63, r1	; 0x3f
    195c:	61 97       	sbiw	r28, 0x11	; 17
    195e:	2f 96       	adiw	r28, 0x0f	; 15
    1960:	3f ad       	ldd	r19, Y+63	; 0x3f
    1962:	2f 97       	sbiw	r28, 0x0f	; 15
    1964:	61 96       	adiw	r28, 0x11	; 17
    1966:	4f ad       	ldd	r20, Y+63	; 0x3f
    1968:	61 97       	sbiw	r28, 0x11	; 17
    196a:	34 2b       	or	r19, r20
    196c:	2f 96       	adiw	r28, 0x0f	; 15
    196e:	3f af       	std	Y+63, r19	; 0x3f
    1970:	2f 97       	sbiw	r28, 0x0f	; 15
    1972:	60 96       	adiw	r28, 0x10	; 16
    1974:	5f ad       	ldd	r21, Y+63	; 0x3f
    1976:	60 97       	sbiw	r28, 0x10	; 16
    1978:	25 96       	adiw	r28, 0x05	; 5
    197a:	5f af       	std	Y+63, r21	; 0x3f
    197c:	25 97       	sbiw	r28, 0x05	; 5
    197e:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1980:	7d ad       	ldd	r23, Y+61	; 0x3d
    1982:	67 0f       	add	r22, r23
    1984:	26 96       	adiw	r28, 0x06	; 6
    1986:	6f af       	std	Y+63, r22	; 0x3f
    1988:	26 97       	sbiw	r28, 0x06	; 6
    198a:	81 e0       	ldi	r24, 0x01	; 1
    198c:	62 96       	adiw	r28, 0x12	; 18
    198e:	8f af       	std	Y+63, r24	; 0x3f
    1990:	62 97       	sbiw	r28, 0x12	; 18
    1992:	26 96       	adiw	r28, 0x06	; 6
    1994:	9f ad       	ldd	r25, Y+63	; 0x3f
    1996:	26 97       	sbiw	r28, 0x06	; 6
    1998:	ea 8d       	ldd	r30, Y+26	; 0x1a
    199a:	9e 17       	cp	r25, r30
    199c:	18 f0       	brcs	.+6      	; 0x19a4 <TIMER2_enuSetPWMDuty+0x4ea>
    199e:	62 96       	adiw	r28, 0x12	; 18
    19a0:	1f ae       	std	Y+63, r1	; 0x3f
    19a2:	62 97       	sbiw	r28, 0x12	; 18
    19a4:	2f 96       	adiw	r28, 0x0f	; 15
    19a6:	ff ad       	ldd	r31, Y+63	; 0x3f
    19a8:	2f 97       	sbiw	r28, 0x0f	; 15
    19aa:	26 96       	adiw	r28, 0x06	; 6
    19ac:	0f ad       	ldd	r16, Y+63	; 0x3f
    19ae:	26 97       	sbiw	r28, 0x06	; 6
    19b0:	f0 0f       	add	r31, r16
    19b2:	63 96       	adiw	r28, 0x13	; 19
    19b4:	ff af       	std	Y+63, r31	; 0x3f
    19b6:	63 97       	sbiw	r28, 0x13	; 19
    19b8:	11 e0       	ldi	r17, 0x01	; 1
    19ba:	64 96       	adiw	r28, 0x14	; 20
    19bc:	1f af       	std	Y+63, r17	; 0x3f
    19be:	64 97       	sbiw	r28, 0x14	; 20
    19c0:	63 96       	adiw	r28, 0x13	; 19
    19c2:	2f ad       	ldd	r18, Y+63	; 0x3f
    19c4:	63 97       	sbiw	r28, 0x13	; 19
    19c6:	26 96       	adiw	r28, 0x06	; 6
    19c8:	3f ad       	ldd	r19, Y+63	; 0x3f
    19ca:	26 97       	sbiw	r28, 0x06	; 6
    19cc:	23 17       	cp	r18, r19
    19ce:	18 f0       	brcs	.+6      	; 0x19d6 <TIMER2_enuSetPWMDuty+0x51c>
    19d0:	64 96       	adiw	r28, 0x14	; 20
    19d2:	1f ae       	std	Y+63, r1	; 0x3f
    19d4:	64 97       	sbiw	r28, 0x14	; 20
    19d6:	62 96       	adiw	r28, 0x12	; 18
    19d8:	4f ad       	ldd	r20, Y+63	; 0x3f
    19da:	62 97       	sbiw	r28, 0x12	; 18
    19dc:	64 96       	adiw	r28, 0x14	; 20
    19de:	5f ad       	ldd	r21, Y+63	; 0x3f
    19e0:	64 97       	sbiw	r28, 0x14	; 20
    19e2:	45 2b       	or	r20, r21
    19e4:	62 96       	adiw	r28, 0x12	; 18
    19e6:	4f af       	std	Y+63, r20	; 0x3f
    19e8:	62 97       	sbiw	r28, 0x12	; 18
    19ea:	63 96       	adiw	r28, 0x13	; 19
    19ec:	6f ad       	ldd	r22, Y+63	; 0x3f
    19ee:	63 97       	sbiw	r28, 0x13	; 19
    19f0:	26 96       	adiw	r28, 0x06	; 6
    19f2:	6f af       	std	Y+63, r22	; 0x3f
    19f4:	26 97       	sbiw	r28, 0x06	; 6
    19f6:	7b 8d       	ldd	r23, Y+27	; 0x1b
    19f8:	8e ad       	ldd	r24, Y+62	; 0x3e
    19fa:	78 0f       	add	r23, r24
    19fc:	27 96       	adiw	r28, 0x07	; 7
    19fe:	7f af       	std	Y+63, r23	; 0x3f
    1a00:	27 97       	sbiw	r28, 0x07	; 7
    1a02:	91 e0       	ldi	r25, 0x01	; 1
    1a04:	65 96       	adiw	r28, 0x15	; 21
    1a06:	9f af       	std	Y+63, r25	; 0x3f
    1a08:	65 97       	sbiw	r28, 0x15	; 21
    1a0a:	27 96       	adiw	r28, 0x07	; 7
    1a0c:	ef ad       	ldd	r30, Y+63	; 0x3f
    1a0e:	27 97       	sbiw	r28, 0x07	; 7
    1a10:	fb 8d       	ldd	r31, Y+27	; 0x1b
    1a12:	ef 17       	cp	r30, r31
    1a14:	18 f0       	brcs	.+6      	; 0x1a1c <TIMER2_enuSetPWMDuty+0x562>
    1a16:	65 96       	adiw	r28, 0x15	; 21
    1a18:	1f ae       	std	Y+63, r1	; 0x3f
    1a1a:	65 97       	sbiw	r28, 0x15	; 21
    1a1c:	62 96       	adiw	r28, 0x12	; 18
    1a1e:	0f ad       	ldd	r16, Y+63	; 0x3f
    1a20:	62 97       	sbiw	r28, 0x12	; 18
    1a22:	27 96       	adiw	r28, 0x07	; 7
    1a24:	1f ad       	ldd	r17, Y+63	; 0x3f
    1a26:	27 97       	sbiw	r28, 0x07	; 7
    1a28:	01 0f       	add	r16, r17
    1a2a:	66 96       	adiw	r28, 0x16	; 22
    1a2c:	0f af       	std	Y+63, r16	; 0x3f
    1a2e:	66 97       	sbiw	r28, 0x16	; 22
    1a30:	21 e0       	ldi	r18, 0x01	; 1
    1a32:	67 96       	adiw	r28, 0x17	; 23
    1a34:	2f af       	std	Y+63, r18	; 0x3f
    1a36:	67 97       	sbiw	r28, 0x17	; 23
    1a38:	66 96       	adiw	r28, 0x16	; 22
    1a3a:	3f ad       	ldd	r19, Y+63	; 0x3f
    1a3c:	66 97       	sbiw	r28, 0x16	; 22
    1a3e:	27 96       	adiw	r28, 0x07	; 7
    1a40:	4f ad       	ldd	r20, Y+63	; 0x3f
    1a42:	27 97       	sbiw	r28, 0x07	; 7
    1a44:	34 17       	cp	r19, r20
    1a46:	18 f0       	brcs	.+6      	; 0x1a4e <TIMER2_enuSetPWMDuty+0x594>
    1a48:	67 96       	adiw	r28, 0x17	; 23
    1a4a:	1f ae       	std	Y+63, r1	; 0x3f
    1a4c:	67 97       	sbiw	r28, 0x17	; 23
    1a4e:	65 96       	adiw	r28, 0x15	; 21
    1a50:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a52:	65 97       	sbiw	r28, 0x15	; 21
    1a54:	67 96       	adiw	r28, 0x17	; 23
    1a56:	6f ad       	ldd	r22, Y+63	; 0x3f
    1a58:	67 97       	sbiw	r28, 0x17	; 23
    1a5a:	56 2b       	or	r21, r22
    1a5c:	65 96       	adiw	r28, 0x15	; 21
    1a5e:	5f af       	std	Y+63, r21	; 0x3f
    1a60:	65 97       	sbiw	r28, 0x15	; 21
    1a62:	66 96       	adiw	r28, 0x16	; 22
    1a64:	7f ad       	ldd	r23, Y+63	; 0x3f
    1a66:	66 97       	sbiw	r28, 0x16	; 22
    1a68:	27 96       	adiw	r28, 0x07	; 7
    1a6a:	7f af       	std	Y+63, r23	; 0x3f
    1a6c:	27 97       	sbiw	r28, 0x07	; 7
    1a6e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1a70:	9f ad       	ldd	r25, Y+63	; 0x3f
    1a72:	89 0f       	add	r24, r25
    1a74:	28 96       	adiw	r28, 0x08	; 8
    1a76:	8f af       	std	Y+63, r24	; 0x3f
    1a78:	28 97       	sbiw	r28, 0x08	; 8
    1a7a:	e1 e0       	ldi	r30, 0x01	; 1
    1a7c:	68 96       	adiw	r28, 0x18	; 24
    1a7e:	ef af       	std	Y+63, r30	; 0x3f
    1a80:	68 97       	sbiw	r28, 0x18	; 24
    1a82:	28 96       	adiw	r28, 0x08	; 8
    1a84:	ff ad       	ldd	r31, Y+63	; 0x3f
    1a86:	28 97       	sbiw	r28, 0x08	; 8
    1a88:	0c 8d       	ldd	r16, Y+28	; 0x1c
    1a8a:	f0 17       	cp	r31, r16
    1a8c:	18 f0       	brcs	.+6      	; 0x1a94 <TIMER2_enuSetPWMDuty+0x5da>
    1a8e:	68 96       	adiw	r28, 0x18	; 24
    1a90:	1f ae       	std	Y+63, r1	; 0x3f
    1a92:	68 97       	sbiw	r28, 0x18	; 24
    1a94:	65 96       	adiw	r28, 0x15	; 21
    1a96:	1f ad       	ldd	r17, Y+63	; 0x3f
    1a98:	65 97       	sbiw	r28, 0x15	; 21
    1a9a:	28 96       	adiw	r28, 0x08	; 8
    1a9c:	2f ad       	ldd	r18, Y+63	; 0x3f
    1a9e:	28 97       	sbiw	r28, 0x08	; 8
    1aa0:	12 0f       	add	r17, r18
    1aa2:	69 96       	adiw	r28, 0x19	; 25
    1aa4:	1f af       	std	Y+63, r17	; 0x3f
    1aa6:	69 97       	sbiw	r28, 0x19	; 25
    1aa8:	31 e0       	ldi	r19, 0x01	; 1
    1aaa:	6a 96       	adiw	r28, 0x1a	; 26
    1aac:	3f af       	std	Y+63, r19	; 0x3f
    1aae:	6a 97       	sbiw	r28, 0x1a	; 26
    1ab0:	69 96       	adiw	r28, 0x19	; 25
    1ab2:	4f ad       	ldd	r20, Y+63	; 0x3f
    1ab4:	69 97       	sbiw	r28, 0x19	; 25
    1ab6:	28 96       	adiw	r28, 0x08	; 8
    1ab8:	5f ad       	ldd	r21, Y+63	; 0x3f
    1aba:	28 97       	sbiw	r28, 0x08	; 8
    1abc:	45 17       	cp	r20, r21
    1abe:	18 f0       	brcs	.+6      	; 0x1ac6 <TIMER2_enuSetPWMDuty+0x60c>
    1ac0:	6a 96       	adiw	r28, 0x1a	; 26
    1ac2:	1f ae       	std	Y+63, r1	; 0x3f
    1ac4:	6a 97       	sbiw	r28, 0x1a	; 26
    1ac6:	68 96       	adiw	r28, 0x18	; 24
    1ac8:	6f ad       	ldd	r22, Y+63	; 0x3f
    1aca:	68 97       	sbiw	r28, 0x18	; 24
    1acc:	6a 96       	adiw	r28, 0x1a	; 26
    1ace:	7f ad       	ldd	r23, Y+63	; 0x3f
    1ad0:	6a 97       	sbiw	r28, 0x1a	; 26
    1ad2:	67 2b       	or	r22, r23
    1ad4:	68 96       	adiw	r28, 0x18	; 24
    1ad6:	6f af       	std	Y+63, r22	; 0x3f
    1ad8:	68 97       	sbiw	r28, 0x18	; 24
    1ada:	69 96       	adiw	r28, 0x19	; 25
    1adc:	8f ad       	ldd	r24, Y+63	; 0x3f
    1ade:	69 97       	sbiw	r28, 0x19	; 25
    1ae0:	28 96       	adiw	r28, 0x08	; 8
    1ae2:	8f af       	std	Y+63, r24	; 0x3f
    1ae4:	28 97       	sbiw	r28, 0x08	; 8
    1ae6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1ae8:	21 96       	adiw	r28, 0x01	; 1
    1aea:	ef ad       	ldd	r30, Y+63	; 0x3f
    1aec:	21 97       	sbiw	r28, 0x01	; 1
    1aee:	9e 0f       	add	r25, r30
    1af0:	29 96       	adiw	r28, 0x09	; 9
    1af2:	9f af       	std	Y+63, r25	; 0x3f
    1af4:	29 97       	sbiw	r28, 0x09	; 9
    1af6:	f1 e0       	ldi	r31, 0x01	; 1
    1af8:	6b 96       	adiw	r28, 0x1b	; 27
    1afa:	ff af       	std	Y+63, r31	; 0x3f
    1afc:	6b 97       	sbiw	r28, 0x1b	; 27
    1afe:	29 96       	adiw	r28, 0x09	; 9
    1b00:	0f ad       	ldd	r16, Y+63	; 0x3f
    1b02:	29 97       	sbiw	r28, 0x09	; 9
    1b04:	1d 8d       	ldd	r17, Y+29	; 0x1d
    1b06:	01 17       	cp	r16, r17
    1b08:	18 f0       	brcs	.+6      	; 0x1b10 <TIMER2_enuSetPWMDuty+0x656>
    1b0a:	6b 96       	adiw	r28, 0x1b	; 27
    1b0c:	1f ae       	std	Y+63, r1	; 0x3f
    1b0e:	6b 97       	sbiw	r28, 0x1b	; 27
    1b10:	68 96       	adiw	r28, 0x18	; 24
    1b12:	2f ad       	ldd	r18, Y+63	; 0x3f
    1b14:	68 97       	sbiw	r28, 0x18	; 24
    1b16:	29 96       	adiw	r28, 0x09	; 9
    1b18:	3f ad       	ldd	r19, Y+63	; 0x3f
    1b1a:	29 97       	sbiw	r28, 0x09	; 9
    1b1c:	23 0f       	add	r18, r19
    1b1e:	6c 96       	adiw	r28, 0x1c	; 28
    1b20:	2f af       	std	Y+63, r18	; 0x3f
    1b22:	6c 97       	sbiw	r28, 0x1c	; 28
    1b24:	41 e0       	ldi	r20, 0x01	; 1
    1b26:	6d 96       	adiw	r28, 0x1d	; 29
    1b28:	4f af       	std	Y+63, r20	; 0x3f
    1b2a:	6d 97       	sbiw	r28, 0x1d	; 29
    1b2c:	6c 96       	adiw	r28, 0x1c	; 28
    1b2e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b30:	6c 97       	sbiw	r28, 0x1c	; 28
    1b32:	29 96       	adiw	r28, 0x09	; 9
    1b34:	6f ad       	ldd	r22, Y+63	; 0x3f
    1b36:	29 97       	sbiw	r28, 0x09	; 9
    1b38:	56 17       	cp	r21, r22
    1b3a:	18 f0       	brcs	.+6      	; 0x1b42 <TIMER2_enuSetPWMDuty+0x688>
    1b3c:	6d 96       	adiw	r28, 0x1d	; 29
    1b3e:	1f ae       	std	Y+63, r1	; 0x3f
    1b40:	6d 97       	sbiw	r28, 0x1d	; 29
    1b42:	6b 96       	adiw	r28, 0x1b	; 27
    1b44:	7f ad       	ldd	r23, Y+63	; 0x3f
    1b46:	6b 97       	sbiw	r28, 0x1b	; 27
    1b48:	6d 96       	adiw	r28, 0x1d	; 29
    1b4a:	8f ad       	ldd	r24, Y+63	; 0x3f
    1b4c:	6d 97       	sbiw	r28, 0x1d	; 29
    1b4e:	78 2b       	or	r23, r24
    1b50:	6b 96       	adiw	r28, 0x1b	; 27
    1b52:	7f af       	std	Y+63, r23	; 0x3f
    1b54:	6b 97       	sbiw	r28, 0x1b	; 27
    1b56:	6c 96       	adiw	r28, 0x1c	; 28
    1b58:	9f ad       	ldd	r25, Y+63	; 0x3f
    1b5a:	6c 97       	sbiw	r28, 0x1c	; 28
    1b5c:	29 96       	adiw	r28, 0x09	; 9
    1b5e:	9f af       	std	Y+63, r25	; 0x3f
    1b60:	29 97       	sbiw	r28, 0x09	; 9
    1b62:	ee 8d       	ldd	r30, Y+30	; 0x1e
    1b64:	22 96       	adiw	r28, 0x02	; 2
    1b66:	ff ad       	ldd	r31, Y+63	; 0x3f
    1b68:	22 97       	sbiw	r28, 0x02	; 2
    1b6a:	ef 0f       	add	r30, r31
    1b6c:	2a 96       	adiw	r28, 0x0a	; 10
    1b6e:	ef af       	std	Y+63, r30	; 0x3f
    1b70:	2a 97       	sbiw	r28, 0x0a	; 10
    1b72:	6b 96       	adiw	r28, 0x1b	; 27
    1b74:	8f ad       	ldd	r24, Y+63	; 0x3f
    1b76:	6b 97       	sbiw	r28, 0x1b	; 27
    1b78:	2a 96       	adiw	r28, 0x0a	; 10
    1b7a:	0f ad       	ldd	r16, Y+63	; 0x3f
    1b7c:	2a 97       	sbiw	r28, 0x0a	; 10
    1b7e:	80 0f       	add	r24, r16
    1b80:	2a 96       	adiw	r28, 0x0a	; 10
    1b82:	8f af       	std	Y+63, r24	; 0x3f
    1b84:	2a 97       	sbiw	r28, 0x0a	; 10
    1b86:	23 96       	adiw	r28, 0x03	; 3
    1b88:	af ac       	ldd	r10, Y+63	; 0x3f
    1b8a:	23 97       	sbiw	r28, 0x03	; 3
    1b8c:	24 96       	adiw	r28, 0x04	; 4
    1b8e:	bf ac       	ldd	r11, Y+63	; 0x3f
    1b90:	24 97       	sbiw	r28, 0x04	; 4
    1b92:	25 96       	adiw	r28, 0x05	; 5
    1b94:	cf ac       	ldd	r12, Y+63	; 0x3f
    1b96:	25 97       	sbiw	r28, 0x05	; 5
    1b98:	26 96       	adiw	r28, 0x06	; 6
    1b9a:	df ac       	ldd	r13, Y+63	; 0x3f
    1b9c:	26 97       	sbiw	r28, 0x06	; 6
    1b9e:	27 96       	adiw	r28, 0x07	; 7
    1ba0:	ef ac       	ldd	r14, Y+63	; 0x3f
    1ba2:	27 97       	sbiw	r28, 0x07	; 7
    1ba4:	28 96       	adiw	r28, 0x08	; 8
    1ba6:	ff ac       	ldd	r15, Y+63	; 0x3f
    1ba8:	28 97       	sbiw	r28, 0x08	; 8
    1baa:	29 96       	adiw	r28, 0x09	; 9
    1bac:	0f ad       	ldd	r16, Y+63	; 0x3f
    1bae:	29 97       	sbiw	r28, 0x09	; 9
    1bb0:	2a 96       	adiw	r28, 0x0a	; 10
    1bb2:	1f ad       	ldd	r17, Y+63	; 0x3f
    1bb4:	2a 97       	sbiw	r28, 0x0a	; 10
    1bb6:	2a 2d       	mov	r18, r10
    1bb8:	3b 2d       	mov	r19, r11
    1bba:	4c 2d       	mov	r20, r12
    1bbc:	5d 2d       	mov	r21, r13
    1bbe:	6e 2d       	mov	r22, r14
    1bc0:	7f 2d       	mov	r23, r15
    1bc2:	80 2f       	mov	r24, r16
    1bc4:	91 2f       	mov	r25, r17
    1bc6:	0e 94 ef 01 	call	0x3de	; 0x3de <__floatundisf>
    1bca:	dc 01       	movw	r26, r24
    1bcc:	cb 01       	movw	r24, r22
    1bce:	bc 01       	movw	r22, r24
    1bd0:	cd 01       	movw	r24, r26
    1bd2:	20 e0       	ldi	r18, 0x00	; 0
    1bd4:	30 e0       	ldi	r19, 0x00	; 0
    1bd6:	48 ec       	ldi	r20, 0xC8	; 200
    1bd8:	52 ec       	ldi	r21, 0xC2	; 194
    1bda:	0e 94 6f 05 	call	0xade	; 0xade <__divsf3>
    1bde:	dc 01       	movw	r26, r24
    1be0:	cb 01       	movw	r24, r22
    1be2:	bc 01       	movw	r22, r24
    1be4:	cd 01       	movw	r24, r26
    1be6:	20 e0       	ldi	r18, 0x00	; 0
    1be8:	30 e0       	ldi	r19, 0x00	; 0
    1bea:	4f e7       	ldi	r20, 0x7F	; 127
    1bec:	53 e4       	ldi	r21, 0x43	; 67
    1bee:	0e 94 48 04 	call	0x890	; 0x890 <__addsf3>
    1bf2:	dc 01       	movw	r26, r24
    1bf4:	cb 01       	movw	r24, r22
    1bf6:	bc 01       	movw	r22, r24
    1bf8:	cd 01       	movw	r24, r26
    1bfa:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    1bfe:	dc 01       	movw	r26, r24
    1c00:	cb 01       	movw	r24, r22
    1c02:	ed 89       	ldd	r30, Y+21	; 0x15
    1c04:	fe 89       	ldd	r31, Y+22	; 0x16
    1c06:	80 83       	st	Z, r24
				Local_enuErrorState = ES_OK;
    1c08:	19 82       	std	Y+1, r1	; 0x01
    1c0a:	54 c5       	rjmp	.+2728   	; 0x26b4 <TIMER2_enuSetPWMDuty+0x11fa>
			}
			else if(TIM2_CleraONCOMMATCH ==(TCCR2 & TIM2_SETONCOMMATCH))
    1c0c:	e5 e4       	ldi	r30, 0x45	; 69
    1c0e:	f0 e0       	ldi	r31, 0x00	; 0
    1c10:	80 81       	ld	r24, Z
    1c12:	88 2f       	mov	r24, r24
    1c14:	90 e0       	ldi	r25, 0x00	; 0
    1c16:	80 73       	andi	r24, 0x30	; 48
    1c18:	90 70       	andi	r25, 0x00	; 0
    1c1a:	80 32       	cpi	r24, 0x20	; 32
    1c1c:	91 05       	cpc	r25, r1
    1c1e:	09 f0       	breq	.+2      	; 0x1c22 <TIMER2_enuSetPWMDuty+0x768>
    1c20:	44 c5       	rjmp	.+2696   	; 0x26aa <TIMER2_enuSetPWMDuty+0x11f0>
			{
				OCR2 = Copy_u8Duty * 255ull /100.f;
    1c22:	03 e4       	ldi	r16, 0x43	; 67
    1c24:	10 e0       	ldi	r17, 0x00	; 0
    1c26:	1c 87       	std	Y+12, r17	; 0x0c
    1c28:	0b 87       	std	Y+11, r16	; 0x0b
    1c2a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c2c:	08 2f       	mov	r16, r24
    1c2e:	10 e0       	ldi	r17, 0x00	; 0
    1c30:	20 e0       	ldi	r18, 0x00	; 0
    1c32:	30 e0       	ldi	r19, 0x00	; 0
    1c34:	40 e0       	ldi	r20, 0x00	; 0
    1c36:	50 e0       	ldi	r21, 0x00	; 0
    1c38:	60 e0       	ldi	r22, 0x00	; 0
    1c3a:	70 e0       	ldi	r23, 0x00	; 0
    1c3c:	0b 83       	std	Y+3, r16	; 0x03
    1c3e:	1c 83       	std	Y+4, r17	; 0x04
    1c40:	2d 83       	std	Y+5, r18	; 0x05
    1c42:	3e 83       	std	Y+6, r19	; 0x06
    1c44:	4f 83       	std	Y+7, r20	; 0x07
    1c46:	58 87       	std	Y+8, r21	; 0x08
    1c48:	69 87       	std	Y+9, r22	; 0x09
    1c4a:	7a 87       	std	Y+10, r23	; 0x0a
    1c4c:	ab 80       	ldd	r10, Y+3	; 0x03
    1c4e:	bc 80       	ldd	r11, Y+4	; 0x04
    1c50:	cd 80       	ldd	r12, Y+5	; 0x05
    1c52:	de 80       	ldd	r13, Y+6	; 0x06
    1c54:	ef 80       	ldd	r14, Y+7	; 0x07
    1c56:	f8 84       	ldd	r15, Y+8	; 0x08
    1c58:	09 85       	ldd	r16, Y+9	; 0x09
    1c5a:	1a 85       	ldd	r17, Y+10	; 0x0a
    1c5c:	2a 2d       	mov	r18, r10
    1c5e:	3b 2d       	mov	r19, r11
    1c60:	4c 2d       	mov	r20, r12
    1c62:	5d 2d       	mov	r21, r13
    1c64:	6e 2d       	mov	r22, r14
    1c66:	7f 2d       	mov	r23, r15
    1c68:	80 2f       	mov	r24, r16
    1c6a:	91 2f       	mov	r25, r17
    1c6c:	04 e0       	ldi	r16, 0x04	; 4
    1c6e:	0e 94 44 01 	call	0x288	; 0x288 <__ashldi3>
    1c72:	6e 96       	adiw	r28, 0x1e	; 30
    1c74:	2f af       	std	Y+63, r18	; 0x3f
    1c76:	6e 97       	sbiw	r28, 0x1e	; 30
    1c78:	6f 96       	adiw	r28, 0x1f	; 31
    1c7a:	3f af       	std	Y+63, r19	; 0x3f
    1c7c:	6f 97       	sbiw	r28, 0x1f	; 31
    1c7e:	a0 96       	adiw	r28, 0x20	; 32
    1c80:	4f af       	std	Y+63, r20	; 0x3f
    1c82:	a0 97       	sbiw	r28, 0x20	; 32
    1c84:	a1 96       	adiw	r28, 0x21	; 33
    1c86:	5f af       	std	Y+63, r21	; 0x3f
    1c88:	a1 97       	sbiw	r28, 0x21	; 33
    1c8a:	a2 96       	adiw	r28, 0x22	; 34
    1c8c:	6f af       	std	Y+63, r22	; 0x3f
    1c8e:	a2 97       	sbiw	r28, 0x22	; 34
    1c90:	a3 96       	adiw	r28, 0x23	; 35
    1c92:	7f af       	std	Y+63, r23	; 0x3f
    1c94:	a3 97       	sbiw	r28, 0x23	; 35
    1c96:	a4 96       	adiw	r28, 0x24	; 36
    1c98:	8f af       	std	Y+63, r24	; 0x3f
    1c9a:	a4 97       	sbiw	r28, 0x24	; 36
    1c9c:	a5 96       	adiw	r28, 0x25	; 37
    1c9e:	9f af       	std	Y+63, r25	; 0x3f
    1ca0:	a5 97       	sbiw	r28, 0x25	; 37
    1ca2:	6e 96       	adiw	r28, 0x1e	; 30
    1ca4:	1f ad       	ldd	r17, Y+63	; 0x3f
    1ca6:	6e 97       	sbiw	r28, 0x1e	; 30
    1ca8:	2b 81       	ldd	r18, Y+3	; 0x03
    1caa:	12 1b       	sub	r17, r18
    1cac:	a6 96       	adiw	r28, 0x26	; 38
    1cae:	1f af       	std	Y+63, r17	; 0x3f
    1cb0:	a6 97       	sbiw	r28, 0x26	; 38
    1cb2:	31 e0       	ldi	r19, 0x01	; 1
    1cb4:	ae 96       	adiw	r28, 0x2e	; 46
    1cb6:	3f af       	std	Y+63, r19	; 0x3f
    1cb8:	ae 97       	sbiw	r28, 0x2e	; 46
    1cba:	a6 96       	adiw	r28, 0x26	; 38
    1cbc:	4f ad       	ldd	r20, Y+63	; 0x3f
    1cbe:	a6 97       	sbiw	r28, 0x26	; 38
    1cc0:	6e 96       	adiw	r28, 0x1e	; 30
    1cc2:	5f ad       	ldd	r21, Y+63	; 0x3f
    1cc4:	6e 97       	sbiw	r28, 0x1e	; 30
    1cc6:	54 17       	cp	r21, r20
    1cc8:	18 f0       	brcs	.+6      	; 0x1cd0 <TIMER2_enuSetPWMDuty+0x816>
    1cca:	ae 96       	adiw	r28, 0x2e	; 46
    1ccc:	1f ae       	std	Y+63, r1	; 0x3f
    1cce:	ae 97       	sbiw	r28, 0x2e	; 46
    1cd0:	6f 96       	adiw	r28, 0x1f	; 31
    1cd2:	6f ad       	ldd	r22, Y+63	; 0x3f
    1cd4:	6f 97       	sbiw	r28, 0x1f	; 31
    1cd6:	7c 81       	ldd	r23, Y+4	; 0x04
    1cd8:	67 1b       	sub	r22, r23
    1cda:	a7 96       	adiw	r28, 0x27	; 39
    1cdc:	6f af       	std	Y+63, r22	; 0x3f
    1cde:	a7 97       	sbiw	r28, 0x27	; 39
    1ce0:	81 e0       	ldi	r24, 0x01	; 1
    1ce2:	af 96       	adiw	r28, 0x2f	; 47
    1ce4:	8f af       	std	Y+63, r24	; 0x3f
    1ce6:	af 97       	sbiw	r28, 0x2f	; 47
    1ce8:	a7 96       	adiw	r28, 0x27	; 39
    1cea:	9f ad       	ldd	r25, Y+63	; 0x3f
    1cec:	a7 97       	sbiw	r28, 0x27	; 39
    1cee:	6f 96       	adiw	r28, 0x1f	; 31
    1cf0:	ef ad       	ldd	r30, Y+63	; 0x3f
    1cf2:	6f 97       	sbiw	r28, 0x1f	; 31
    1cf4:	e9 17       	cp	r30, r25
    1cf6:	18 f0       	brcs	.+6      	; 0x1cfe <TIMER2_enuSetPWMDuty+0x844>
    1cf8:	af 96       	adiw	r28, 0x2f	; 47
    1cfa:	1f ae       	std	Y+63, r1	; 0x3f
    1cfc:	af 97       	sbiw	r28, 0x2f	; 47
    1cfe:	a7 96       	adiw	r28, 0x27	; 39
    1d00:	ff ad       	ldd	r31, Y+63	; 0x3f
    1d02:	a7 97       	sbiw	r28, 0x27	; 39
    1d04:	ae 96       	adiw	r28, 0x2e	; 46
    1d06:	0f ad       	ldd	r16, Y+63	; 0x3f
    1d08:	ae 97       	sbiw	r28, 0x2e	; 46
    1d0a:	f0 1b       	sub	r31, r16
    1d0c:	e0 96       	adiw	r28, 0x30	; 48
    1d0e:	ff af       	std	Y+63, r31	; 0x3f
    1d10:	e0 97       	sbiw	r28, 0x30	; 48
    1d12:	11 e0       	ldi	r17, 0x01	; 1
    1d14:	e1 96       	adiw	r28, 0x31	; 49
    1d16:	1f af       	std	Y+63, r17	; 0x3f
    1d18:	e1 97       	sbiw	r28, 0x31	; 49
    1d1a:	e0 96       	adiw	r28, 0x30	; 48
    1d1c:	2f ad       	ldd	r18, Y+63	; 0x3f
    1d1e:	e0 97       	sbiw	r28, 0x30	; 48
    1d20:	a7 96       	adiw	r28, 0x27	; 39
    1d22:	3f ad       	ldd	r19, Y+63	; 0x3f
    1d24:	a7 97       	sbiw	r28, 0x27	; 39
    1d26:	32 17       	cp	r19, r18
    1d28:	18 f0       	brcs	.+6      	; 0x1d30 <TIMER2_enuSetPWMDuty+0x876>
    1d2a:	e1 96       	adiw	r28, 0x31	; 49
    1d2c:	1f ae       	std	Y+63, r1	; 0x3f
    1d2e:	e1 97       	sbiw	r28, 0x31	; 49
    1d30:	af 96       	adiw	r28, 0x2f	; 47
    1d32:	4f ad       	ldd	r20, Y+63	; 0x3f
    1d34:	af 97       	sbiw	r28, 0x2f	; 47
    1d36:	e1 96       	adiw	r28, 0x31	; 49
    1d38:	5f ad       	ldd	r21, Y+63	; 0x3f
    1d3a:	e1 97       	sbiw	r28, 0x31	; 49
    1d3c:	45 2b       	or	r20, r21
    1d3e:	af 96       	adiw	r28, 0x2f	; 47
    1d40:	4f af       	std	Y+63, r20	; 0x3f
    1d42:	af 97       	sbiw	r28, 0x2f	; 47
    1d44:	e0 96       	adiw	r28, 0x30	; 48
    1d46:	6f ad       	ldd	r22, Y+63	; 0x3f
    1d48:	e0 97       	sbiw	r28, 0x30	; 48
    1d4a:	a7 96       	adiw	r28, 0x27	; 39
    1d4c:	6f af       	std	Y+63, r22	; 0x3f
    1d4e:	a7 97       	sbiw	r28, 0x27	; 39
    1d50:	a0 96       	adiw	r28, 0x20	; 32
    1d52:	7f ad       	ldd	r23, Y+63	; 0x3f
    1d54:	a0 97       	sbiw	r28, 0x20	; 32
    1d56:	8d 81       	ldd	r24, Y+5	; 0x05
    1d58:	78 1b       	sub	r23, r24
    1d5a:	a8 96       	adiw	r28, 0x28	; 40
    1d5c:	7f af       	std	Y+63, r23	; 0x3f
    1d5e:	a8 97       	sbiw	r28, 0x28	; 40
    1d60:	91 e0       	ldi	r25, 0x01	; 1
    1d62:	e2 96       	adiw	r28, 0x32	; 50
    1d64:	9f af       	std	Y+63, r25	; 0x3f
    1d66:	e2 97       	sbiw	r28, 0x32	; 50
    1d68:	a8 96       	adiw	r28, 0x28	; 40
    1d6a:	ef ad       	ldd	r30, Y+63	; 0x3f
    1d6c:	a8 97       	sbiw	r28, 0x28	; 40
    1d6e:	a0 96       	adiw	r28, 0x20	; 32
    1d70:	ff ad       	ldd	r31, Y+63	; 0x3f
    1d72:	a0 97       	sbiw	r28, 0x20	; 32
    1d74:	fe 17       	cp	r31, r30
    1d76:	18 f0       	brcs	.+6      	; 0x1d7e <TIMER2_enuSetPWMDuty+0x8c4>
    1d78:	e2 96       	adiw	r28, 0x32	; 50
    1d7a:	1f ae       	std	Y+63, r1	; 0x3f
    1d7c:	e2 97       	sbiw	r28, 0x32	; 50
    1d7e:	a8 96       	adiw	r28, 0x28	; 40
    1d80:	0f ad       	ldd	r16, Y+63	; 0x3f
    1d82:	a8 97       	sbiw	r28, 0x28	; 40
    1d84:	af 96       	adiw	r28, 0x2f	; 47
    1d86:	1f ad       	ldd	r17, Y+63	; 0x3f
    1d88:	af 97       	sbiw	r28, 0x2f	; 47
    1d8a:	01 1b       	sub	r16, r17
    1d8c:	e3 96       	adiw	r28, 0x33	; 51
    1d8e:	0f af       	std	Y+63, r16	; 0x3f
    1d90:	e3 97       	sbiw	r28, 0x33	; 51
    1d92:	21 e0       	ldi	r18, 0x01	; 1
    1d94:	e4 96       	adiw	r28, 0x34	; 52
    1d96:	2f af       	std	Y+63, r18	; 0x3f
    1d98:	e4 97       	sbiw	r28, 0x34	; 52
    1d9a:	e3 96       	adiw	r28, 0x33	; 51
    1d9c:	3f ad       	ldd	r19, Y+63	; 0x3f
    1d9e:	e3 97       	sbiw	r28, 0x33	; 51
    1da0:	a8 96       	adiw	r28, 0x28	; 40
    1da2:	4f ad       	ldd	r20, Y+63	; 0x3f
    1da4:	a8 97       	sbiw	r28, 0x28	; 40
    1da6:	43 17       	cp	r20, r19
    1da8:	18 f0       	brcs	.+6      	; 0x1db0 <TIMER2_enuSetPWMDuty+0x8f6>
    1daa:	e4 96       	adiw	r28, 0x34	; 52
    1dac:	1f ae       	std	Y+63, r1	; 0x3f
    1dae:	e4 97       	sbiw	r28, 0x34	; 52
    1db0:	e2 96       	adiw	r28, 0x32	; 50
    1db2:	5f ad       	ldd	r21, Y+63	; 0x3f
    1db4:	e2 97       	sbiw	r28, 0x32	; 50
    1db6:	e4 96       	adiw	r28, 0x34	; 52
    1db8:	6f ad       	ldd	r22, Y+63	; 0x3f
    1dba:	e4 97       	sbiw	r28, 0x34	; 52
    1dbc:	56 2b       	or	r21, r22
    1dbe:	e2 96       	adiw	r28, 0x32	; 50
    1dc0:	5f af       	std	Y+63, r21	; 0x3f
    1dc2:	e2 97       	sbiw	r28, 0x32	; 50
    1dc4:	e3 96       	adiw	r28, 0x33	; 51
    1dc6:	7f ad       	ldd	r23, Y+63	; 0x3f
    1dc8:	e3 97       	sbiw	r28, 0x33	; 51
    1dca:	a8 96       	adiw	r28, 0x28	; 40
    1dcc:	7f af       	std	Y+63, r23	; 0x3f
    1dce:	a8 97       	sbiw	r28, 0x28	; 40
    1dd0:	a1 96       	adiw	r28, 0x21	; 33
    1dd2:	8f ad       	ldd	r24, Y+63	; 0x3f
    1dd4:	a1 97       	sbiw	r28, 0x21	; 33
    1dd6:	9e 81       	ldd	r25, Y+6	; 0x06
    1dd8:	89 1b       	sub	r24, r25
    1dda:	a9 96       	adiw	r28, 0x29	; 41
    1ddc:	8f af       	std	Y+63, r24	; 0x3f
    1dde:	a9 97       	sbiw	r28, 0x29	; 41
    1de0:	e1 e0       	ldi	r30, 0x01	; 1
    1de2:	e5 96       	adiw	r28, 0x35	; 53
    1de4:	ef af       	std	Y+63, r30	; 0x3f
    1de6:	e5 97       	sbiw	r28, 0x35	; 53
    1de8:	a9 96       	adiw	r28, 0x29	; 41
    1dea:	ff ad       	ldd	r31, Y+63	; 0x3f
    1dec:	a9 97       	sbiw	r28, 0x29	; 41
    1dee:	a1 96       	adiw	r28, 0x21	; 33
    1df0:	0f ad       	ldd	r16, Y+63	; 0x3f
    1df2:	a1 97       	sbiw	r28, 0x21	; 33
    1df4:	0f 17       	cp	r16, r31
    1df6:	18 f0       	brcs	.+6      	; 0x1dfe <TIMER2_enuSetPWMDuty+0x944>
    1df8:	e5 96       	adiw	r28, 0x35	; 53
    1dfa:	1f ae       	std	Y+63, r1	; 0x3f
    1dfc:	e5 97       	sbiw	r28, 0x35	; 53
    1dfe:	a9 96       	adiw	r28, 0x29	; 41
    1e00:	1f ad       	ldd	r17, Y+63	; 0x3f
    1e02:	a9 97       	sbiw	r28, 0x29	; 41
    1e04:	e2 96       	adiw	r28, 0x32	; 50
    1e06:	2f ad       	ldd	r18, Y+63	; 0x3f
    1e08:	e2 97       	sbiw	r28, 0x32	; 50
    1e0a:	12 1b       	sub	r17, r18
    1e0c:	e6 96       	adiw	r28, 0x36	; 54
    1e0e:	1f af       	std	Y+63, r17	; 0x3f
    1e10:	e6 97       	sbiw	r28, 0x36	; 54
    1e12:	31 e0       	ldi	r19, 0x01	; 1
    1e14:	e7 96       	adiw	r28, 0x37	; 55
    1e16:	3f af       	std	Y+63, r19	; 0x3f
    1e18:	e7 97       	sbiw	r28, 0x37	; 55
    1e1a:	e6 96       	adiw	r28, 0x36	; 54
    1e1c:	4f ad       	ldd	r20, Y+63	; 0x3f
    1e1e:	e6 97       	sbiw	r28, 0x36	; 54
    1e20:	a9 96       	adiw	r28, 0x29	; 41
    1e22:	5f ad       	ldd	r21, Y+63	; 0x3f
    1e24:	a9 97       	sbiw	r28, 0x29	; 41
    1e26:	54 17       	cp	r21, r20
    1e28:	18 f0       	brcs	.+6      	; 0x1e30 <TIMER2_enuSetPWMDuty+0x976>
    1e2a:	e7 96       	adiw	r28, 0x37	; 55
    1e2c:	1f ae       	std	Y+63, r1	; 0x3f
    1e2e:	e7 97       	sbiw	r28, 0x37	; 55
    1e30:	e5 96       	adiw	r28, 0x35	; 53
    1e32:	6f ad       	ldd	r22, Y+63	; 0x3f
    1e34:	e5 97       	sbiw	r28, 0x35	; 53
    1e36:	e7 96       	adiw	r28, 0x37	; 55
    1e38:	7f ad       	ldd	r23, Y+63	; 0x3f
    1e3a:	e7 97       	sbiw	r28, 0x37	; 55
    1e3c:	67 2b       	or	r22, r23
    1e3e:	e5 96       	adiw	r28, 0x35	; 53
    1e40:	6f af       	std	Y+63, r22	; 0x3f
    1e42:	e5 97       	sbiw	r28, 0x35	; 53
    1e44:	e6 96       	adiw	r28, 0x36	; 54
    1e46:	8f ad       	ldd	r24, Y+63	; 0x3f
    1e48:	e6 97       	sbiw	r28, 0x36	; 54
    1e4a:	a9 96       	adiw	r28, 0x29	; 41
    1e4c:	8f af       	std	Y+63, r24	; 0x3f
    1e4e:	a9 97       	sbiw	r28, 0x29	; 41
    1e50:	a2 96       	adiw	r28, 0x22	; 34
    1e52:	9f ad       	ldd	r25, Y+63	; 0x3f
    1e54:	a2 97       	sbiw	r28, 0x22	; 34
    1e56:	ef 81       	ldd	r30, Y+7	; 0x07
    1e58:	9e 1b       	sub	r25, r30
    1e5a:	aa 96       	adiw	r28, 0x2a	; 42
    1e5c:	9f af       	std	Y+63, r25	; 0x3f
    1e5e:	aa 97       	sbiw	r28, 0x2a	; 42
    1e60:	f1 e0       	ldi	r31, 0x01	; 1
    1e62:	e8 96       	adiw	r28, 0x38	; 56
    1e64:	ff af       	std	Y+63, r31	; 0x3f
    1e66:	e8 97       	sbiw	r28, 0x38	; 56
    1e68:	aa 96       	adiw	r28, 0x2a	; 42
    1e6a:	0f ad       	ldd	r16, Y+63	; 0x3f
    1e6c:	aa 97       	sbiw	r28, 0x2a	; 42
    1e6e:	a2 96       	adiw	r28, 0x22	; 34
    1e70:	1f ad       	ldd	r17, Y+63	; 0x3f
    1e72:	a2 97       	sbiw	r28, 0x22	; 34
    1e74:	10 17       	cp	r17, r16
    1e76:	18 f0       	brcs	.+6      	; 0x1e7e <TIMER2_enuSetPWMDuty+0x9c4>
    1e78:	e8 96       	adiw	r28, 0x38	; 56
    1e7a:	1f ae       	std	Y+63, r1	; 0x3f
    1e7c:	e8 97       	sbiw	r28, 0x38	; 56
    1e7e:	aa 96       	adiw	r28, 0x2a	; 42
    1e80:	2f ad       	ldd	r18, Y+63	; 0x3f
    1e82:	aa 97       	sbiw	r28, 0x2a	; 42
    1e84:	e5 96       	adiw	r28, 0x35	; 53
    1e86:	3f ad       	ldd	r19, Y+63	; 0x3f
    1e88:	e5 97       	sbiw	r28, 0x35	; 53
    1e8a:	23 1b       	sub	r18, r19
    1e8c:	e9 96       	adiw	r28, 0x39	; 57
    1e8e:	2f af       	std	Y+63, r18	; 0x3f
    1e90:	e9 97       	sbiw	r28, 0x39	; 57
    1e92:	41 e0       	ldi	r20, 0x01	; 1
    1e94:	ea 96       	adiw	r28, 0x3a	; 58
    1e96:	4f af       	std	Y+63, r20	; 0x3f
    1e98:	ea 97       	sbiw	r28, 0x3a	; 58
    1e9a:	e9 96       	adiw	r28, 0x39	; 57
    1e9c:	5f ad       	ldd	r21, Y+63	; 0x3f
    1e9e:	e9 97       	sbiw	r28, 0x39	; 57
    1ea0:	aa 96       	adiw	r28, 0x2a	; 42
    1ea2:	6f ad       	ldd	r22, Y+63	; 0x3f
    1ea4:	aa 97       	sbiw	r28, 0x2a	; 42
    1ea6:	65 17       	cp	r22, r21
    1ea8:	18 f0       	brcs	.+6      	; 0x1eb0 <TIMER2_enuSetPWMDuty+0x9f6>
    1eaa:	ea 96       	adiw	r28, 0x3a	; 58
    1eac:	1f ae       	std	Y+63, r1	; 0x3f
    1eae:	ea 97       	sbiw	r28, 0x3a	; 58
    1eb0:	e8 96       	adiw	r28, 0x38	; 56
    1eb2:	7f ad       	ldd	r23, Y+63	; 0x3f
    1eb4:	e8 97       	sbiw	r28, 0x38	; 56
    1eb6:	ea 96       	adiw	r28, 0x3a	; 58
    1eb8:	8f ad       	ldd	r24, Y+63	; 0x3f
    1eba:	ea 97       	sbiw	r28, 0x3a	; 58
    1ebc:	78 2b       	or	r23, r24
    1ebe:	e8 96       	adiw	r28, 0x38	; 56
    1ec0:	7f af       	std	Y+63, r23	; 0x3f
    1ec2:	e8 97       	sbiw	r28, 0x38	; 56
    1ec4:	e9 96       	adiw	r28, 0x39	; 57
    1ec6:	9f ad       	ldd	r25, Y+63	; 0x3f
    1ec8:	e9 97       	sbiw	r28, 0x39	; 57
    1eca:	aa 96       	adiw	r28, 0x2a	; 42
    1ecc:	9f af       	std	Y+63, r25	; 0x3f
    1ece:	aa 97       	sbiw	r28, 0x2a	; 42
    1ed0:	a3 96       	adiw	r28, 0x23	; 35
    1ed2:	ef ad       	ldd	r30, Y+63	; 0x3f
    1ed4:	a3 97       	sbiw	r28, 0x23	; 35
    1ed6:	f8 85       	ldd	r31, Y+8	; 0x08
    1ed8:	ef 1b       	sub	r30, r31
    1eda:	ab 96       	adiw	r28, 0x2b	; 43
    1edc:	ef af       	std	Y+63, r30	; 0x3f
    1ede:	ab 97       	sbiw	r28, 0x2b	; 43
    1ee0:	01 e0       	ldi	r16, 0x01	; 1
    1ee2:	eb 96       	adiw	r28, 0x3b	; 59
    1ee4:	0f af       	std	Y+63, r16	; 0x3f
    1ee6:	eb 97       	sbiw	r28, 0x3b	; 59
    1ee8:	ab 96       	adiw	r28, 0x2b	; 43
    1eea:	1f ad       	ldd	r17, Y+63	; 0x3f
    1eec:	ab 97       	sbiw	r28, 0x2b	; 43
    1eee:	a3 96       	adiw	r28, 0x23	; 35
    1ef0:	2f ad       	ldd	r18, Y+63	; 0x3f
    1ef2:	a3 97       	sbiw	r28, 0x23	; 35
    1ef4:	21 17       	cp	r18, r17
    1ef6:	18 f0       	brcs	.+6      	; 0x1efe <TIMER2_enuSetPWMDuty+0xa44>
    1ef8:	eb 96       	adiw	r28, 0x3b	; 59
    1efa:	1f ae       	std	Y+63, r1	; 0x3f
    1efc:	eb 97       	sbiw	r28, 0x3b	; 59
    1efe:	ab 96       	adiw	r28, 0x2b	; 43
    1f00:	3f ad       	ldd	r19, Y+63	; 0x3f
    1f02:	ab 97       	sbiw	r28, 0x2b	; 43
    1f04:	e8 96       	adiw	r28, 0x38	; 56
    1f06:	4f ad       	ldd	r20, Y+63	; 0x3f
    1f08:	e8 97       	sbiw	r28, 0x38	; 56
    1f0a:	34 1b       	sub	r19, r20
    1f0c:	ec 96       	adiw	r28, 0x3c	; 60
    1f0e:	3f af       	std	Y+63, r19	; 0x3f
    1f10:	ec 97       	sbiw	r28, 0x3c	; 60
    1f12:	51 e0       	ldi	r21, 0x01	; 1
    1f14:	ed 96       	adiw	r28, 0x3d	; 61
    1f16:	5f af       	std	Y+63, r21	; 0x3f
    1f18:	ed 97       	sbiw	r28, 0x3d	; 61
    1f1a:	ec 96       	adiw	r28, 0x3c	; 60
    1f1c:	6f ad       	ldd	r22, Y+63	; 0x3f
    1f1e:	ec 97       	sbiw	r28, 0x3c	; 60
    1f20:	ab 96       	adiw	r28, 0x2b	; 43
    1f22:	7f ad       	ldd	r23, Y+63	; 0x3f
    1f24:	ab 97       	sbiw	r28, 0x2b	; 43
    1f26:	76 17       	cp	r23, r22
    1f28:	18 f0       	brcs	.+6      	; 0x1f30 <TIMER2_enuSetPWMDuty+0xa76>
    1f2a:	ed 96       	adiw	r28, 0x3d	; 61
    1f2c:	1f ae       	std	Y+63, r1	; 0x3f
    1f2e:	ed 97       	sbiw	r28, 0x3d	; 61
    1f30:	eb 96       	adiw	r28, 0x3b	; 59
    1f32:	8f ad       	ldd	r24, Y+63	; 0x3f
    1f34:	eb 97       	sbiw	r28, 0x3b	; 59
    1f36:	ed 96       	adiw	r28, 0x3d	; 61
    1f38:	9f ad       	ldd	r25, Y+63	; 0x3f
    1f3a:	ed 97       	sbiw	r28, 0x3d	; 61
    1f3c:	89 2b       	or	r24, r25
    1f3e:	eb 96       	adiw	r28, 0x3b	; 59
    1f40:	8f af       	std	Y+63, r24	; 0x3f
    1f42:	eb 97       	sbiw	r28, 0x3b	; 59
    1f44:	ec 96       	adiw	r28, 0x3c	; 60
    1f46:	ef ad       	ldd	r30, Y+63	; 0x3f
    1f48:	ec 97       	sbiw	r28, 0x3c	; 60
    1f4a:	ab 96       	adiw	r28, 0x2b	; 43
    1f4c:	ef af       	std	Y+63, r30	; 0x3f
    1f4e:	ab 97       	sbiw	r28, 0x2b	; 43
    1f50:	a4 96       	adiw	r28, 0x24	; 36
    1f52:	ff ad       	ldd	r31, Y+63	; 0x3f
    1f54:	a4 97       	sbiw	r28, 0x24	; 36
    1f56:	09 85       	ldd	r16, Y+9	; 0x09
    1f58:	f0 1b       	sub	r31, r16
    1f5a:	ac 96       	adiw	r28, 0x2c	; 44
    1f5c:	ff af       	std	Y+63, r31	; 0x3f
    1f5e:	ac 97       	sbiw	r28, 0x2c	; 44
    1f60:	11 e0       	ldi	r17, 0x01	; 1
    1f62:	ee 96       	adiw	r28, 0x3e	; 62
    1f64:	1f af       	std	Y+63, r17	; 0x3f
    1f66:	ee 97       	sbiw	r28, 0x3e	; 62
    1f68:	ac 96       	adiw	r28, 0x2c	; 44
    1f6a:	2f ad       	ldd	r18, Y+63	; 0x3f
    1f6c:	ac 97       	sbiw	r28, 0x2c	; 44
    1f6e:	a4 96       	adiw	r28, 0x24	; 36
    1f70:	3f ad       	ldd	r19, Y+63	; 0x3f
    1f72:	a4 97       	sbiw	r28, 0x24	; 36
    1f74:	32 17       	cp	r19, r18
    1f76:	18 f0       	brcs	.+6      	; 0x1f7e <TIMER2_enuSetPWMDuty+0xac4>
    1f78:	ee 96       	adiw	r28, 0x3e	; 62
    1f7a:	1f ae       	std	Y+63, r1	; 0x3f
    1f7c:	ee 97       	sbiw	r28, 0x3e	; 62
    1f7e:	ac 96       	adiw	r28, 0x2c	; 44
    1f80:	4f ad       	ldd	r20, Y+63	; 0x3f
    1f82:	ac 97       	sbiw	r28, 0x2c	; 44
    1f84:	eb 96       	adiw	r28, 0x3b	; 59
    1f86:	5f ad       	ldd	r21, Y+63	; 0x3f
    1f88:	eb 97       	sbiw	r28, 0x3b	; 59
    1f8a:	45 1b       	sub	r20, r21
    1f8c:	ef 96       	adiw	r28, 0x3f	; 63
    1f8e:	4f af       	std	Y+63, r20	; 0x3f
    1f90:	ef 97       	sbiw	r28, 0x3f	; 63
    1f92:	61 e0       	ldi	r22, 0x01	; 1
    1f94:	c1 58       	subi	r28, 0x81	; 129
    1f96:	df 4f       	sbci	r29, 0xFF	; 255
    1f98:	68 83       	st	Y, r22
    1f9a:	cf 57       	subi	r28, 0x7F	; 127
    1f9c:	d0 40       	sbci	r29, 0x00	; 0
    1f9e:	ef 96       	adiw	r28, 0x3f	; 63
    1fa0:	7f ad       	ldd	r23, Y+63	; 0x3f
    1fa2:	ef 97       	sbiw	r28, 0x3f	; 63
    1fa4:	ac 96       	adiw	r28, 0x2c	; 44
    1fa6:	8f ad       	ldd	r24, Y+63	; 0x3f
    1fa8:	ac 97       	sbiw	r28, 0x2c	; 44
    1faa:	87 17       	cp	r24, r23
    1fac:	28 f0       	brcs	.+10     	; 0x1fb8 <TIMER2_enuSetPWMDuty+0xafe>
    1fae:	c1 58       	subi	r28, 0x81	; 129
    1fb0:	df 4f       	sbci	r29, 0xFF	; 255
    1fb2:	18 82       	st	Y, r1
    1fb4:	cf 57       	subi	r28, 0x7F	; 127
    1fb6:	d0 40       	sbci	r29, 0x00	; 0
    1fb8:	ee 96       	adiw	r28, 0x3e	; 62
    1fba:	9f ad       	ldd	r25, Y+63	; 0x3f
    1fbc:	ee 97       	sbiw	r28, 0x3e	; 62
    1fbe:	c1 58       	subi	r28, 0x81	; 129
    1fc0:	df 4f       	sbci	r29, 0xFF	; 255
    1fc2:	e8 81       	ld	r30, Y
    1fc4:	cf 57       	subi	r28, 0x7F	; 127
    1fc6:	d0 40       	sbci	r29, 0x00	; 0
    1fc8:	9e 2b       	or	r25, r30
    1fca:	ee 96       	adiw	r28, 0x3e	; 62
    1fcc:	9f af       	std	Y+63, r25	; 0x3f
    1fce:	ee 97       	sbiw	r28, 0x3e	; 62
    1fd0:	ef 96       	adiw	r28, 0x3f	; 63
    1fd2:	ff ad       	ldd	r31, Y+63	; 0x3f
    1fd4:	ef 97       	sbiw	r28, 0x3f	; 63
    1fd6:	ac 96       	adiw	r28, 0x2c	; 44
    1fd8:	ff af       	std	Y+63, r31	; 0x3f
    1fda:	ac 97       	sbiw	r28, 0x2c	; 44
    1fdc:	a5 96       	adiw	r28, 0x25	; 37
    1fde:	0f ad       	ldd	r16, Y+63	; 0x3f
    1fe0:	a5 97       	sbiw	r28, 0x25	; 37
    1fe2:	1a 85       	ldd	r17, Y+10	; 0x0a
    1fe4:	01 1b       	sub	r16, r17
    1fe6:	ad 96       	adiw	r28, 0x2d	; 45
    1fe8:	0f af       	std	Y+63, r16	; 0x3f
    1fea:	ad 97       	sbiw	r28, 0x2d	; 45
    1fec:	ad 96       	adiw	r28, 0x2d	; 45
    1fee:	8f ad       	ldd	r24, Y+63	; 0x3f
    1ff0:	ad 97       	sbiw	r28, 0x2d	; 45
    1ff2:	ee 96       	adiw	r28, 0x3e	; 62
    1ff4:	2f ad       	ldd	r18, Y+63	; 0x3f
    1ff6:	ee 97       	sbiw	r28, 0x3e	; 62
    1ff8:	82 1b       	sub	r24, r18
    1ffa:	ad 96       	adiw	r28, 0x2d	; 45
    1ffc:	8f af       	std	Y+63, r24	; 0x3f
    1ffe:	ad 97       	sbiw	r28, 0x2d	; 45
    2000:	a6 96       	adiw	r28, 0x26	; 38
    2002:	3f ad       	ldd	r19, Y+63	; 0x3f
    2004:	a6 97       	sbiw	r28, 0x26	; 38
    2006:	6e 96       	adiw	r28, 0x1e	; 30
    2008:	3f af       	std	Y+63, r19	; 0x3f
    200a:	6e 97       	sbiw	r28, 0x1e	; 30
    200c:	a7 96       	adiw	r28, 0x27	; 39
    200e:	4f ad       	ldd	r20, Y+63	; 0x3f
    2010:	a7 97       	sbiw	r28, 0x27	; 39
    2012:	6f 96       	adiw	r28, 0x1f	; 31
    2014:	4f af       	std	Y+63, r20	; 0x3f
    2016:	6f 97       	sbiw	r28, 0x1f	; 31
    2018:	a8 96       	adiw	r28, 0x28	; 40
    201a:	5f ad       	ldd	r21, Y+63	; 0x3f
    201c:	a8 97       	sbiw	r28, 0x28	; 40
    201e:	a0 96       	adiw	r28, 0x20	; 32
    2020:	5f af       	std	Y+63, r21	; 0x3f
    2022:	a0 97       	sbiw	r28, 0x20	; 32
    2024:	a9 96       	adiw	r28, 0x29	; 41
    2026:	6f ad       	ldd	r22, Y+63	; 0x3f
    2028:	a9 97       	sbiw	r28, 0x29	; 41
    202a:	a1 96       	adiw	r28, 0x21	; 33
    202c:	6f af       	std	Y+63, r22	; 0x3f
    202e:	a1 97       	sbiw	r28, 0x21	; 33
    2030:	aa 96       	adiw	r28, 0x2a	; 42
    2032:	7f ad       	ldd	r23, Y+63	; 0x3f
    2034:	aa 97       	sbiw	r28, 0x2a	; 42
    2036:	a2 96       	adiw	r28, 0x22	; 34
    2038:	7f af       	std	Y+63, r23	; 0x3f
    203a:	a2 97       	sbiw	r28, 0x22	; 34
    203c:	ab 96       	adiw	r28, 0x2b	; 43
    203e:	8f ad       	ldd	r24, Y+63	; 0x3f
    2040:	ab 97       	sbiw	r28, 0x2b	; 43
    2042:	a3 96       	adiw	r28, 0x23	; 35
    2044:	8f af       	std	Y+63, r24	; 0x3f
    2046:	a3 97       	sbiw	r28, 0x23	; 35
    2048:	ac 96       	adiw	r28, 0x2c	; 44
    204a:	9f ad       	ldd	r25, Y+63	; 0x3f
    204c:	ac 97       	sbiw	r28, 0x2c	; 44
    204e:	a4 96       	adiw	r28, 0x24	; 36
    2050:	9f af       	std	Y+63, r25	; 0x3f
    2052:	a4 97       	sbiw	r28, 0x24	; 36
    2054:	ad 96       	adiw	r28, 0x2d	; 45
    2056:	ef ad       	ldd	r30, Y+63	; 0x3f
    2058:	ad 97       	sbiw	r28, 0x2d	; 45
    205a:	a5 96       	adiw	r28, 0x25	; 37
    205c:	ef af       	std	Y+63, r30	; 0x3f
    205e:	a5 97       	sbiw	r28, 0x25	; 37
    2060:	6e 96       	adiw	r28, 0x1e	; 30
    2062:	2f ad       	ldd	r18, Y+63	; 0x3f
    2064:	6e 97       	sbiw	r28, 0x1e	; 30
    2066:	6f 96       	adiw	r28, 0x1f	; 31
    2068:	3f ad       	ldd	r19, Y+63	; 0x3f
    206a:	6f 97       	sbiw	r28, 0x1f	; 31
    206c:	a0 96       	adiw	r28, 0x20	; 32
    206e:	4f ad       	ldd	r20, Y+63	; 0x3f
    2070:	a0 97       	sbiw	r28, 0x20	; 32
    2072:	a1 96       	adiw	r28, 0x21	; 33
    2074:	5f ad       	ldd	r21, Y+63	; 0x3f
    2076:	a1 97       	sbiw	r28, 0x21	; 33
    2078:	a2 96       	adiw	r28, 0x22	; 34
    207a:	6f ad       	ldd	r22, Y+63	; 0x3f
    207c:	a2 97       	sbiw	r28, 0x22	; 34
    207e:	a3 96       	adiw	r28, 0x23	; 35
    2080:	7f ad       	ldd	r23, Y+63	; 0x3f
    2082:	a3 97       	sbiw	r28, 0x23	; 35
    2084:	a4 96       	adiw	r28, 0x24	; 36
    2086:	8f ad       	ldd	r24, Y+63	; 0x3f
    2088:	a4 97       	sbiw	r28, 0x24	; 36
    208a:	a5 96       	adiw	r28, 0x25	; 37
    208c:	9f ad       	ldd	r25, Y+63	; 0x3f
    208e:	a5 97       	sbiw	r28, 0x25	; 37
    2090:	04 e0       	ldi	r16, 0x04	; 4
    2092:	0e 94 44 01 	call	0x288	; 0x288 <__ashldi3>
    2096:	c0 58       	subi	r28, 0x80	; 128
    2098:	df 4f       	sbci	r29, 0xFF	; 255
    209a:	28 83       	st	Y, r18
    209c:	c0 58       	subi	r28, 0x80	; 128
    209e:	d0 40       	sbci	r29, 0x00	; 0
    20a0:	cf 57       	subi	r28, 0x7F	; 127
    20a2:	df 4f       	sbci	r29, 0xFF	; 255
    20a4:	38 83       	st	Y, r19
    20a6:	c1 58       	subi	r28, 0x81	; 129
    20a8:	d0 40       	sbci	r29, 0x00	; 0
    20aa:	ce 57       	subi	r28, 0x7E	; 126
    20ac:	df 4f       	sbci	r29, 0xFF	; 255
    20ae:	48 83       	st	Y, r20
    20b0:	c2 58       	subi	r28, 0x82	; 130
    20b2:	d0 40       	sbci	r29, 0x00	; 0
    20b4:	cd 57       	subi	r28, 0x7D	; 125
    20b6:	df 4f       	sbci	r29, 0xFF	; 255
    20b8:	58 83       	st	Y, r21
    20ba:	c3 58       	subi	r28, 0x83	; 131
    20bc:	d0 40       	sbci	r29, 0x00	; 0
    20be:	cc 57       	subi	r28, 0x7C	; 124
    20c0:	df 4f       	sbci	r29, 0xFF	; 255
    20c2:	68 83       	st	Y, r22
    20c4:	c4 58       	subi	r28, 0x84	; 132
    20c6:	d0 40       	sbci	r29, 0x00	; 0
    20c8:	cb 57       	subi	r28, 0x7B	; 123
    20ca:	df 4f       	sbci	r29, 0xFF	; 255
    20cc:	78 83       	st	Y, r23
    20ce:	c5 58       	subi	r28, 0x85	; 133
    20d0:	d0 40       	sbci	r29, 0x00	; 0
    20d2:	ca 57       	subi	r28, 0x7A	; 122
    20d4:	df 4f       	sbci	r29, 0xFF	; 255
    20d6:	88 83       	st	Y, r24
    20d8:	c6 58       	subi	r28, 0x86	; 134
    20da:	d0 40       	sbci	r29, 0x00	; 0
    20dc:	c9 57       	subi	r28, 0x79	; 121
    20de:	df 4f       	sbci	r29, 0xFF	; 255
    20e0:	98 83       	st	Y, r25
    20e2:	c7 58       	subi	r28, 0x87	; 135
    20e4:	d0 40       	sbci	r29, 0x00	; 0
    20e6:	6e 96       	adiw	r28, 0x1e	; 30
    20e8:	ff ad       	ldd	r31, Y+63	; 0x3f
    20ea:	6e 97       	sbiw	r28, 0x1e	; 30
    20ec:	c0 58       	subi	r28, 0x80	; 128
    20ee:	df 4f       	sbci	r29, 0xFF	; 255
    20f0:	08 81       	ld	r16, Y
    20f2:	c0 58       	subi	r28, 0x80	; 128
    20f4:	d0 40       	sbci	r29, 0x00	; 0
    20f6:	f0 0f       	add	r31, r16
    20f8:	c8 57       	subi	r28, 0x78	; 120
    20fa:	df 4f       	sbci	r29, 0xFF	; 255
    20fc:	f8 83       	st	Y, r31
    20fe:	c8 58       	subi	r28, 0x88	; 136
    2100:	d0 40       	sbci	r29, 0x00	; 0
    2102:	11 e0       	ldi	r17, 0x01	; 1
    2104:	c0 57       	subi	r28, 0x70	; 112
    2106:	df 4f       	sbci	r29, 0xFF	; 255
    2108:	18 83       	st	Y, r17
    210a:	c0 59       	subi	r28, 0x90	; 144
    210c:	d0 40       	sbci	r29, 0x00	; 0
    210e:	c8 57       	subi	r28, 0x78	; 120
    2110:	df 4f       	sbci	r29, 0xFF	; 255
    2112:	28 81       	ld	r18, Y
    2114:	c8 58       	subi	r28, 0x88	; 136
    2116:	d0 40       	sbci	r29, 0x00	; 0
    2118:	6e 96       	adiw	r28, 0x1e	; 30
    211a:	3f ad       	ldd	r19, Y+63	; 0x3f
    211c:	6e 97       	sbiw	r28, 0x1e	; 30
    211e:	23 17       	cp	r18, r19
    2120:	28 f0       	brcs	.+10     	; 0x212c <TIMER2_enuSetPWMDuty+0xc72>
    2122:	c0 57       	subi	r28, 0x70	; 112
    2124:	df 4f       	sbci	r29, 0xFF	; 255
    2126:	18 82       	st	Y, r1
    2128:	c0 59       	subi	r28, 0x90	; 144
    212a:	d0 40       	sbci	r29, 0x00	; 0
    212c:	6f 96       	adiw	r28, 0x1f	; 31
    212e:	4f ad       	ldd	r20, Y+63	; 0x3f
    2130:	6f 97       	sbiw	r28, 0x1f	; 31
    2132:	cf 57       	subi	r28, 0x7F	; 127
    2134:	df 4f       	sbci	r29, 0xFF	; 255
    2136:	58 81       	ld	r21, Y
    2138:	c1 58       	subi	r28, 0x81	; 129
    213a:	d0 40       	sbci	r29, 0x00	; 0
    213c:	45 0f       	add	r20, r21
    213e:	c7 57       	subi	r28, 0x77	; 119
    2140:	df 4f       	sbci	r29, 0xFF	; 255
    2142:	48 83       	st	Y, r20
    2144:	c9 58       	subi	r28, 0x89	; 137
    2146:	d0 40       	sbci	r29, 0x00	; 0
    2148:	61 e0       	ldi	r22, 0x01	; 1
    214a:	cf 56       	subi	r28, 0x6F	; 111
    214c:	df 4f       	sbci	r29, 0xFF	; 255
    214e:	68 83       	st	Y, r22
    2150:	c1 59       	subi	r28, 0x91	; 145
    2152:	d0 40       	sbci	r29, 0x00	; 0
    2154:	c7 57       	subi	r28, 0x77	; 119
    2156:	df 4f       	sbci	r29, 0xFF	; 255
    2158:	78 81       	ld	r23, Y
    215a:	c9 58       	subi	r28, 0x89	; 137
    215c:	d0 40       	sbci	r29, 0x00	; 0
    215e:	6f 96       	adiw	r28, 0x1f	; 31
    2160:	8f ad       	ldd	r24, Y+63	; 0x3f
    2162:	6f 97       	sbiw	r28, 0x1f	; 31
    2164:	78 17       	cp	r23, r24
    2166:	28 f0       	brcs	.+10     	; 0x2172 <TIMER2_enuSetPWMDuty+0xcb8>
    2168:	cf 56       	subi	r28, 0x6F	; 111
    216a:	df 4f       	sbci	r29, 0xFF	; 255
    216c:	18 82       	st	Y, r1
    216e:	c1 59       	subi	r28, 0x91	; 145
    2170:	d0 40       	sbci	r29, 0x00	; 0
    2172:	c0 57       	subi	r28, 0x70	; 112
    2174:	df 4f       	sbci	r29, 0xFF	; 255
    2176:	98 81       	ld	r25, Y
    2178:	c0 59       	subi	r28, 0x90	; 144
    217a:	d0 40       	sbci	r29, 0x00	; 0
    217c:	c7 57       	subi	r28, 0x77	; 119
    217e:	df 4f       	sbci	r29, 0xFF	; 255
    2180:	e8 81       	ld	r30, Y
    2182:	c9 58       	subi	r28, 0x89	; 137
    2184:	d0 40       	sbci	r29, 0x00	; 0
    2186:	9e 0f       	add	r25, r30
    2188:	ce 56       	subi	r28, 0x6E	; 110
    218a:	df 4f       	sbci	r29, 0xFF	; 255
    218c:	98 83       	st	Y, r25
    218e:	c2 59       	subi	r28, 0x92	; 146
    2190:	d0 40       	sbci	r29, 0x00	; 0
    2192:	f1 e0       	ldi	r31, 0x01	; 1
    2194:	cd 56       	subi	r28, 0x6D	; 109
    2196:	df 4f       	sbci	r29, 0xFF	; 255
    2198:	f8 83       	st	Y, r31
    219a:	c3 59       	subi	r28, 0x93	; 147
    219c:	d0 40       	sbci	r29, 0x00	; 0
    219e:	ce 56       	subi	r28, 0x6E	; 110
    21a0:	df 4f       	sbci	r29, 0xFF	; 255
    21a2:	08 81       	ld	r16, Y
    21a4:	c2 59       	subi	r28, 0x92	; 146
    21a6:	d0 40       	sbci	r29, 0x00	; 0
    21a8:	c7 57       	subi	r28, 0x77	; 119
    21aa:	df 4f       	sbci	r29, 0xFF	; 255
    21ac:	18 81       	ld	r17, Y
    21ae:	c9 58       	subi	r28, 0x89	; 137
    21b0:	d0 40       	sbci	r29, 0x00	; 0
    21b2:	01 17       	cp	r16, r17
    21b4:	28 f0       	brcs	.+10     	; 0x21c0 <TIMER2_enuSetPWMDuty+0xd06>
    21b6:	cd 56       	subi	r28, 0x6D	; 109
    21b8:	df 4f       	sbci	r29, 0xFF	; 255
    21ba:	18 82       	st	Y, r1
    21bc:	c3 59       	subi	r28, 0x93	; 147
    21be:	d0 40       	sbci	r29, 0x00	; 0
    21c0:	cf 56       	subi	r28, 0x6F	; 111
    21c2:	df 4f       	sbci	r29, 0xFF	; 255
    21c4:	28 81       	ld	r18, Y
    21c6:	c1 59       	subi	r28, 0x91	; 145
    21c8:	d0 40       	sbci	r29, 0x00	; 0
    21ca:	cd 56       	subi	r28, 0x6D	; 109
    21cc:	df 4f       	sbci	r29, 0xFF	; 255
    21ce:	38 81       	ld	r19, Y
    21d0:	c3 59       	subi	r28, 0x93	; 147
    21d2:	d0 40       	sbci	r29, 0x00	; 0
    21d4:	23 2b       	or	r18, r19
    21d6:	cf 56       	subi	r28, 0x6F	; 111
    21d8:	df 4f       	sbci	r29, 0xFF	; 255
    21da:	28 83       	st	Y, r18
    21dc:	c1 59       	subi	r28, 0x91	; 145
    21de:	d0 40       	sbci	r29, 0x00	; 0
    21e0:	ce 56       	subi	r28, 0x6E	; 110
    21e2:	df 4f       	sbci	r29, 0xFF	; 255
    21e4:	48 81       	ld	r20, Y
    21e6:	c2 59       	subi	r28, 0x92	; 146
    21e8:	d0 40       	sbci	r29, 0x00	; 0
    21ea:	c7 57       	subi	r28, 0x77	; 119
    21ec:	df 4f       	sbci	r29, 0xFF	; 255
    21ee:	48 83       	st	Y, r20
    21f0:	c9 58       	subi	r28, 0x89	; 137
    21f2:	d0 40       	sbci	r29, 0x00	; 0
    21f4:	a0 96       	adiw	r28, 0x20	; 32
    21f6:	5f ad       	ldd	r21, Y+63	; 0x3f
    21f8:	a0 97       	sbiw	r28, 0x20	; 32
    21fa:	ce 57       	subi	r28, 0x7E	; 126
    21fc:	df 4f       	sbci	r29, 0xFF	; 255
    21fe:	68 81       	ld	r22, Y
    2200:	c2 58       	subi	r28, 0x82	; 130
    2202:	d0 40       	sbci	r29, 0x00	; 0
    2204:	56 0f       	add	r21, r22
    2206:	c6 57       	subi	r28, 0x76	; 118
    2208:	df 4f       	sbci	r29, 0xFF	; 255
    220a:	58 83       	st	Y, r21
    220c:	ca 58       	subi	r28, 0x8A	; 138
    220e:	d0 40       	sbci	r29, 0x00	; 0
    2210:	71 e0       	ldi	r23, 0x01	; 1
    2212:	cc 56       	subi	r28, 0x6C	; 108
    2214:	df 4f       	sbci	r29, 0xFF	; 255
    2216:	78 83       	st	Y, r23
    2218:	c4 59       	subi	r28, 0x94	; 148
    221a:	d0 40       	sbci	r29, 0x00	; 0
    221c:	c6 57       	subi	r28, 0x76	; 118
    221e:	df 4f       	sbci	r29, 0xFF	; 255
    2220:	88 81       	ld	r24, Y
    2222:	ca 58       	subi	r28, 0x8A	; 138
    2224:	d0 40       	sbci	r29, 0x00	; 0
    2226:	a0 96       	adiw	r28, 0x20	; 32
    2228:	9f ad       	ldd	r25, Y+63	; 0x3f
    222a:	a0 97       	sbiw	r28, 0x20	; 32
    222c:	89 17       	cp	r24, r25
    222e:	28 f0       	brcs	.+10     	; 0x223a <TIMER2_enuSetPWMDuty+0xd80>
    2230:	cc 56       	subi	r28, 0x6C	; 108
    2232:	df 4f       	sbci	r29, 0xFF	; 255
    2234:	18 82       	st	Y, r1
    2236:	c4 59       	subi	r28, 0x94	; 148
    2238:	d0 40       	sbci	r29, 0x00	; 0
    223a:	cf 56       	subi	r28, 0x6F	; 111
    223c:	df 4f       	sbci	r29, 0xFF	; 255
    223e:	e8 81       	ld	r30, Y
    2240:	c1 59       	subi	r28, 0x91	; 145
    2242:	d0 40       	sbci	r29, 0x00	; 0
    2244:	c6 57       	subi	r28, 0x76	; 118
    2246:	df 4f       	sbci	r29, 0xFF	; 255
    2248:	f8 81       	ld	r31, Y
    224a:	ca 58       	subi	r28, 0x8A	; 138
    224c:	d0 40       	sbci	r29, 0x00	; 0
    224e:	ef 0f       	add	r30, r31
    2250:	cb 56       	subi	r28, 0x6B	; 107
    2252:	df 4f       	sbci	r29, 0xFF	; 255
    2254:	e8 83       	st	Y, r30
    2256:	c5 59       	subi	r28, 0x95	; 149
    2258:	d0 40       	sbci	r29, 0x00	; 0
    225a:	01 e0       	ldi	r16, 0x01	; 1
    225c:	ca 56       	subi	r28, 0x6A	; 106
    225e:	df 4f       	sbci	r29, 0xFF	; 255
    2260:	08 83       	st	Y, r16
    2262:	c6 59       	subi	r28, 0x96	; 150
    2264:	d0 40       	sbci	r29, 0x00	; 0
    2266:	cb 56       	subi	r28, 0x6B	; 107
    2268:	df 4f       	sbci	r29, 0xFF	; 255
    226a:	18 81       	ld	r17, Y
    226c:	c5 59       	subi	r28, 0x95	; 149
    226e:	d0 40       	sbci	r29, 0x00	; 0
    2270:	c6 57       	subi	r28, 0x76	; 118
    2272:	df 4f       	sbci	r29, 0xFF	; 255
    2274:	28 81       	ld	r18, Y
    2276:	ca 58       	subi	r28, 0x8A	; 138
    2278:	d0 40       	sbci	r29, 0x00	; 0
    227a:	12 17       	cp	r17, r18
    227c:	28 f0       	brcs	.+10     	; 0x2288 <TIMER2_enuSetPWMDuty+0xdce>
    227e:	ca 56       	subi	r28, 0x6A	; 106
    2280:	df 4f       	sbci	r29, 0xFF	; 255
    2282:	18 82       	st	Y, r1
    2284:	c6 59       	subi	r28, 0x96	; 150
    2286:	d0 40       	sbci	r29, 0x00	; 0
    2288:	cc 56       	subi	r28, 0x6C	; 108
    228a:	df 4f       	sbci	r29, 0xFF	; 255
    228c:	38 81       	ld	r19, Y
    228e:	c4 59       	subi	r28, 0x94	; 148
    2290:	d0 40       	sbci	r29, 0x00	; 0
    2292:	ca 56       	subi	r28, 0x6A	; 106
    2294:	df 4f       	sbci	r29, 0xFF	; 255
    2296:	48 81       	ld	r20, Y
    2298:	c6 59       	subi	r28, 0x96	; 150
    229a:	d0 40       	sbci	r29, 0x00	; 0
    229c:	34 2b       	or	r19, r20
    229e:	cc 56       	subi	r28, 0x6C	; 108
    22a0:	df 4f       	sbci	r29, 0xFF	; 255
    22a2:	38 83       	st	Y, r19
    22a4:	c4 59       	subi	r28, 0x94	; 148
    22a6:	d0 40       	sbci	r29, 0x00	; 0
    22a8:	cb 56       	subi	r28, 0x6B	; 107
    22aa:	df 4f       	sbci	r29, 0xFF	; 255
    22ac:	58 81       	ld	r21, Y
    22ae:	c5 59       	subi	r28, 0x95	; 149
    22b0:	d0 40       	sbci	r29, 0x00	; 0
    22b2:	c6 57       	subi	r28, 0x76	; 118
    22b4:	df 4f       	sbci	r29, 0xFF	; 255
    22b6:	58 83       	st	Y, r21
    22b8:	ca 58       	subi	r28, 0x8A	; 138
    22ba:	d0 40       	sbci	r29, 0x00	; 0
    22bc:	a1 96       	adiw	r28, 0x21	; 33
    22be:	6f ad       	ldd	r22, Y+63	; 0x3f
    22c0:	a1 97       	sbiw	r28, 0x21	; 33
    22c2:	cd 57       	subi	r28, 0x7D	; 125
    22c4:	df 4f       	sbci	r29, 0xFF	; 255
    22c6:	78 81       	ld	r23, Y
    22c8:	c3 58       	subi	r28, 0x83	; 131
    22ca:	d0 40       	sbci	r29, 0x00	; 0
    22cc:	67 0f       	add	r22, r23
    22ce:	c5 57       	subi	r28, 0x75	; 117
    22d0:	df 4f       	sbci	r29, 0xFF	; 255
    22d2:	68 83       	st	Y, r22
    22d4:	cb 58       	subi	r28, 0x8B	; 139
    22d6:	d0 40       	sbci	r29, 0x00	; 0
    22d8:	81 e0       	ldi	r24, 0x01	; 1
    22da:	c9 56       	subi	r28, 0x69	; 105
    22dc:	df 4f       	sbci	r29, 0xFF	; 255
    22de:	88 83       	st	Y, r24
    22e0:	c7 59       	subi	r28, 0x97	; 151
    22e2:	d0 40       	sbci	r29, 0x00	; 0
    22e4:	c5 57       	subi	r28, 0x75	; 117
    22e6:	df 4f       	sbci	r29, 0xFF	; 255
    22e8:	98 81       	ld	r25, Y
    22ea:	cb 58       	subi	r28, 0x8B	; 139
    22ec:	d0 40       	sbci	r29, 0x00	; 0
    22ee:	a1 96       	adiw	r28, 0x21	; 33
    22f0:	ef ad       	ldd	r30, Y+63	; 0x3f
    22f2:	a1 97       	sbiw	r28, 0x21	; 33
    22f4:	9e 17       	cp	r25, r30
    22f6:	28 f0       	brcs	.+10     	; 0x2302 <TIMER2_enuSetPWMDuty+0xe48>
    22f8:	c9 56       	subi	r28, 0x69	; 105
    22fa:	df 4f       	sbci	r29, 0xFF	; 255
    22fc:	18 82       	st	Y, r1
    22fe:	c7 59       	subi	r28, 0x97	; 151
    2300:	d0 40       	sbci	r29, 0x00	; 0
    2302:	cc 56       	subi	r28, 0x6C	; 108
    2304:	df 4f       	sbci	r29, 0xFF	; 255
    2306:	f8 81       	ld	r31, Y
    2308:	c4 59       	subi	r28, 0x94	; 148
    230a:	d0 40       	sbci	r29, 0x00	; 0
    230c:	c5 57       	subi	r28, 0x75	; 117
    230e:	df 4f       	sbci	r29, 0xFF	; 255
    2310:	08 81       	ld	r16, Y
    2312:	cb 58       	subi	r28, 0x8B	; 139
    2314:	d0 40       	sbci	r29, 0x00	; 0
    2316:	f0 0f       	add	r31, r16
    2318:	c8 56       	subi	r28, 0x68	; 104
    231a:	df 4f       	sbci	r29, 0xFF	; 255
    231c:	f8 83       	st	Y, r31
    231e:	c8 59       	subi	r28, 0x98	; 152
    2320:	d0 40       	sbci	r29, 0x00	; 0
    2322:	11 e0       	ldi	r17, 0x01	; 1
    2324:	c7 56       	subi	r28, 0x67	; 103
    2326:	df 4f       	sbci	r29, 0xFF	; 255
    2328:	18 83       	st	Y, r17
    232a:	c9 59       	subi	r28, 0x99	; 153
    232c:	d0 40       	sbci	r29, 0x00	; 0
    232e:	c8 56       	subi	r28, 0x68	; 104
    2330:	df 4f       	sbci	r29, 0xFF	; 255
    2332:	28 81       	ld	r18, Y
    2334:	c8 59       	subi	r28, 0x98	; 152
    2336:	d0 40       	sbci	r29, 0x00	; 0
    2338:	c5 57       	subi	r28, 0x75	; 117
    233a:	df 4f       	sbci	r29, 0xFF	; 255
    233c:	38 81       	ld	r19, Y
    233e:	cb 58       	subi	r28, 0x8B	; 139
    2340:	d0 40       	sbci	r29, 0x00	; 0
    2342:	23 17       	cp	r18, r19
    2344:	28 f0       	brcs	.+10     	; 0x2350 <TIMER2_enuSetPWMDuty+0xe96>
    2346:	c7 56       	subi	r28, 0x67	; 103
    2348:	df 4f       	sbci	r29, 0xFF	; 255
    234a:	18 82       	st	Y, r1
    234c:	c9 59       	subi	r28, 0x99	; 153
    234e:	d0 40       	sbci	r29, 0x00	; 0
    2350:	c9 56       	subi	r28, 0x69	; 105
    2352:	df 4f       	sbci	r29, 0xFF	; 255
    2354:	48 81       	ld	r20, Y
    2356:	c7 59       	subi	r28, 0x97	; 151
    2358:	d0 40       	sbci	r29, 0x00	; 0
    235a:	c7 56       	subi	r28, 0x67	; 103
    235c:	df 4f       	sbci	r29, 0xFF	; 255
    235e:	58 81       	ld	r21, Y
    2360:	c9 59       	subi	r28, 0x99	; 153
    2362:	d0 40       	sbci	r29, 0x00	; 0
    2364:	45 2b       	or	r20, r21
    2366:	c9 56       	subi	r28, 0x69	; 105
    2368:	df 4f       	sbci	r29, 0xFF	; 255
    236a:	48 83       	st	Y, r20
    236c:	c7 59       	subi	r28, 0x97	; 151
    236e:	d0 40       	sbci	r29, 0x00	; 0
    2370:	c8 56       	subi	r28, 0x68	; 104
    2372:	df 4f       	sbci	r29, 0xFF	; 255
    2374:	68 81       	ld	r22, Y
    2376:	c8 59       	subi	r28, 0x98	; 152
    2378:	d0 40       	sbci	r29, 0x00	; 0
    237a:	c5 57       	subi	r28, 0x75	; 117
    237c:	df 4f       	sbci	r29, 0xFF	; 255
    237e:	68 83       	st	Y, r22
    2380:	cb 58       	subi	r28, 0x8B	; 139
    2382:	d0 40       	sbci	r29, 0x00	; 0
    2384:	a2 96       	adiw	r28, 0x22	; 34
    2386:	7f ad       	ldd	r23, Y+63	; 0x3f
    2388:	a2 97       	sbiw	r28, 0x22	; 34
    238a:	cc 57       	subi	r28, 0x7C	; 124
    238c:	df 4f       	sbci	r29, 0xFF	; 255
    238e:	88 81       	ld	r24, Y
    2390:	c4 58       	subi	r28, 0x84	; 132
    2392:	d0 40       	sbci	r29, 0x00	; 0
    2394:	78 0f       	add	r23, r24
    2396:	c4 57       	subi	r28, 0x74	; 116
    2398:	df 4f       	sbci	r29, 0xFF	; 255
    239a:	78 83       	st	Y, r23
    239c:	cc 58       	subi	r28, 0x8C	; 140
    239e:	d0 40       	sbci	r29, 0x00	; 0
    23a0:	91 e0       	ldi	r25, 0x01	; 1
    23a2:	c6 56       	subi	r28, 0x66	; 102
    23a4:	df 4f       	sbci	r29, 0xFF	; 255
    23a6:	98 83       	st	Y, r25
    23a8:	ca 59       	subi	r28, 0x9A	; 154
    23aa:	d0 40       	sbci	r29, 0x00	; 0
    23ac:	c4 57       	subi	r28, 0x74	; 116
    23ae:	df 4f       	sbci	r29, 0xFF	; 255
    23b0:	e8 81       	ld	r30, Y
    23b2:	cc 58       	subi	r28, 0x8C	; 140
    23b4:	d0 40       	sbci	r29, 0x00	; 0
    23b6:	a2 96       	adiw	r28, 0x22	; 34
    23b8:	ff ad       	ldd	r31, Y+63	; 0x3f
    23ba:	a2 97       	sbiw	r28, 0x22	; 34
    23bc:	ef 17       	cp	r30, r31
    23be:	28 f0       	brcs	.+10     	; 0x23ca <TIMER2_enuSetPWMDuty+0xf10>
    23c0:	c6 56       	subi	r28, 0x66	; 102
    23c2:	df 4f       	sbci	r29, 0xFF	; 255
    23c4:	18 82       	st	Y, r1
    23c6:	ca 59       	subi	r28, 0x9A	; 154
    23c8:	d0 40       	sbci	r29, 0x00	; 0
    23ca:	c9 56       	subi	r28, 0x69	; 105
    23cc:	df 4f       	sbci	r29, 0xFF	; 255
    23ce:	08 81       	ld	r16, Y
    23d0:	c7 59       	subi	r28, 0x97	; 151
    23d2:	d0 40       	sbci	r29, 0x00	; 0
    23d4:	c4 57       	subi	r28, 0x74	; 116
    23d6:	df 4f       	sbci	r29, 0xFF	; 255
    23d8:	18 81       	ld	r17, Y
    23da:	cc 58       	subi	r28, 0x8C	; 140
    23dc:	d0 40       	sbci	r29, 0x00	; 0
    23de:	01 0f       	add	r16, r17
    23e0:	c5 56       	subi	r28, 0x65	; 101
    23e2:	df 4f       	sbci	r29, 0xFF	; 255
    23e4:	08 83       	st	Y, r16
    23e6:	cb 59       	subi	r28, 0x9B	; 155
    23e8:	d0 40       	sbci	r29, 0x00	; 0
    23ea:	21 e0       	ldi	r18, 0x01	; 1
    23ec:	c4 56       	subi	r28, 0x64	; 100
    23ee:	df 4f       	sbci	r29, 0xFF	; 255
    23f0:	28 83       	st	Y, r18
    23f2:	cc 59       	subi	r28, 0x9C	; 156
    23f4:	d0 40       	sbci	r29, 0x00	; 0
    23f6:	c5 56       	subi	r28, 0x65	; 101
    23f8:	df 4f       	sbci	r29, 0xFF	; 255
    23fa:	38 81       	ld	r19, Y
    23fc:	cb 59       	subi	r28, 0x9B	; 155
    23fe:	d0 40       	sbci	r29, 0x00	; 0
    2400:	c4 57       	subi	r28, 0x74	; 116
    2402:	df 4f       	sbci	r29, 0xFF	; 255
    2404:	48 81       	ld	r20, Y
    2406:	cc 58       	subi	r28, 0x8C	; 140
    2408:	d0 40       	sbci	r29, 0x00	; 0
    240a:	34 17       	cp	r19, r20
    240c:	28 f0       	brcs	.+10     	; 0x2418 <TIMER2_enuSetPWMDuty+0xf5e>
    240e:	c4 56       	subi	r28, 0x64	; 100
    2410:	df 4f       	sbci	r29, 0xFF	; 255
    2412:	18 82       	st	Y, r1
    2414:	cc 59       	subi	r28, 0x9C	; 156
    2416:	d0 40       	sbci	r29, 0x00	; 0
    2418:	c6 56       	subi	r28, 0x66	; 102
    241a:	df 4f       	sbci	r29, 0xFF	; 255
    241c:	58 81       	ld	r21, Y
    241e:	ca 59       	subi	r28, 0x9A	; 154
    2420:	d0 40       	sbci	r29, 0x00	; 0
    2422:	c4 56       	subi	r28, 0x64	; 100
    2424:	df 4f       	sbci	r29, 0xFF	; 255
    2426:	68 81       	ld	r22, Y
    2428:	cc 59       	subi	r28, 0x9C	; 156
    242a:	d0 40       	sbci	r29, 0x00	; 0
    242c:	56 2b       	or	r21, r22
    242e:	c6 56       	subi	r28, 0x66	; 102
    2430:	df 4f       	sbci	r29, 0xFF	; 255
    2432:	58 83       	st	Y, r21
    2434:	ca 59       	subi	r28, 0x9A	; 154
    2436:	d0 40       	sbci	r29, 0x00	; 0
    2438:	c5 56       	subi	r28, 0x65	; 101
    243a:	df 4f       	sbci	r29, 0xFF	; 255
    243c:	78 81       	ld	r23, Y
    243e:	cb 59       	subi	r28, 0x9B	; 155
    2440:	d0 40       	sbci	r29, 0x00	; 0
    2442:	c4 57       	subi	r28, 0x74	; 116
    2444:	df 4f       	sbci	r29, 0xFF	; 255
    2446:	78 83       	st	Y, r23
    2448:	cc 58       	subi	r28, 0x8C	; 140
    244a:	d0 40       	sbci	r29, 0x00	; 0
    244c:	a3 96       	adiw	r28, 0x23	; 35
    244e:	8f ad       	ldd	r24, Y+63	; 0x3f
    2450:	a3 97       	sbiw	r28, 0x23	; 35
    2452:	cb 57       	subi	r28, 0x7B	; 123
    2454:	df 4f       	sbci	r29, 0xFF	; 255
    2456:	98 81       	ld	r25, Y
    2458:	c5 58       	subi	r28, 0x85	; 133
    245a:	d0 40       	sbci	r29, 0x00	; 0
    245c:	89 0f       	add	r24, r25
    245e:	c3 57       	subi	r28, 0x73	; 115
    2460:	df 4f       	sbci	r29, 0xFF	; 255
    2462:	88 83       	st	Y, r24
    2464:	cd 58       	subi	r28, 0x8D	; 141
    2466:	d0 40       	sbci	r29, 0x00	; 0
    2468:	e1 e0       	ldi	r30, 0x01	; 1
    246a:	c3 56       	subi	r28, 0x63	; 99
    246c:	df 4f       	sbci	r29, 0xFF	; 255
    246e:	e8 83       	st	Y, r30
    2470:	cd 59       	subi	r28, 0x9D	; 157
    2472:	d0 40       	sbci	r29, 0x00	; 0
    2474:	c3 57       	subi	r28, 0x73	; 115
    2476:	df 4f       	sbci	r29, 0xFF	; 255
    2478:	f8 81       	ld	r31, Y
    247a:	cd 58       	subi	r28, 0x8D	; 141
    247c:	d0 40       	sbci	r29, 0x00	; 0
    247e:	a3 96       	adiw	r28, 0x23	; 35
    2480:	0f ad       	ldd	r16, Y+63	; 0x3f
    2482:	a3 97       	sbiw	r28, 0x23	; 35
    2484:	f0 17       	cp	r31, r16
    2486:	28 f0       	brcs	.+10     	; 0x2492 <TIMER2_enuSetPWMDuty+0xfd8>
    2488:	c3 56       	subi	r28, 0x63	; 99
    248a:	df 4f       	sbci	r29, 0xFF	; 255
    248c:	18 82       	st	Y, r1
    248e:	cd 59       	subi	r28, 0x9D	; 157
    2490:	d0 40       	sbci	r29, 0x00	; 0
    2492:	c6 56       	subi	r28, 0x66	; 102
    2494:	df 4f       	sbci	r29, 0xFF	; 255
    2496:	18 81       	ld	r17, Y
    2498:	ca 59       	subi	r28, 0x9A	; 154
    249a:	d0 40       	sbci	r29, 0x00	; 0
    249c:	c3 57       	subi	r28, 0x73	; 115
    249e:	df 4f       	sbci	r29, 0xFF	; 255
    24a0:	28 81       	ld	r18, Y
    24a2:	cd 58       	subi	r28, 0x8D	; 141
    24a4:	d0 40       	sbci	r29, 0x00	; 0
    24a6:	12 0f       	add	r17, r18
    24a8:	c2 56       	subi	r28, 0x62	; 98
    24aa:	df 4f       	sbci	r29, 0xFF	; 255
    24ac:	18 83       	st	Y, r17
    24ae:	ce 59       	subi	r28, 0x9E	; 158
    24b0:	d0 40       	sbci	r29, 0x00	; 0
    24b2:	31 e0       	ldi	r19, 0x01	; 1
    24b4:	c1 56       	subi	r28, 0x61	; 97
    24b6:	df 4f       	sbci	r29, 0xFF	; 255
    24b8:	38 83       	st	Y, r19
    24ba:	cf 59       	subi	r28, 0x9F	; 159
    24bc:	d0 40       	sbci	r29, 0x00	; 0
    24be:	c2 56       	subi	r28, 0x62	; 98
    24c0:	df 4f       	sbci	r29, 0xFF	; 255
    24c2:	48 81       	ld	r20, Y
    24c4:	ce 59       	subi	r28, 0x9E	; 158
    24c6:	d0 40       	sbci	r29, 0x00	; 0
    24c8:	c3 57       	subi	r28, 0x73	; 115
    24ca:	df 4f       	sbci	r29, 0xFF	; 255
    24cc:	58 81       	ld	r21, Y
    24ce:	cd 58       	subi	r28, 0x8D	; 141
    24d0:	d0 40       	sbci	r29, 0x00	; 0
    24d2:	45 17       	cp	r20, r21
    24d4:	28 f0       	brcs	.+10     	; 0x24e0 <TIMER2_enuSetPWMDuty+0x1026>
    24d6:	c1 56       	subi	r28, 0x61	; 97
    24d8:	df 4f       	sbci	r29, 0xFF	; 255
    24da:	18 82       	st	Y, r1
    24dc:	cf 59       	subi	r28, 0x9F	; 159
    24de:	d0 40       	sbci	r29, 0x00	; 0
    24e0:	c3 56       	subi	r28, 0x63	; 99
    24e2:	df 4f       	sbci	r29, 0xFF	; 255
    24e4:	68 81       	ld	r22, Y
    24e6:	cd 59       	subi	r28, 0x9D	; 157
    24e8:	d0 40       	sbci	r29, 0x00	; 0
    24ea:	c1 56       	subi	r28, 0x61	; 97
    24ec:	df 4f       	sbci	r29, 0xFF	; 255
    24ee:	78 81       	ld	r23, Y
    24f0:	cf 59       	subi	r28, 0x9F	; 159
    24f2:	d0 40       	sbci	r29, 0x00	; 0
    24f4:	67 2b       	or	r22, r23
    24f6:	c3 56       	subi	r28, 0x63	; 99
    24f8:	df 4f       	sbci	r29, 0xFF	; 255
    24fa:	68 83       	st	Y, r22
    24fc:	cd 59       	subi	r28, 0x9D	; 157
    24fe:	d0 40       	sbci	r29, 0x00	; 0
    2500:	c2 56       	subi	r28, 0x62	; 98
    2502:	df 4f       	sbci	r29, 0xFF	; 255
    2504:	88 81       	ld	r24, Y
    2506:	ce 59       	subi	r28, 0x9E	; 158
    2508:	d0 40       	sbci	r29, 0x00	; 0
    250a:	c3 57       	subi	r28, 0x73	; 115
    250c:	df 4f       	sbci	r29, 0xFF	; 255
    250e:	88 83       	st	Y, r24
    2510:	cd 58       	subi	r28, 0x8D	; 141
    2512:	d0 40       	sbci	r29, 0x00	; 0
    2514:	a4 96       	adiw	r28, 0x24	; 36
    2516:	9f ad       	ldd	r25, Y+63	; 0x3f
    2518:	a4 97       	sbiw	r28, 0x24	; 36
    251a:	ca 57       	subi	r28, 0x7A	; 122
    251c:	df 4f       	sbci	r29, 0xFF	; 255
    251e:	e8 81       	ld	r30, Y
    2520:	c6 58       	subi	r28, 0x86	; 134
    2522:	d0 40       	sbci	r29, 0x00	; 0
    2524:	9e 0f       	add	r25, r30
    2526:	c2 57       	subi	r28, 0x72	; 114
    2528:	df 4f       	sbci	r29, 0xFF	; 255
    252a:	98 83       	st	Y, r25
    252c:	ce 58       	subi	r28, 0x8E	; 142
    252e:	d0 40       	sbci	r29, 0x00	; 0
    2530:	f1 e0       	ldi	r31, 0x01	; 1
    2532:	c0 56       	subi	r28, 0x60	; 96
    2534:	df 4f       	sbci	r29, 0xFF	; 255
    2536:	f8 83       	st	Y, r31
    2538:	c0 5a       	subi	r28, 0xA0	; 160
    253a:	d0 40       	sbci	r29, 0x00	; 0
    253c:	c2 57       	subi	r28, 0x72	; 114
    253e:	df 4f       	sbci	r29, 0xFF	; 255
    2540:	08 81       	ld	r16, Y
    2542:	ce 58       	subi	r28, 0x8E	; 142
    2544:	d0 40       	sbci	r29, 0x00	; 0
    2546:	a4 96       	adiw	r28, 0x24	; 36
    2548:	1f ad       	ldd	r17, Y+63	; 0x3f
    254a:	a4 97       	sbiw	r28, 0x24	; 36
    254c:	01 17       	cp	r16, r17
    254e:	28 f0       	brcs	.+10     	; 0x255a <TIMER2_enuSetPWMDuty+0x10a0>
    2550:	c0 56       	subi	r28, 0x60	; 96
    2552:	df 4f       	sbci	r29, 0xFF	; 255
    2554:	18 82       	st	Y, r1
    2556:	c0 5a       	subi	r28, 0xA0	; 160
    2558:	d0 40       	sbci	r29, 0x00	; 0
    255a:	c3 56       	subi	r28, 0x63	; 99
    255c:	df 4f       	sbci	r29, 0xFF	; 255
    255e:	28 81       	ld	r18, Y
    2560:	cd 59       	subi	r28, 0x9D	; 157
    2562:	d0 40       	sbci	r29, 0x00	; 0
    2564:	c2 57       	subi	r28, 0x72	; 114
    2566:	df 4f       	sbci	r29, 0xFF	; 255
    2568:	38 81       	ld	r19, Y
    256a:	ce 58       	subi	r28, 0x8E	; 142
    256c:	d0 40       	sbci	r29, 0x00	; 0
    256e:	23 0f       	add	r18, r19
    2570:	cf 55       	subi	r28, 0x5F	; 95
    2572:	df 4f       	sbci	r29, 0xFF	; 255
    2574:	28 83       	st	Y, r18
    2576:	c1 5a       	subi	r28, 0xA1	; 161
    2578:	d0 40       	sbci	r29, 0x00	; 0
    257a:	41 e0       	ldi	r20, 0x01	; 1
    257c:	ce 55       	subi	r28, 0x5E	; 94
    257e:	df 4f       	sbci	r29, 0xFF	; 255
    2580:	48 83       	st	Y, r20
    2582:	c2 5a       	subi	r28, 0xA2	; 162
    2584:	d0 40       	sbci	r29, 0x00	; 0
    2586:	cf 55       	subi	r28, 0x5F	; 95
    2588:	df 4f       	sbci	r29, 0xFF	; 255
    258a:	58 81       	ld	r21, Y
    258c:	c1 5a       	subi	r28, 0xA1	; 161
    258e:	d0 40       	sbci	r29, 0x00	; 0
    2590:	c2 57       	subi	r28, 0x72	; 114
    2592:	df 4f       	sbci	r29, 0xFF	; 255
    2594:	68 81       	ld	r22, Y
    2596:	ce 58       	subi	r28, 0x8E	; 142
    2598:	d0 40       	sbci	r29, 0x00	; 0
    259a:	56 17       	cp	r21, r22
    259c:	28 f0       	brcs	.+10     	; 0x25a8 <TIMER2_enuSetPWMDuty+0x10ee>
    259e:	ce 55       	subi	r28, 0x5E	; 94
    25a0:	df 4f       	sbci	r29, 0xFF	; 255
    25a2:	18 82       	st	Y, r1
    25a4:	c2 5a       	subi	r28, 0xA2	; 162
    25a6:	d0 40       	sbci	r29, 0x00	; 0
    25a8:	c0 56       	subi	r28, 0x60	; 96
    25aa:	df 4f       	sbci	r29, 0xFF	; 255
    25ac:	78 81       	ld	r23, Y
    25ae:	c0 5a       	subi	r28, 0xA0	; 160
    25b0:	d0 40       	sbci	r29, 0x00	; 0
    25b2:	ce 55       	subi	r28, 0x5E	; 94
    25b4:	df 4f       	sbci	r29, 0xFF	; 255
    25b6:	88 81       	ld	r24, Y
    25b8:	c2 5a       	subi	r28, 0xA2	; 162
    25ba:	d0 40       	sbci	r29, 0x00	; 0
    25bc:	78 2b       	or	r23, r24
    25be:	c0 56       	subi	r28, 0x60	; 96
    25c0:	df 4f       	sbci	r29, 0xFF	; 255
    25c2:	78 83       	st	Y, r23
    25c4:	c0 5a       	subi	r28, 0xA0	; 160
    25c6:	d0 40       	sbci	r29, 0x00	; 0
    25c8:	cf 55       	subi	r28, 0x5F	; 95
    25ca:	df 4f       	sbci	r29, 0xFF	; 255
    25cc:	98 81       	ld	r25, Y
    25ce:	c1 5a       	subi	r28, 0xA1	; 161
    25d0:	d0 40       	sbci	r29, 0x00	; 0
    25d2:	c2 57       	subi	r28, 0x72	; 114
    25d4:	df 4f       	sbci	r29, 0xFF	; 255
    25d6:	98 83       	st	Y, r25
    25d8:	ce 58       	subi	r28, 0x8E	; 142
    25da:	d0 40       	sbci	r29, 0x00	; 0
    25dc:	a5 96       	adiw	r28, 0x25	; 37
    25de:	ef ad       	ldd	r30, Y+63	; 0x3f
    25e0:	a5 97       	sbiw	r28, 0x25	; 37
    25e2:	c9 57       	subi	r28, 0x79	; 121
    25e4:	df 4f       	sbci	r29, 0xFF	; 255
    25e6:	f8 81       	ld	r31, Y
    25e8:	c7 58       	subi	r28, 0x87	; 135
    25ea:	d0 40       	sbci	r29, 0x00	; 0
    25ec:	ef 0f       	add	r30, r31
    25ee:	c1 57       	subi	r28, 0x71	; 113
    25f0:	df 4f       	sbci	r29, 0xFF	; 255
    25f2:	e8 83       	st	Y, r30
    25f4:	cf 58       	subi	r28, 0x8F	; 143
    25f6:	d0 40       	sbci	r29, 0x00	; 0
    25f8:	c0 56       	subi	r28, 0x60	; 96
    25fa:	df 4f       	sbci	r29, 0xFF	; 255
    25fc:	88 81       	ld	r24, Y
    25fe:	c0 5a       	subi	r28, 0xA0	; 160
    2600:	d0 40       	sbci	r29, 0x00	; 0
    2602:	c1 57       	subi	r28, 0x71	; 113
    2604:	df 4f       	sbci	r29, 0xFF	; 255
    2606:	08 81       	ld	r16, Y
    2608:	cf 58       	subi	r28, 0x8F	; 143
    260a:	d0 40       	sbci	r29, 0x00	; 0
    260c:	80 0f       	add	r24, r16
    260e:	c1 57       	subi	r28, 0x71	; 113
    2610:	df 4f       	sbci	r29, 0xFF	; 255
    2612:	88 83       	st	Y, r24
    2614:	cf 58       	subi	r28, 0x8F	; 143
    2616:	d0 40       	sbci	r29, 0x00	; 0
    2618:	c8 57       	subi	r28, 0x78	; 120
    261a:	df 4f       	sbci	r29, 0xFF	; 255
    261c:	a8 80       	ld	r10, Y
    261e:	c8 58       	subi	r28, 0x88	; 136
    2620:	d0 40       	sbci	r29, 0x00	; 0
    2622:	c7 57       	subi	r28, 0x77	; 119
    2624:	df 4f       	sbci	r29, 0xFF	; 255
    2626:	b8 80       	ld	r11, Y
    2628:	c9 58       	subi	r28, 0x89	; 137
    262a:	d0 40       	sbci	r29, 0x00	; 0
    262c:	c6 57       	subi	r28, 0x76	; 118
    262e:	df 4f       	sbci	r29, 0xFF	; 255
    2630:	c8 80       	ld	r12, Y
    2632:	ca 58       	subi	r28, 0x8A	; 138
    2634:	d0 40       	sbci	r29, 0x00	; 0
    2636:	c5 57       	subi	r28, 0x75	; 117
    2638:	df 4f       	sbci	r29, 0xFF	; 255
    263a:	d8 80       	ld	r13, Y
    263c:	cb 58       	subi	r28, 0x8B	; 139
    263e:	d0 40       	sbci	r29, 0x00	; 0
    2640:	c4 57       	subi	r28, 0x74	; 116
    2642:	df 4f       	sbci	r29, 0xFF	; 255
    2644:	e8 80       	ld	r14, Y
    2646:	cc 58       	subi	r28, 0x8C	; 140
    2648:	d0 40       	sbci	r29, 0x00	; 0
    264a:	c3 57       	subi	r28, 0x73	; 115
    264c:	df 4f       	sbci	r29, 0xFF	; 255
    264e:	f8 80       	ld	r15, Y
    2650:	cd 58       	subi	r28, 0x8D	; 141
    2652:	d0 40       	sbci	r29, 0x00	; 0
    2654:	c2 57       	subi	r28, 0x72	; 114
    2656:	df 4f       	sbci	r29, 0xFF	; 255
    2658:	08 81       	ld	r16, Y
    265a:	ce 58       	subi	r28, 0x8E	; 142
    265c:	d0 40       	sbci	r29, 0x00	; 0
    265e:	c1 57       	subi	r28, 0x71	; 113
    2660:	df 4f       	sbci	r29, 0xFF	; 255
    2662:	18 81       	ld	r17, Y
    2664:	cf 58       	subi	r28, 0x8F	; 143
    2666:	d0 40       	sbci	r29, 0x00	; 0
    2668:	2a 2d       	mov	r18, r10
    266a:	3b 2d       	mov	r19, r11
    266c:	4c 2d       	mov	r20, r12
    266e:	5d 2d       	mov	r21, r13
    2670:	6e 2d       	mov	r22, r14
    2672:	7f 2d       	mov	r23, r15
    2674:	80 2f       	mov	r24, r16
    2676:	91 2f       	mov	r25, r17
    2678:	0e 94 ef 01 	call	0x3de	; 0x3de <__floatundisf>
    267c:	dc 01       	movw	r26, r24
    267e:	cb 01       	movw	r24, r22
    2680:	bc 01       	movw	r22, r24
    2682:	cd 01       	movw	r24, r26
    2684:	20 e0       	ldi	r18, 0x00	; 0
    2686:	30 e0       	ldi	r19, 0x00	; 0
    2688:	48 ec       	ldi	r20, 0xC8	; 200
    268a:	52 e4       	ldi	r21, 0x42	; 66
    268c:	0e 94 6f 05 	call	0xade	; 0xade <__divsf3>
    2690:	dc 01       	movw	r26, r24
    2692:	cb 01       	movw	r24, r22
    2694:	bc 01       	movw	r22, r24
    2696:	cd 01       	movw	r24, r26
    2698:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    269c:	dc 01       	movw	r26, r24
    269e:	cb 01       	movw	r24, r22
    26a0:	eb 85       	ldd	r30, Y+11	; 0x0b
    26a2:	fc 85       	ldd	r31, Y+12	; 0x0c
    26a4:	80 83       	st	Z, r24
				Local_enuErrorState = ES_OK;
    26a6:	19 82       	std	Y+1, r1	; 0x01
    26a8:	05 c0       	rjmp	.+10     	; 0x26b4 <TIMER2_enuSetPWMDuty+0x11fa>
			}
			else Local_enuErrorState = ES_NOK;
    26aa:	81 e0       	ldi	r24, 0x01	; 1
    26ac:	89 83       	std	Y+1, r24	; 0x01
    26ae:	02 c0       	rjmp	.+4      	; 0x26b4 <TIMER2_enuSetPWMDuty+0x11fa>
		}else ;
	else
		Local_enuErrorState = ES_OUT_OF_RANGE;
    26b0:	82 e0       	ldi	r24, 0x02	; 2
    26b2:	89 83       	std	Y+1, r24	; 0x01

	return Local_enuErrorState;
    26b4:	89 81       	ldd	r24, Y+1	; 0x01
}
    26b6:	ce 55       	subi	r28, 0x5E	; 94
    26b8:	df 4f       	sbci	r29, 0xFF	; 255
    26ba:	0f b6       	in	r0, 0x3f	; 63
    26bc:	f8 94       	cli
    26be:	de bf       	out	0x3e, r29	; 62
    26c0:	0f be       	out	0x3f, r0	; 63
    26c2:	cd bf       	out	0x3d, r28	; 61
    26c4:	cf 91       	pop	r28
    26c6:	df 91       	pop	r29
    26c8:	1f 91       	pop	r17
    26ca:	0f 91       	pop	r16
    26cc:	ff 90       	pop	r15
    26ce:	ef 90       	pop	r14
    26d0:	df 90       	pop	r13
    26d2:	cf 90       	pop	r12
    26d4:	bf 90       	pop	r11
    26d6:	af 90       	pop	r10
    26d8:	08 95       	ret

000026da <TIMER2_enuSetthePrescaler>:

ES_t TIMER2_enuSetthePrescaler(u8 Copy_u8Pres)
{
    26da:	df 93       	push	r29
    26dc:	cf 93       	push	r28
    26de:	00 d0       	rcall	.+0      	; 0x26e0 <TIMER2_enuSetthePrescaler+0x6>
    26e0:	cd b7       	in	r28, 0x3d	; 61
    26e2:	de b7       	in	r29, 0x3e	; 62
    26e4:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState=ES_NOK;
    26e6:	81 e0       	ldi	r24, 0x01	; 1
    26e8:	89 83       	std	Y+1, r24	; 0x01
	if(!(Copy_u8Pres & ~TIM2_PRE1024))
    26ea:	8a 81       	ldd	r24, Y+2	; 0x02
    26ec:	88 2f       	mov	r24, r24
    26ee:	90 e0       	ldi	r25, 0x00	; 0
    26f0:	88 7f       	andi	r24, 0xF8	; 248
    26f2:	00 97       	sbiw	r24, 0x00	; 0
    26f4:	89 f4       	brne	.+34     	; 0x2718 <TIMER2_enuSetthePrescaler+0x3e>
	{
		TCCR2 &= ~TIM2_PRE1024;
    26f6:	a5 e4       	ldi	r26, 0x45	; 69
    26f8:	b0 e0       	ldi	r27, 0x00	; 0
    26fa:	e5 e4       	ldi	r30, 0x45	; 69
    26fc:	f0 e0       	ldi	r31, 0x00	; 0
    26fe:	80 81       	ld	r24, Z
    2700:	88 7f       	andi	r24, 0xF8	; 248
    2702:	8c 93       	st	X, r24
		TCCR2 |=Copy_u8Pres;
    2704:	a5 e4       	ldi	r26, 0x45	; 69
    2706:	b0 e0       	ldi	r27, 0x00	; 0
    2708:	e5 e4       	ldi	r30, 0x45	; 69
    270a:	f0 e0       	ldi	r31, 0x00	; 0
    270c:	90 81       	ld	r25, Z
    270e:	8a 81       	ldd	r24, Y+2	; 0x02
    2710:	89 2b       	or	r24, r25
    2712:	8c 93       	st	X, r24
		Local_enuErrorState = ES_OK;
    2714:	19 82       	std	Y+1, r1	; 0x01
    2716:	02 c0       	rjmp	.+4      	; 0x271c <TIMER2_enuSetthePrescaler+0x42>
	}
	else Local_enuErrorState=ES_OUT_OF_RANGE;
    2718:	82 e0       	ldi	r24, 0x02	; 2
    271a:	89 83       	std	Y+1, r24	; 0x01
	return Local_enuErrorState;
    271c:	89 81       	ldd	r24, Y+1	; 0x01
}
    271e:	0f 90       	pop	r0
    2720:	0f 90       	pop	r0
    2722:	cf 91       	pop	r28
    2724:	df 91       	pop	r29
    2726:	08 95       	ret

00002728 <TIMER2_enuEnableInterrupt>:

ES_t TIMER2_enuEnableInterrupt(u8 Copy_u8InterruptMood)
{
    2728:	df 93       	push	r29
    272a:	cf 93       	push	r28
    272c:	00 d0       	rcall	.+0      	; 0x272e <TIMER2_enuEnableInterrupt+0x6>
    272e:	cd b7       	in	r28, 0x3d	; 61
    2730:	de b7       	in	r29, 0x3e	; 62
    2732:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState=ES_NOK;
    2734:	81 e0       	ldi	r24, 0x01	; 1
    2736:	89 83       	std	Y+1, r24	; 0x01
	if( !(Copy_u8InterruptMood & ~(OVERFLOW_INTER|COMPMATCH_INTER)))
    2738:	8a 81       	ldd	r24, Y+2	; 0x02
    273a:	88 2f       	mov	r24, r24
    273c:	90 e0       	ldi	r25, 0x00	; 0
    273e:	8f 73       	andi	r24, 0x3F	; 63
    2740:	00 97       	sbiw	r24, 0x00	; 0
    2742:	51 f4       	brne	.+20     	; 0x2758 <TIMER2_enuEnableInterrupt+0x30>
	{
		TIMSK |= Copy_u8InterruptMood;
    2744:	a9 e5       	ldi	r26, 0x59	; 89
    2746:	b0 e0       	ldi	r27, 0x00	; 0
    2748:	e9 e5       	ldi	r30, 0x59	; 89
    274a:	f0 e0       	ldi	r31, 0x00	; 0
    274c:	90 81       	ld	r25, Z
    274e:	8a 81       	ldd	r24, Y+2	; 0x02
    2750:	89 2b       	or	r24, r25
    2752:	8c 93       	st	X, r24
		Local_enuErrorState= ES_OK;
    2754:	19 82       	std	Y+1, r1	; 0x01
    2756:	02 c0       	rjmp	.+4      	; 0x275c <TIMER2_enuEnableInterrupt+0x34>

	}
	else Local_enuErrorState = ES_OUT_OF_RANGE;
    2758:	82 e0       	ldi	r24, 0x02	; 2
    275a:	89 83       	std	Y+1, r24	; 0x01
	return Local_enuErrorState;
    275c:	89 81       	ldd	r24, Y+1	; 0x01
}
    275e:	0f 90       	pop	r0
    2760:	0f 90       	pop	r0
    2762:	cf 91       	pop	r28
    2764:	df 91       	pop	r29
    2766:	08 95       	ret

00002768 <TIMER2_enuDisableInterrupt>:

ES_t TIMER2_enuDisableInterrupt(u8 Copy_u8InterruptMood)
{
    2768:	df 93       	push	r29
    276a:	cf 93       	push	r28
    276c:	00 d0       	rcall	.+0      	; 0x276e <TIMER2_enuDisableInterrupt+0x6>
    276e:	cd b7       	in	r28, 0x3d	; 61
    2770:	de b7       	in	r29, 0x3e	; 62
    2772:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState=ES_NOK;
    2774:	81 e0       	ldi	r24, 0x01	; 1
    2776:	89 83       	std	Y+1, r24	; 0x01
	if( !(Copy_u8InterruptMood & ~(OVERFLOW_INTER|COMPMATCH_INTER)))
    2778:	8a 81       	ldd	r24, Y+2	; 0x02
    277a:	88 2f       	mov	r24, r24
    277c:	90 e0       	ldi	r25, 0x00	; 0
    277e:	8f 73       	andi	r24, 0x3F	; 63
    2780:	00 97       	sbiw	r24, 0x00	; 0
    2782:	59 f4       	brne	.+22     	; 0x279a <TIMER2_enuDisableInterrupt+0x32>
	{
		TIMSK &= ~Copy_u8InterruptMood;
    2784:	a9 e5       	ldi	r26, 0x59	; 89
    2786:	b0 e0       	ldi	r27, 0x00	; 0
    2788:	e9 e5       	ldi	r30, 0x59	; 89
    278a:	f0 e0       	ldi	r31, 0x00	; 0
    278c:	80 81       	ld	r24, Z
    278e:	98 2f       	mov	r25, r24
    2790:	8a 81       	ldd	r24, Y+2	; 0x02
    2792:	80 95       	com	r24
    2794:	89 23       	and	r24, r25
    2796:	8c 93       	st	X, r24
		Local_enuErrorState= ES_OK;
    2798:	19 82       	std	Y+1, r1	; 0x01

	}

	return Local_enuErrorState;
    279a:	89 81       	ldd	r24, Y+1	; 0x01
}
    279c:	0f 90       	pop	r0
    279e:	0f 90       	pop	r0
    27a0:	cf 91       	pop	r28
    27a2:	df 91       	pop	r29
    27a4:	08 95       	ret

000027a6 <TIMER2_enuCallBackFun>:

ES_t TIMER2_enuCallBackFun(u8 Copy_u8InterruptMood,void (*Copy_pfunAPPFun)(void *),void* Copy_pvidISRPara)
{
    27a6:	df 93       	push	r29
    27a8:	cf 93       	push	r28
    27aa:	cd b7       	in	r28, 0x3d	; 61
    27ac:	de b7       	in	r29, 0x3e	; 62
    27ae:	2a 97       	sbiw	r28, 0x0a	; 10
    27b0:	0f b6       	in	r0, 0x3f	; 63
    27b2:	f8 94       	cli
    27b4:	de bf       	out	0x3e, r29	; 62
    27b6:	0f be       	out	0x3f, r0	; 63
    27b8:	cd bf       	out	0x3d, r28	; 61
    27ba:	8a 83       	std	Y+2, r24	; 0x02
    27bc:	7c 83       	std	Y+4, r23	; 0x04
    27be:	6b 83       	std	Y+3, r22	; 0x03
    27c0:	5e 83       	std	Y+6, r21	; 0x06
    27c2:	4d 83       	std	Y+5, r20	; 0x05
	ES_t Local_enuErrorState=ES_NOK;
    27c4:	81 e0       	ldi	r24, 0x01	; 1
    27c6:	89 83       	std	Y+1, r24	; 0x01

	if(!(Copy_u8InterruptMood & ~(OVERFLOW_INTER|COMPMATCH_INTER))&& Copy_u8InterruptMood!=(OVERFLOW_INTER|COMPMATCH_INTER))
    27c8:	8a 81       	ldd	r24, Y+2	; 0x02
    27ca:	88 2f       	mov	r24, r24
    27cc:	90 e0       	ldi	r25, 0x00	; 0
    27ce:	8f 73       	andi	r24, 0x3F	; 63
    27d0:	00 97       	sbiw	r24, 0x00	; 0
    27d2:	81 f5       	brne	.+96     	; 0x2834 <TIMER2_enuCallBackFun+0x8e>
    27d4:	8a 81       	ldd	r24, Y+2	; 0x02
    27d6:	80 3c       	cpi	r24, 0xC0	; 192
    27d8:	69 f1       	breq	.+90     	; 0x2834 <TIMER2_enuCallBackFun+0x8e>
	{
		if(NULL!=Copy_pfunAPPFun)
    27da:	8b 81       	ldd	r24, Y+3	; 0x03
    27dc:	9c 81       	ldd	r25, Y+4	; 0x04
    27de:	00 97       	sbiw	r24, 0x00	; 0
    27e0:	49 f1       	breq	.+82     	; 0x2834 <TIMER2_enuCallBackFun+0x8e>
		{
			TIMER2_ApfunISRfun[(COMPMATCH_INTER==Copy_u8InterruptMood)?0:1] = Copy_pfunAPPFun;
    27e2:	1a 86       	std	Y+10, r1	; 0x0a
    27e4:	19 86       	std	Y+9, r1	; 0x09
    27e6:	8a 81       	ldd	r24, Y+2	; 0x02
    27e8:	80 38       	cpi	r24, 0x80	; 128
    27ea:	21 f0       	breq	.+8      	; 0x27f4 <TIMER2_enuCallBackFun+0x4e>
    27ec:	81 e0       	ldi	r24, 0x01	; 1
    27ee:	90 e0       	ldi	r25, 0x00	; 0
    27f0:	9a 87       	std	Y+10, r25	; 0x0a
    27f2:	89 87       	std	Y+9, r24	; 0x09
    27f4:	89 85       	ldd	r24, Y+9	; 0x09
    27f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    27f8:	88 0f       	add	r24, r24
    27fa:	99 1f       	adc	r25, r25
    27fc:	fc 01       	movw	r30, r24
    27fe:	ea 58       	subi	r30, 0x8A	; 138
    2800:	fe 4f       	sbci	r31, 0xFE	; 254
    2802:	8b 81       	ldd	r24, Y+3	; 0x03
    2804:	9c 81       	ldd	r25, Y+4	; 0x04
    2806:	91 83       	std	Z+1, r25	; 0x01
    2808:	80 83       	st	Z, r24
			TIMER2_ApvidISRParameter[(COMPMATCH_INTER==Copy_u8InterruptMood)?0:1] = Copy_pvidISRPara;
    280a:	18 86       	std	Y+8, r1	; 0x08
    280c:	1f 82       	std	Y+7, r1	; 0x07
    280e:	8a 81       	ldd	r24, Y+2	; 0x02
    2810:	80 38       	cpi	r24, 0x80	; 128
    2812:	21 f0       	breq	.+8      	; 0x281c <TIMER2_enuCallBackFun+0x76>
    2814:	81 e0       	ldi	r24, 0x01	; 1
    2816:	90 e0       	ldi	r25, 0x00	; 0
    2818:	98 87       	std	Y+8, r25	; 0x08
    281a:	8f 83       	std	Y+7, r24	; 0x07
    281c:	8f 81       	ldd	r24, Y+7	; 0x07
    281e:	98 85       	ldd	r25, Y+8	; 0x08
    2820:	88 0f       	add	r24, r24
    2822:	99 1f       	adc	r25, r25
    2824:	fc 01       	movw	r30, r24
    2826:	e6 58       	subi	r30, 0x86	; 134
    2828:	fe 4f       	sbci	r31, 0xFE	; 254
    282a:	8d 81       	ldd	r24, Y+5	; 0x05
    282c:	9e 81       	ldd	r25, Y+6	; 0x06
    282e:	91 83       	std	Z+1, r25	; 0x01
    2830:	80 83       	st	Z, r24
			Local_enuErrorState= ES_OK;
    2832:	19 82       	std	Y+1, r1	; 0x01
		}
		//Local_enuErrorState= ES_OK;
	}

	return Local_enuErrorState;
    2834:	89 81       	ldd	r24, Y+1	; 0x01
}
    2836:	2a 96       	adiw	r28, 0x0a	; 10
    2838:	0f b6       	in	r0, 0x3f	; 63
    283a:	f8 94       	cli
    283c:	de bf       	out	0x3e, r29	; 62
    283e:	0f be       	out	0x3f, r0	; 63
    2840:	cd bf       	out	0x3d, r28	; 61
    2842:	cf 91       	pop	r28
    2844:	df 91       	pop	r29
    2846:	08 95       	ret

00002848 <__vector_4>:

void __vector_4(void)__attribute__((signal));
void __vector_4(void)
{
    2848:	1f 92       	push	r1
    284a:	0f 92       	push	r0
    284c:	0f b6       	in	r0, 0x3f	; 63
    284e:	0f 92       	push	r0
    2850:	11 24       	eor	r1, r1
    2852:	2f 93       	push	r18
    2854:	3f 93       	push	r19
    2856:	4f 93       	push	r20
    2858:	5f 93       	push	r21
    285a:	6f 93       	push	r22
    285c:	7f 93       	push	r23
    285e:	8f 93       	push	r24
    2860:	9f 93       	push	r25
    2862:	af 93       	push	r26
    2864:	bf 93       	push	r27
    2866:	ef 93       	push	r30
    2868:	ff 93       	push	r31
    286a:	df 93       	push	r29
    286c:	cf 93       	push	r28
    286e:	cd b7       	in	r28, 0x3d	; 61
    2870:	de b7       	in	r29, 0x3e	; 62
	if(NULL!=TIMER2_ApfunISRfun[0])
    2872:	80 91 76 01 	lds	r24, 0x0176
    2876:	90 91 77 01 	lds	r25, 0x0177
    287a:	00 97       	sbiw	r24, 0x00	; 0
    287c:	49 f0       	breq	.+18     	; 0x2890 <__vector_4+0x48>
		TIMER2_ApfunISRfun[0](TIMER2_ApvidISRParameter[0]);
    287e:	e0 91 76 01 	lds	r30, 0x0176
    2882:	f0 91 77 01 	lds	r31, 0x0177
    2886:	80 91 7a 01 	lds	r24, 0x017A
    288a:	90 91 7b 01 	lds	r25, 0x017B
    288e:	09 95       	icall
}
    2890:	cf 91       	pop	r28
    2892:	df 91       	pop	r29
    2894:	ff 91       	pop	r31
    2896:	ef 91       	pop	r30
    2898:	bf 91       	pop	r27
    289a:	af 91       	pop	r26
    289c:	9f 91       	pop	r25
    289e:	8f 91       	pop	r24
    28a0:	7f 91       	pop	r23
    28a2:	6f 91       	pop	r22
    28a4:	5f 91       	pop	r21
    28a6:	4f 91       	pop	r20
    28a8:	3f 91       	pop	r19
    28aa:	2f 91       	pop	r18
    28ac:	0f 90       	pop	r0
    28ae:	0f be       	out	0x3f, r0	; 63
    28b0:	0f 90       	pop	r0
    28b2:	1f 90       	pop	r1
    28b4:	18 95       	reti

000028b6 <__vector_5>:

void __vector_5(void)__attribute__((signal));
void __vector_5(void)
{
    28b6:	1f 92       	push	r1
    28b8:	0f 92       	push	r0
    28ba:	0f b6       	in	r0, 0x3f	; 63
    28bc:	0f 92       	push	r0
    28be:	11 24       	eor	r1, r1
    28c0:	2f 93       	push	r18
    28c2:	3f 93       	push	r19
    28c4:	4f 93       	push	r20
    28c6:	5f 93       	push	r21
    28c8:	6f 93       	push	r22
    28ca:	7f 93       	push	r23
    28cc:	8f 93       	push	r24
    28ce:	9f 93       	push	r25
    28d0:	af 93       	push	r26
    28d2:	bf 93       	push	r27
    28d4:	ef 93       	push	r30
    28d6:	ff 93       	push	r31
    28d8:	df 93       	push	r29
    28da:	cf 93       	push	r28
    28dc:	cd b7       	in	r28, 0x3d	; 61
    28de:	de b7       	in	r29, 0x3e	; 62
	if(NULL!=TIMER2_ApfunISRfun[1])
    28e0:	80 91 78 01 	lds	r24, 0x0178
    28e4:	90 91 79 01 	lds	r25, 0x0179
    28e8:	00 97       	sbiw	r24, 0x00	; 0
    28ea:	49 f0       	breq	.+18     	; 0x28fe <__vector_5+0x48>
			TIMER2_ApfunISRfun[1](TIMER2_ApvidISRParameter[1]);
    28ec:	e0 91 78 01 	lds	r30, 0x0178
    28f0:	f0 91 79 01 	lds	r31, 0x0179
    28f4:	80 91 7c 01 	lds	r24, 0x017C
    28f8:	90 91 7d 01 	lds	r25, 0x017D
    28fc:	09 95       	icall
}
    28fe:	cf 91       	pop	r28
    2900:	df 91       	pop	r29
    2902:	ff 91       	pop	r31
    2904:	ef 91       	pop	r30
    2906:	bf 91       	pop	r27
    2908:	af 91       	pop	r26
    290a:	9f 91       	pop	r25
    290c:	8f 91       	pop	r24
    290e:	7f 91       	pop	r23
    2910:	6f 91       	pop	r22
    2912:	5f 91       	pop	r21
    2914:	4f 91       	pop	r20
    2916:	3f 91       	pop	r19
    2918:	2f 91       	pop	r18
    291a:	0f 90       	pop	r0
    291c:	0f be       	out	0x3f, r0	; 63
    291e:	0f 90       	pop	r0
    2920:	1f 90       	pop	r1
    2922:	18 95       	reti

00002924 <GIE_enuInit>:

#include "GIE_int.h"


ES_t GIE_enuInit(void)
{
    2924:	df 93       	push	r29
    2926:	cf 93       	push	r28
    2928:	cd b7       	in	r28, 0x3d	; 61
    292a:	de b7       	in	r29, 0x3e	; 62
	//SREG |=(1<<7); //in this case you must create the priv.h and add register address
	asm("SEI");
    292c:	78 94       	sei
	return ES_OK;
    292e:	80 e0       	ldi	r24, 0x00	; 0
}
    2930:	cf 91       	pop	r28
    2932:	df 91       	pop	r29
    2934:	08 95       	ret

00002936 <GIE_enuEnable>:

ES_t GIE_enuEnable(void)
{
    2936:	df 93       	push	r29
    2938:	cf 93       	push	r28
    293a:	cd b7       	in	r28, 0x3d	; 61
    293c:	de b7       	in	r29, 0x3e	; 62
	//SREG |=(1<<7);
	asm("SEI");
    293e:	78 94       	sei
	return ES_OK;
    2940:	80 e0       	ldi	r24, 0x00	; 0
}
    2942:	cf 91       	pop	r28
    2944:	df 91       	pop	r29
    2946:	08 95       	ret

00002948 <GIE_enuDisable>:

ES_t GIE_enuDisable(void)
{
    2948:	df 93       	push	r29
    294a:	cf 93       	push	r28
    294c:	cd b7       	in	r28, 0x3d	; 61
    294e:	de b7       	in	r29, 0x3e	; 62
	//SREG &= ~ (1<<7);
	asm("CLI");
    2950:	f8 94       	cli
	return ES_OK;
    2952:	80 e0       	ldi	r24, 0x00	; 0
}
    2954:	cf 91       	pop	r28
    2956:	df 91       	pop	r29
    2958:	08 95       	ret

0000295a <EXTI_enuInit>:
extern u8 EXTI_u8EXTINum;
extern EXTI_t EXTI_AstrEXTIConfig [];
static void (*EXTI_ApfunISRFun [ 3 ])(void*) = {NULL,NULL,NULL};
static void * EXTI_ApvidISRParameter [3] =	{NULL,NULL,NULL};
ES_t EXTI_enuInit(void)
{
    295a:	df 93       	push	r29
    295c:	cf 93       	push	r28
    295e:	cd b7       	in	r28, 0x3d	; 61
    2960:	de b7       	in	r29, 0x3e	; 62
    2962:	29 97       	sbiw	r28, 0x09	; 9
    2964:	0f b6       	in	r0, 0x3f	; 63
    2966:	f8 94       	cli
    2968:	de bf       	out	0x3e, r29	; 62
    296a:	0f be       	out	0x3f, r0	; 63
    296c:	cd bf       	out	0x3d, r28	; 61
	ES_t Local_enuErrorState= ES_NOK;
    296e:	81 e0       	ldi	r24, 0x01	; 1
    2970:	8a 83       	std	Y+2, r24	; 0x02
#if EXTI_NUM<=3

	for(u8 Local_u8Iter=0;Local_u8Iter<EXTI_u8EXTINum;Local_u8Iter++)
    2972:	19 82       	std	Y+1, r1	; 0x01
    2974:	8d c1       	rjmp	.+794    	; 0x2c90 <EXTI_enuInit+0x336>
	{

		if(EXTI_AstrEXTIConfig[Local_u8Iter].intPin==INT0)
    2976:	89 81       	ldd	r24, Y+1	; 0x01
    2978:	28 2f       	mov	r18, r24
    297a:	30 e0       	ldi	r19, 0x00	; 0
    297c:	c9 01       	movw	r24, r18
    297e:	88 0f       	add	r24, r24
    2980:	99 1f       	adc	r25, r25
    2982:	82 0f       	add	r24, r18
    2984:	93 1f       	adc	r25, r19
    2986:	fc 01       	movw	r30, r24
    2988:	e7 59       	subi	r30, 0x97	; 151
    298a:	fe 4f       	sbci	r31, 0xFE	; 254
    298c:	80 81       	ld	r24, Z
    298e:	88 23       	and	r24, r24
    2990:	09 f0       	breq	.+2      	; 0x2994 <EXTI_enuInit+0x3a>
    2992:	7e c0       	rjmp	.+252    	; 0x2a90 <EXTI_enuInit+0x136>
		{
			MCUCR &=~(3);
    2994:	a5 e5       	ldi	r26, 0x55	; 85
    2996:	b0 e0       	ldi	r27, 0x00	; 0
    2998:	e5 e5       	ldi	r30, 0x55	; 85
    299a:	f0 e0       	ldi	r31, 0x00	; 0
    299c:	80 81       	ld	r24, Z
    299e:	8c 7f       	andi	r24, 0xFC	; 252
    29a0:	8c 93       	st	X, r24
			switch(EXTI_AstrEXTIConfig[Local_u8Iter].senseLvl)
    29a2:	89 81       	ldd	r24, Y+1	; 0x01
    29a4:	28 2f       	mov	r18, r24
    29a6:	30 e0       	ldi	r19, 0x00	; 0
    29a8:	c9 01       	movw	r24, r18
    29aa:	88 0f       	add	r24, r24
    29ac:	99 1f       	adc	r25, r25
    29ae:	82 0f       	add	r24, r18
    29b0:	93 1f       	adc	r25, r19
    29b2:	fc 01       	movw	r30, r24
    29b4:	e5 59       	subi	r30, 0x95	; 149
    29b6:	fe 4f       	sbci	r31, 0xFE	; 254
    29b8:	80 81       	ld	r24, Z
    29ba:	28 2f       	mov	r18, r24
    29bc:	30 e0       	ldi	r19, 0x00	; 0
    29be:	39 87       	std	Y+9, r19	; 0x09
    29c0:	28 87       	std	Y+8, r18	; 0x08
    29c2:	88 85       	ldd	r24, Y+8	; 0x08
    29c4:	99 85       	ldd	r25, Y+9	; 0x09
    29c6:	8f 31       	cpi	r24, 0x1F	; 31
    29c8:	91 05       	cpc	r25, r1
    29ca:	f1 f0       	breq	.+60     	; 0x2a08 <EXTI_enuInit+0xae>
    29cc:	28 85       	ldd	r18, Y+8	; 0x08
    29ce:	39 85       	ldd	r19, Y+9	; 0x09
    29d0:	20 32       	cpi	r18, 0x20	; 32
    29d2:	31 05       	cpc	r19, r1
    29d4:	34 f4       	brge	.+12     	; 0x29e2 <EXTI_enuInit+0x88>
    29d6:	88 85       	ldd	r24, Y+8	; 0x08
    29d8:	99 85       	ldd	r25, Y+9	; 0x09
    29da:	87 31       	cpi	r24, 0x17	; 23
    29dc:	91 05       	cpc	r25, r1
    29de:	61 f0       	breq	.+24     	; 0x29f8 <EXTI_enuInit+0x9e>
    29e0:	23 c0       	rjmp	.+70     	; 0x2a28 <EXTI_enuInit+0xce>
    29e2:	28 85       	ldd	r18, Y+8	; 0x08
    29e4:	39 85       	ldd	r19, Y+9	; 0x09
    29e6:	21 34       	cpi	r18, 0x41	; 65
    29e8:	31 05       	cpc	r19, r1
    29ea:	19 f1       	breq	.+70     	; 0x2a32 <EXTI_enuInit+0xd8>
    29ec:	88 85       	ldd	r24, Y+8	; 0x08
    29ee:	99 85       	ldd	r25, Y+9	; 0x09
    29f0:	82 36       	cpi	r24, 0x62	; 98
    29f2:	91 05       	cpc	r25, r1
    29f4:	89 f0       	breq	.+34     	; 0x2a18 <EXTI_enuInit+0xbe>
    29f6:	18 c0       	rjmp	.+48     	; 0x2a28 <EXTI_enuInit+0xce>
			{

			case LOW_LEVEL:
				break;
			case ANY_LOGIC:
				MCUCR |= (1<<0);
    29f8:	a5 e5       	ldi	r26, 0x55	; 85
    29fa:	b0 e0       	ldi	r27, 0x00	; 0
    29fc:	e5 e5       	ldi	r30, 0x55	; 85
    29fe:	f0 e0       	ldi	r31, 0x00	; 0
    2a00:	80 81       	ld	r24, Z
    2a02:	81 60       	ori	r24, 0x01	; 1
    2a04:	8c 93       	st	X, r24
    2a06:	15 c0       	rjmp	.+42     	; 0x2a32 <EXTI_enuInit+0xd8>
				break;
			case FALLING:
				MCUCR |= (1<<1);
    2a08:	a5 e5       	ldi	r26, 0x55	; 85
    2a0a:	b0 e0       	ldi	r27, 0x00	; 0
    2a0c:	e5 e5       	ldi	r30, 0x55	; 85
    2a0e:	f0 e0       	ldi	r31, 0x00	; 0
    2a10:	80 81       	ld	r24, Z
    2a12:	82 60       	ori	r24, 0x02	; 2
    2a14:	8c 93       	st	X, r24
    2a16:	0d c0       	rjmp	.+26     	; 0x2a32 <EXTI_enuInit+0xd8>
				break;
			case RISING:
				MCUCR |= (3<<0);
    2a18:	a5 e5       	ldi	r26, 0x55	; 85
    2a1a:	b0 e0       	ldi	r27, 0x00	; 0
    2a1c:	e5 e5       	ldi	r30, 0x55	; 85
    2a1e:	f0 e0       	ldi	r31, 0x00	; 0
    2a20:	80 81       	ld	r24, Z
    2a22:	83 60       	ori	r24, 0x03	; 3
    2a24:	8c 93       	st	X, r24
    2a26:	05 c0       	rjmp	.+10     	; 0x2a32 <EXTI_enuInit+0xd8>
				break;
			default:
				Local_enuErrorState = ES_OUT_OF_RANGE ;
    2a28:	82 e0       	ldi	r24, 0x02	; 2
    2a2a:	8a 83       	std	Y+2, r24	; 0x02
				return Local_enuErrorState ;
    2a2c:	9a 81       	ldd	r25, Y+2	; 0x02
    2a2e:	9f 83       	std	Y+7, r25	; 0x07
    2a30:	37 c1       	rjmp	.+622    	; 0x2ca0 <EXTI_enuInit+0x346>
			}
			if(ENABLED == EXTI_AstrEXTIConfig[Local_u8Iter].IntMode)	GICR |=(1<<6);
    2a32:	89 81       	ldd	r24, Y+1	; 0x01
    2a34:	28 2f       	mov	r18, r24
    2a36:	30 e0       	ldi	r19, 0x00	; 0
    2a38:	c9 01       	movw	r24, r18
    2a3a:	88 0f       	add	r24, r24
    2a3c:	99 1f       	adc	r25, r25
    2a3e:	82 0f       	add	r24, r18
    2a40:	93 1f       	adc	r25, r19
    2a42:	fc 01       	movw	r30, r24
    2a44:	e6 59       	subi	r30, 0x96	; 150
    2a46:	fe 4f       	sbci	r31, 0xFE	; 254
    2a48:	80 81       	ld	r24, Z
    2a4a:	8f 32       	cpi	r24, 0x2F	; 47
    2a4c:	41 f4       	brne	.+16     	; 0x2a5e <EXTI_enuInit+0x104>
    2a4e:	ab e5       	ldi	r26, 0x5B	; 91
    2a50:	b0 e0       	ldi	r27, 0x00	; 0
    2a52:	eb e5       	ldi	r30, 0x5B	; 91
    2a54:	f0 e0       	ldi	r31, 0x00	; 0
    2a56:	80 81       	ld	r24, Z
    2a58:	80 64       	ori	r24, 0x40	; 64
    2a5a:	8c 93       	st	X, r24
    2a5c:	16 c1       	rjmp	.+556    	; 0x2c8a <EXTI_enuInit+0x330>

			else if(POLLING ==  EXTI_AstrEXTIConfig[Local_u8Iter].IntMode)	GICR &=~(1<<6);
    2a5e:	89 81       	ldd	r24, Y+1	; 0x01
    2a60:	28 2f       	mov	r18, r24
    2a62:	30 e0       	ldi	r19, 0x00	; 0
    2a64:	c9 01       	movw	r24, r18
    2a66:	88 0f       	add	r24, r24
    2a68:	99 1f       	adc	r25, r25
    2a6a:	82 0f       	add	r24, r18
    2a6c:	93 1f       	adc	r25, r19
    2a6e:	fc 01       	movw	r30, r24
    2a70:	e6 59       	subi	r30, 0x96	; 150
    2a72:	fe 4f       	sbci	r31, 0xFE	; 254
    2a74:	80 81       	ld	r24, Z
    2a76:	8c 35       	cpi	r24, 0x5C	; 92
    2a78:	41 f4       	brne	.+16     	; 0x2a8a <EXTI_enuInit+0x130>
    2a7a:	ab e5       	ldi	r26, 0x5B	; 91
    2a7c:	b0 e0       	ldi	r27, 0x00	; 0
    2a7e:	eb e5       	ldi	r30, 0x5B	; 91
    2a80:	f0 e0       	ldi	r31, 0x00	; 0
    2a82:	80 81       	ld	r24, Z
    2a84:	8f 7b       	andi	r24, 0xBF	; 191
    2a86:	8c 93       	st	X, r24
    2a88:	00 c1       	rjmp	.+512    	; 0x2c8a <EXTI_enuInit+0x330>
			else
			{
				Local_enuErrorState = ES_OUT_OF_RANGE ;
    2a8a:	82 e0       	ldi	r24, 0x02	; 2
    2a8c:	8a 83       	std	Y+2, r24	; 0x02
    2a8e:	06 c1       	rjmp	.+524    	; 0x2c9c <EXTI_enuInit+0x342>
				break ;
			}
		}
		else if(EXTI_AstrEXTIConfig[Local_u8Iter].intPin==INT1)
    2a90:	89 81       	ldd	r24, Y+1	; 0x01
    2a92:	28 2f       	mov	r18, r24
    2a94:	30 e0       	ldi	r19, 0x00	; 0
    2a96:	c9 01       	movw	r24, r18
    2a98:	88 0f       	add	r24, r24
    2a9a:	99 1f       	adc	r25, r25
    2a9c:	82 0f       	add	r24, r18
    2a9e:	93 1f       	adc	r25, r19
    2aa0:	fc 01       	movw	r30, r24
    2aa2:	e7 59       	subi	r30, 0x97	; 151
    2aa4:	fe 4f       	sbci	r31, 0xFE	; 254
    2aa6:	80 81       	ld	r24, Z
    2aa8:	81 30       	cpi	r24, 0x01	; 1
    2aaa:	09 f0       	breq	.+2      	; 0x2aae <EXTI_enuInit+0x154>
    2aac:	7e c0       	rjmp	.+252    	; 0x2baa <EXTI_enuInit+0x250>
		{
			MCUCR &=~(3<<2);
    2aae:	a5 e5       	ldi	r26, 0x55	; 85
    2ab0:	b0 e0       	ldi	r27, 0x00	; 0
    2ab2:	e5 e5       	ldi	r30, 0x55	; 85
    2ab4:	f0 e0       	ldi	r31, 0x00	; 0
    2ab6:	80 81       	ld	r24, Z
    2ab8:	83 7f       	andi	r24, 0xF3	; 243
    2aba:	8c 93       	st	X, r24
			switch(EXTI_AstrEXTIConfig[Local_u8Iter].senseLvl)
    2abc:	89 81       	ldd	r24, Y+1	; 0x01
    2abe:	28 2f       	mov	r18, r24
    2ac0:	30 e0       	ldi	r19, 0x00	; 0
    2ac2:	c9 01       	movw	r24, r18
    2ac4:	88 0f       	add	r24, r24
    2ac6:	99 1f       	adc	r25, r25
    2ac8:	82 0f       	add	r24, r18
    2aca:	93 1f       	adc	r25, r19
    2acc:	fc 01       	movw	r30, r24
    2ace:	e5 59       	subi	r30, 0x95	; 149
    2ad0:	fe 4f       	sbci	r31, 0xFE	; 254
    2ad2:	80 81       	ld	r24, Z
    2ad4:	28 2f       	mov	r18, r24
    2ad6:	30 e0       	ldi	r19, 0x00	; 0
    2ad8:	3e 83       	std	Y+6, r19	; 0x06
    2ada:	2d 83       	std	Y+5, r18	; 0x05
    2adc:	8d 81       	ldd	r24, Y+5	; 0x05
    2ade:	9e 81       	ldd	r25, Y+6	; 0x06
    2ae0:	8f 31       	cpi	r24, 0x1F	; 31
    2ae2:	91 05       	cpc	r25, r1
    2ae4:	f1 f0       	breq	.+60     	; 0x2b22 <EXTI_enuInit+0x1c8>
    2ae6:	2d 81       	ldd	r18, Y+5	; 0x05
    2ae8:	3e 81       	ldd	r19, Y+6	; 0x06
    2aea:	20 32       	cpi	r18, 0x20	; 32
    2aec:	31 05       	cpc	r19, r1
    2aee:	34 f4       	brge	.+12     	; 0x2afc <EXTI_enuInit+0x1a2>
    2af0:	8d 81       	ldd	r24, Y+5	; 0x05
    2af2:	9e 81       	ldd	r25, Y+6	; 0x06
    2af4:	87 31       	cpi	r24, 0x17	; 23
    2af6:	91 05       	cpc	r25, r1
    2af8:	61 f0       	breq	.+24     	; 0x2b12 <EXTI_enuInit+0x1b8>
    2afa:	23 c0       	rjmp	.+70     	; 0x2b42 <EXTI_enuInit+0x1e8>
    2afc:	2d 81       	ldd	r18, Y+5	; 0x05
    2afe:	3e 81       	ldd	r19, Y+6	; 0x06
    2b00:	21 34       	cpi	r18, 0x41	; 65
    2b02:	31 05       	cpc	r19, r1
    2b04:	19 f1       	breq	.+70     	; 0x2b4c <EXTI_enuInit+0x1f2>
    2b06:	8d 81       	ldd	r24, Y+5	; 0x05
    2b08:	9e 81       	ldd	r25, Y+6	; 0x06
    2b0a:	82 36       	cpi	r24, 0x62	; 98
    2b0c:	91 05       	cpc	r25, r1
    2b0e:	89 f0       	breq	.+34     	; 0x2b32 <EXTI_enuInit+0x1d8>
    2b10:	18 c0       	rjmp	.+48     	; 0x2b42 <EXTI_enuInit+0x1e8>
			{

			case LOW_LEVEL:
				break;
			case ANY_LOGIC:
				MCUCR |= (1<<2);
    2b12:	a5 e5       	ldi	r26, 0x55	; 85
    2b14:	b0 e0       	ldi	r27, 0x00	; 0
    2b16:	e5 e5       	ldi	r30, 0x55	; 85
    2b18:	f0 e0       	ldi	r31, 0x00	; 0
    2b1a:	80 81       	ld	r24, Z
    2b1c:	84 60       	ori	r24, 0x04	; 4
    2b1e:	8c 93       	st	X, r24
    2b20:	15 c0       	rjmp	.+42     	; 0x2b4c <EXTI_enuInit+0x1f2>
				break;
			case FALLING:
				MCUCR |= (1<<3);
    2b22:	a5 e5       	ldi	r26, 0x55	; 85
    2b24:	b0 e0       	ldi	r27, 0x00	; 0
    2b26:	e5 e5       	ldi	r30, 0x55	; 85
    2b28:	f0 e0       	ldi	r31, 0x00	; 0
    2b2a:	80 81       	ld	r24, Z
    2b2c:	88 60       	ori	r24, 0x08	; 8
    2b2e:	8c 93       	st	X, r24
    2b30:	0d c0       	rjmp	.+26     	; 0x2b4c <EXTI_enuInit+0x1f2>
				break;
			case RISING:
				MCUCR |= (3<<2);
    2b32:	a5 e5       	ldi	r26, 0x55	; 85
    2b34:	b0 e0       	ldi	r27, 0x00	; 0
    2b36:	e5 e5       	ldi	r30, 0x55	; 85
    2b38:	f0 e0       	ldi	r31, 0x00	; 0
    2b3a:	80 81       	ld	r24, Z
    2b3c:	8c 60       	ori	r24, 0x0C	; 12
    2b3e:	8c 93       	st	X, r24
    2b40:	05 c0       	rjmp	.+10     	; 0x2b4c <EXTI_enuInit+0x1f2>
				break;
			default:
				Local_enuErrorState = ES_OUT_OF_RANGE ;
    2b42:	82 e0       	ldi	r24, 0x02	; 2
    2b44:	8a 83       	std	Y+2, r24	; 0x02
				return Local_enuErrorState ;
    2b46:	9a 81       	ldd	r25, Y+2	; 0x02
    2b48:	9f 83       	std	Y+7, r25	; 0x07
    2b4a:	aa c0       	rjmp	.+340    	; 0x2ca0 <EXTI_enuInit+0x346>
			}
			if(ENABLED == EXTI_AstrEXTIConfig[Local_u8Iter].IntMode)	GICR |=(1<<7);
    2b4c:	89 81       	ldd	r24, Y+1	; 0x01
    2b4e:	28 2f       	mov	r18, r24
    2b50:	30 e0       	ldi	r19, 0x00	; 0
    2b52:	c9 01       	movw	r24, r18
    2b54:	88 0f       	add	r24, r24
    2b56:	99 1f       	adc	r25, r25
    2b58:	82 0f       	add	r24, r18
    2b5a:	93 1f       	adc	r25, r19
    2b5c:	fc 01       	movw	r30, r24
    2b5e:	e6 59       	subi	r30, 0x96	; 150
    2b60:	fe 4f       	sbci	r31, 0xFE	; 254
    2b62:	80 81       	ld	r24, Z
    2b64:	8f 32       	cpi	r24, 0x2F	; 47
    2b66:	41 f4       	brne	.+16     	; 0x2b78 <EXTI_enuInit+0x21e>
    2b68:	ab e5       	ldi	r26, 0x5B	; 91
    2b6a:	b0 e0       	ldi	r27, 0x00	; 0
    2b6c:	eb e5       	ldi	r30, 0x5B	; 91
    2b6e:	f0 e0       	ldi	r31, 0x00	; 0
    2b70:	80 81       	ld	r24, Z
    2b72:	80 68       	ori	r24, 0x80	; 128
    2b74:	8c 93       	st	X, r24
    2b76:	89 c0       	rjmp	.+274    	; 0x2c8a <EXTI_enuInit+0x330>
			else if(POLLING ==  EXTI_AstrEXTIConfig[Local_u8Iter].IntMode)	GICR &=~(1<<7);
    2b78:	89 81       	ldd	r24, Y+1	; 0x01
    2b7a:	28 2f       	mov	r18, r24
    2b7c:	30 e0       	ldi	r19, 0x00	; 0
    2b7e:	c9 01       	movw	r24, r18
    2b80:	88 0f       	add	r24, r24
    2b82:	99 1f       	adc	r25, r25
    2b84:	82 0f       	add	r24, r18
    2b86:	93 1f       	adc	r25, r19
    2b88:	fc 01       	movw	r30, r24
    2b8a:	e6 59       	subi	r30, 0x96	; 150
    2b8c:	fe 4f       	sbci	r31, 0xFE	; 254
    2b8e:	80 81       	ld	r24, Z
    2b90:	8c 35       	cpi	r24, 0x5C	; 92
    2b92:	41 f4       	brne	.+16     	; 0x2ba4 <EXTI_enuInit+0x24a>
    2b94:	ab e5       	ldi	r26, 0x5B	; 91
    2b96:	b0 e0       	ldi	r27, 0x00	; 0
    2b98:	eb e5       	ldi	r30, 0x5B	; 91
    2b9a:	f0 e0       	ldi	r31, 0x00	; 0
    2b9c:	80 81       	ld	r24, Z
    2b9e:	8f 77       	andi	r24, 0x7F	; 127
    2ba0:	8c 93       	st	X, r24
    2ba2:	73 c0       	rjmp	.+230    	; 0x2c8a <EXTI_enuInit+0x330>
			else
			{
				Local_enuErrorState = ES_OUT_OF_RANGE ;
    2ba4:	82 e0       	ldi	r24, 0x02	; 2
    2ba6:	8a 83       	std	Y+2, r24	; 0x02
    2ba8:	79 c0       	rjmp	.+242    	; 0x2c9c <EXTI_enuInit+0x342>
				break ;
			}
		}
		else if(EXTI_AstrEXTIConfig[Local_u8Iter].intPin==INT2)
    2baa:	89 81       	ldd	r24, Y+1	; 0x01
    2bac:	28 2f       	mov	r18, r24
    2bae:	30 e0       	ldi	r19, 0x00	; 0
    2bb0:	c9 01       	movw	r24, r18
    2bb2:	88 0f       	add	r24, r24
    2bb4:	99 1f       	adc	r25, r25
    2bb6:	82 0f       	add	r24, r18
    2bb8:	93 1f       	adc	r25, r19
    2bba:	fc 01       	movw	r30, r24
    2bbc:	e7 59       	subi	r30, 0x97	; 151
    2bbe:	fe 4f       	sbci	r31, 0xFE	; 254
    2bc0:	80 81       	ld	r24, Z
    2bc2:	82 30       	cpi	r24, 0x02	; 2
    2bc4:	09 f0       	breq	.+2      	; 0x2bc8 <EXTI_enuInit+0x26e>
    2bc6:	5f c0       	rjmp	.+190    	; 0x2c86 <EXTI_enuInit+0x32c>
		{
			switch(EXTI_AstrEXTIConfig[Local_u8Iter].senseLvl)
    2bc8:	89 81       	ldd	r24, Y+1	; 0x01
    2bca:	28 2f       	mov	r18, r24
    2bcc:	30 e0       	ldi	r19, 0x00	; 0
    2bce:	c9 01       	movw	r24, r18
    2bd0:	88 0f       	add	r24, r24
    2bd2:	99 1f       	adc	r25, r25
    2bd4:	82 0f       	add	r24, r18
    2bd6:	93 1f       	adc	r25, r19
    2bd8:	fc 01       	movw	r30, r24
    2bda:	e5 59       	subi	r30, 0x95	; 149
    2bdc:	fe 4f       	sbci	r31, 0xFE	; 254
    2bde:	80 81       	ld	r24, Z
    2be0:	28 2f       	mov	r18, r24
    2be2:	30 e0       	ldi	r19, 0x00	; 0
    2be4:	3c 83       	std	Y+4, r19	; 0x04
    2be6:	2b 83       	std	Y+3, r18	; 0x03
    2be8:	8b 81       	ldd	r24, Y+3	; 0x03
    2bea:	9c 81       	ldd	r25, Y+4	; 0x04
    2bec:	8f 31       	cpi	r24, 0x1F	; 31
    2bee:	91 05       	cpc	r25, r1
    2bf0:	31 f0       	breq	.+12     	; 0x2bfe <EXTI_enuInit+0x2a4>
    2bf2:	2b 81       	ldd	r18, Y+3	; 0x03
    2bf4:	3c 81       	ldd	r19, Y+4	; 0x04
    2bf6:	22 36       	cpi	r18, 0x62	; 98
    2bf8:	31 05       	cpc	r19, r1
    2bfa:	49 f0       	breq	.+18     	; 0x2c0e <EXTI_enuInit+0x2b4>
    2bfc:	10 c0       	rjmp	.+32     	; 0x2c1e <EXTI_enuInit+0x2c4>
			{
			case FALLING:
				MCUCSR &= ~(1<<6);
    2bfe:	a4 e5       	ldi	r26, 0x54	; 84
    2c00:	b0 e0       	ldi	r27, 0x00	; 0
    2c02:	e4 e5       	ldi	r30, 0x54	; 84
    2c04:	f0 e0       	ldi	r31, 0x00	; 0
    2c06:	80 81       	ld	r24, Z
    2c08:	8f 7b       	andi	r24, 0xBF	; 191
    2c0a:	8c 93       	st	X, r24
    2c0c:	0d c0       	rjmp	.+26     	; 0x2c28 <EXTI_enuInit+0x2ce>
				break;
			case RISING:
				MCUCSR |= (1<<6);
    2c0e:	a4 e5       	ldi	r26, 0x54	; 84
    2c10:	b0 e0       	ldi	r27, 0x00	; 0
    2c12:	e4 e5       	ldi	r30, 0x54	; 84
    2c14:	f0 e0       	ldi	r31, 0x00	; 0
    2c16:	80 81       	ld	r24, Z
    2c18:	80 64       	ori	r24, 0x40	; 64
    2c1a:	8c 93       	st	X, r24
    2c1c:	05 c0       	rjmp	.+10     	; 0x2c28 <EXTI_enuInit+0x2ce>
				break;
			default:
				Local_enuErrorState = ES_OUT_OF_RANGE ;
    2c1e:	82 e0       	ldi	r24, 0x02	; 2
    2c20:	8a 83       	std	Y+2, r24	; 0x02
				return Local_enuErrorState ;
    2c22:	3a 81       	ldd	r19, Y+2	; 0x02
    2c24:	3f 83       	std	Y+7, r19	; 0x07
    2c26:	3c c0       	rjmp	.+120    	; 0x2ca0 <EXTI_enuInit+0x346>
			}

			if(ENABLED == EXTI_AstrEXTIConfig[Local_u8Iter].IntMode)	GICR |=(1<<5);
    2c28:	89 81       	ldd	r24, Y+1	; 0x01
    2c2a:	28 2f       	mov	r18, r24
    2c2c:	30 e0       	ldi	r19, 0x00	; 0
    2c2e:	c9 01       	movw	r24, r18
    2c30:	88 0f       	add	r24, r24
    2c32:	99 1f       	adc	r25, r25
    2c34:	82 0f       	add	r24, r18
    2c36:	93 1f       	adc	r25, r19
    2c38:	fc 01       	movw	r30, r24
    2c3a:	e6 59       	subi	r30, 0x96	; 150
    2c3c:	fe 4f       	sbci	r31, 0xFE	; 254
    2c3e:	80 81       	ld	r24, Z
    2c40:	8f 32       	cpi	r24, 0x2F	; 47
    2c42:	41 f4       	brne	.+16     	; 0x2c54 <EXTI_enuInit+0x2fa>
    2c44:	ab e5       	ldi	r26, 0x5B	; 91
    2c46:	b0 e0       	ldi	r27, 0x00	; 0
    2c48:	eb e5       	ldi	r30, 0x5B	; 91
    2c4a:	f0 e0       	ldi	r31, 0x00	; 0
    2c4c:	80 81       	ld	r24, Z
    2c4e:	80 62       	ori	r24, 0x20	; 32
    2c50:	8c 93       	st	X, r24
    2c52:	1b c0       	rjmp	.+54     	; 0x2c8a <EXTI_enuInit+0x330>
			else if(POLLING ==  EXTI_AstrEXTIConfig[Local_u8Iter].IntMode)	GICR &=~(1<<5);
    2c54:	89 81       	ldd	r24, Y+1	; 0x01
    2c56:	28 2f       	mov	r18, r24
    2c58:	30 e0       	ldi	r19, 0x00	; 0
    2c5a:	c9 01       	movw	r24, r18
    2c5c:	88 0f       	add	r24, r24
    2c5e:	99 1f       	adc	r25, r25
    2c60:	82 0f       	add	r24, r18
    2c62:	93 1f       	adc	r25, r19
    2c64:	fc 01       	movw	r30, r24
    2c66:	e6 59       	subi	r30, 0x96	; 150
    2c68:	fe 4f       	sbci	r31, 0xFE	; 254
    2c6a:	80 81       	ld	r24, Z
    2c6c:	8c 35       	cpi	r24, 0x5C	; 92
    2c6e:	41 f4       	brne	.+16     	; 0x2c80 <EXTI_enuInit+0x326>
    2c70:	ab e5       	ldi	r26, 0x5B	; 91
    2c72:	b0 e0       	ldi	r27, 0x00	; 0
    2c74:	eb e5       	ldi	r30, 0x5B	; 91
    2c76:	f0 e0       	ldi	r31, 0x00	; 0
    2c78:	80 81       	ld	r24, Z
    2c7a:	8f 7d       	andi	r24, 0xDF	; 223
    2c7c:	8c 93       	st	X, r24
    2c7e:	05 c0       	rjmp	.+10     	; 0x2c8a <EXTI_enuInit+0x330>
			else
			{
				Local_enuErrorState = ES_OUT_OF_RANGE ;
    2c80:	82 e0       	ldi	r24, 0x02	; 2
    2c82:	8a 83       	std	Y+2, r24	; 0x02
    2c84:	0b c0       	rjmp	.+22     	; 0x2c9c <EXTI_enuInit+0x342>
				break ;
			}
		}
		else Local_enuErrorState=ES_OUT_OF_RANGE;
    2c86:	82 e0       	ldi	r24, 0x02	; 2
    2c88:	8a 83       	std	Y+2, r24	; 0x02
ES_t EXTI_enuInit(void)
{
	ES_t Local_enuErrorState= ES_NOK;
#if EXTI_NUM<=3

	for(u8 Local_u8Iter=0;Local_u8Iter<EXTI_u8EXTINum;Local_u8Iter++)
    2c8a:	89 81       	ldd	r24, Y+1	; 0x01
    2c8c:	8f 5f       	subi	r24, 0xFF	; 255
    2c8e:	89 83       	std	Y+1, r24	; 0x01
    2c90:	90 91 68 01 	lds	r25, 0x0168
    2c94:	89 81       	ldd	r24, Y+1	; 0x01
    2c96:	89 17       	cp	r24, r25
    2c98:	08 f4       	brcc	.+2      	; 0x2c9c <EXTI_enuInit+0x342>
    2c9a:	6d ce       	rjmp	.-806    	; 0x2976 <EXTI_enuInit+0x1c>
		else Local_enuErrorState=ES_OUT_OF_RANGE;
	}
#else
#error"the number of interrupt array is out of range "
#endif
	return Local_enuErrorState;
    2c9c:	8a 81       	ldd	r24, Y+2	; 0x02
    2c9e:	8f 83       	std	Y+7, r24	; 0x07
    2ca0:	8f 81       	ldd	r24, Y+7	; 0x07
}
    2ca2:	29 96       	adiw	r28, 0x09	; 9
    2ca4:	0f b6       	in	r0, 0x3f	; 63
    2ca6:	f8 94       	cli
    2ca8:	de bf       	out	0x3e, r29	; 62
    2caa:	0f be       	out	0x3f, r0	; 63
    2cac:	cd bf       	out	0x3d, r28	; 61
    2cae:	cf 91       	pop	r28
    2cb0:	df 91       	pop	r29
    2cb2:	08 95       	ret

00002cb4 <EXTI_enuSetSenseLevel>:

ES_t EXTI_enuSetSenseLevel(EXTI_t * Copy_pstrEXTIInfo , u8 Copy_u8SenseLevel)
{
    2cb4:	df 93       	push	r29
    2cb6:	cf 93       	push	r28
    2cb8:	cd b7       	in	r28, 0x3d	; 61
    2cba:	de b7       	in	r29, 0x3e	; 62
    2cbc:	2b 97       	sbiw	r28, 0x0b	; 11
    2cbe:	0f b6       	in	r0, 0x3f	; 63
    2cc0:	f8 94       	cli
    2cc2:	de bf       	out	0x3e, r29	; 62
    2cc4:	0f be       	out	0x3f, r0	; 63
    2cc6:	cd bf       	out	0x3d, r28	; 61
    2cc8:	9b 83       	std	Y+3, r25	; 0x03
    2cca:	8a 83       	std	Y+2, r24	; 0x02
    2ccc:	6c 83       	std	Y+4, r22	; 0x04
	ES_t Local_enuErrorState= ES_NOK;
    2cce:	81 e0       	ldi	r24, 0x01	; 1
    2cd0:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_pstrEXTIInfo!= NULL)
    2cd2:	8a 81       	ldd	r24, Y+2	; 0x02
    2cd4:	9b 81       	ldd	r25, Y+3	; 0x03
    2cd6:	00 97       	sbiw	r24, 0x00	; 0
    2cd8:	09 f4       	brne	.+2      	; 0x2cdc <EXTI_enuSetSenseLevel+0x28>
    2cda:	c1 c0       	rjmp	.+386    	; 0x2e5e <EXTI_enuSetSenseLevel+0x1aa>
	{

		if(Copy_pstrEXTIInfo->intPin == INT0)
    2cdc:	ea 81       	ldd	r30, Y+2	; 0x02
    2cde:	fb 81       	ldd	r31, Y+3	; 0x03
    2ce0:	80 81       	ld	r24, Z
    2ce2:	88 23       	and	r24, r24
    2ce4:	09 f0       	breq	.+2      	; 0x2ce8 <EXTI_enuSetSenseLevel+0x34>
    2ce6:	44 c0       	rjmp	.+136    	; 0x2d70 <EXTI_enuSetSenseLevel+0xbc>
		{
			MCUCR &=~(3);
    2ce8:	a5 e5       	ldi	r26, 0x55	; 85
    2cea:	b0 e0       	ldi	r27, 0x00	; 0
    2cec:	e5 e5       	ldi	r30, 0x55	; 85
    2cee:	f0 e0       	ldi	r31, 0x00	; 0
    2cf0:	80 81       	ld	r24, Z
    2cf2:	8c 7f       	andi	r24, 0xFC	; 252
    2cf4:	8c 93       	st	X, r24
			switch(Copy_u8SenseLevel)
    2cf6:	8c 81       	ldd	r24, Y+4	; 0x04
    2cf8:	28 2f       	mov	r18, r24
    2cfa:	30 e0       	ldi	r19, 0x00	; 0
    2cfc:	3b 87       	std	Y+11, r19	; 0x0b
    2cfe:	2a 87       	std	Y+10, r18	; 0x0a
    2d00:	8a 85       	ldd	r24, Y+10	; 0x0a
    2d02:	9b 85       	ldd	r25, Y+11	; 0x0b
    2d04:	8f 31       	cpi	r24, 0x1F	; 31
    2d06:	91 05       	cpc	r25, r1
    2d08:	f1 f0       	breq	.+60     	; 0x2d46 <EXTI_enuSetSenseLevel+0x92>
    2d0a:	2a 85       	ldd	r18, Y+10	; 0x0a
    2d0c:	3b 85       	ldd	r19, Y+11	; 0x0b
    2d0e:	20 32       	cpi	r18, 0x20	; 32
    2d10:	31 05       	cpc	r19, r1
    2d12:	34 f4       	brge	.+12     	; 0x2d20 <EXTI_enuSetSenseLevel+0x6c>
    2d14:	8a 85       	ldd	r24, Y+10	; 0x0a
    2d16:	9b 85       	ldd	r25, Y+11	; 0x0b
    2d18:	87 31       	cpi	r24, 0x17	; 23
    2d1a:	91 05       	cpc	r25, r1
    2d1c:	61 f0       	breq	.+24     	; 0x2d36 <EXTI_enuSetSenseLevel+0x82>
    2d1e:	23 c0       	rjmp	.+70     	; 0x2d66 <EXTI_enuSetSenseLevel+0xb2>
    2d20:	2a 85       	ldd	r18, Y+10	; 0x0a
    2d22:	3b 85       	ldd	r19, Y+11	; 0x0b
    2d24:	21 34       	cpi	r18, 0x41	; 65
    2d26:	31 05       	cpc	r19, r1
    2d28:	09 f1       	breq	.+66     	; 0x2d6c <EXTI_enuSetSenseLevel+0xb8>
    2d2a:	8a 85       	ldd	r24, Y+10	; 0x0a
    2d2c:	9b 85       	ldd	r25, Y+11	; 0x0b
    2d2e:	82 36       	cpi	r24, 0x62	; 98
    2d30:	91 05       	cpc	r25, r1
    2d32:	89 f0       	breq	.+34     	; 0x2d56 <EXTI_enuSetSenseLevel+0xa2>
    2d34:	18 c0       	rjmp	.+48     	; 0x2d66 <EXTI_enuSetSenseLevel+0xb2>
			{
			case LOW_LEVEL:
				break;
			case ANY_LOGIC:
				MCUCR |= (1<<0);
    2d36:	a5 e5       	ldi	r26, 0x55	; 85
    2d38:	b0 e0       	ldi	r27, 0x00	; 0
    2d3a:	e5 e5       	ldi	r30, 0x55	; 85
    2d3c:	f0 e0       	ldi	r31, 0x00	; 0
    2d3e:	80 81       	ld	r24, Z
    2d40:	81 60       	ori	r24, 0x01	; 1
    2d42:	8c 93       	st	X, r24
    2d44:	13 c0       	rjmp	.+38     	; 0x2d6c <EXTI_enuSetSenseLevel+0xb8>
				break;
			case FALLING:
				MCUCR |= (2<<0);
    2d46:	a5 e5       	ldi	r26, 0x55	; 85
    2d48:	b0 e0       	ldi	r27, 0x00	; 0
    2d4a:	e5 e5       	ldi	r30, 0x55	; 85
    2d4c:	f0 e0       	ldi	r31, 0x00	; 0
    2d4e:	80 81       	ld	r24, Z
    2d50:	82 60       	ori	r24, 0x02	; 2
    2d52:	8c 93       	st	X, r24
    2d54:	0b c0       	rjmp	.+22     	; 0x2d6c <EXTI_enuSetSenseLevel+0xb8>
				break;
			case RISING:
				MCUCR |= (3<<0);
    2d56:	a5 e5       	ldi	r26, 0x55	; 85
    2d58:	b0 e0       	ldi	r27, 0x00	; 0
    2d5a:	e5 e5       	ldi	r30, 0x55	; 85
    2d5c:	f0 e0       	ldi	r31, 0x00	; 0
    2d5e:	80 81       	ld	r24, Z
    2d60:	83 60       	ori	r24, 0x03	; 3
    2d62:	8c 93       	st	X, r24
    2d64:	03 c0       	rjmp	.+6      	; 0x2d6c <EXTI_enuSetSenseLevel+0xb8>
				break;
			default:
				return ES_OUT_OF_RANGE  ;
    2d66:	92 e0       	ldi	r25, 0x02	; 2
    2d68:	99 87       	std	Y+9, r25	; 0x09
    2d6a:	7d c0       	rjmp	.+250    	; 0x2e66 <EXTI_enuSetSenseLevel+0x1b2>
			}
			Local_enuErrorState=ES_OK;
    2d6c:	19 82       	std	Y+1, r1	; 0x01
    2d6e:	79 c0       	rjmp	.+242    	; 0x2e62 <EXTI_enuSetSenseLevel+0x1ae>
		}
		else if(Copy_pstrEXTIInfo->intPin == INT1)
    2d70:	ea 81       	ldd	r30, Y+2	; 0x02
    2d72:	fb 81       	ldd	r31, Y+3	; 0x03
    2d74:	80 81       	ld	r24, Z
    2d76:	81 30       	cpi	r24, 0x01	; 1
    2d78:	09 f0       	breq	.+2      	; 0x2d7c <EXTI_enuSetSenseLevel+0xc8>
    2d7a:	44 c0       	rjmp	.+136    	; 0x2e04 <EXTI_enuSetSenseLevel+0x150>
		{
			MCUCR &=~(3<<2);
    2d7c:	a5 e5       	ldi	r26, 0x55	; 85
    2d7e:	b0 e0       	ldi	r27, 0x00	; 0
    2d80:	e5 e5       	ldi	r30, 0x55	; 85
    2d82:	f0 e0       	ldi	r31, 0x00	; 0
    2d84:	80 81       	ld	r24, Z
    2d86:	83 7f       	andi	r24, 0xF3	; 243
    2d88:	8c 93       	st	X, r24
			switch(Copy_u8SenseLevel)
    2d8a:	8c 81       	ldd	r24, Y+4	; 0x04
    2d8c:	28 2f       	mov	r18, r24
    2d8e:	30 e0       	ldi	r19, 0x00	; 0
    2d90:	38 87       	std	Y+8, r19	; 0x08
    2d92:	2f 83       	std	Y+7, r18	; 0x07
    2d94:	8f 81       	ldd	r24, Y+7	; 0x07
    2d96:	98 85       	ldd	r25, Y+8	; 0x08
    2d98:	8f 31       	cpi	r24, 0x1F	; 31
    2d9a:	91 05       	cpc	r25, r1
    2d9c:	f1 f0       	breq	.+60     	; 0x2dda <EXTI_enuSetSenseLevel+0x126>
    2d9e:	2f 81       	ldd	r18, Y+7	; 0x07
    2da0:	38 85       	ldd	r19, Y+8	; 0x08
    2da2:	20 32       	cpi	r18, 0x20	; 32
    2da4:	31 05       	cpc	r19, r1
    2da6:	34 f4       	brge	.+12     	; 0x2db4 <EXTI_enuSetSenseLevel+0x100>
    2da8:	8f 81       	ldd	r24, Y+7	; 0x07
    2daa:	98 85       	ldd	r25, Y+8	; 0x08
    2dac:	87 31       	cpi	r24, 0x17	; 23
    2dae:	91 05       	cpc	r25, r1
    2db0:	61 f0       	breq	.+24     	; 0x2dca <EXTI_enuSetSenseLevel+0x116>
    2db2:	23 c0       	rjmp	.+70     	; 0x2dfa <EXTI_enuSetSenseLevel+0x146>
    2db4:	2f 81       	ldd	r18, Y+7	; 0x07
    2db6:	38 85       	ldd	r19, Y+8	; 0x08
    2db8:	21 34       	cpi	r18, 0x41	; 65
    2dba:	31 05       	cpc	r19, r1
    2dbc:	09 f1       	breq	.+66     	; 0x2e00 <EXTI_enuSetSenseLevel+0x14c>
    2dbe:	8f 81       	ldd	r24, Y+7	; 0x07
    2dc0:	98 85       	ldd	r25, Y+8	; 0x08
    2dc2:	82 36       	cpi	r24, 0x62	; 98
    2dc4:	91 05       	cpc	r25, r1
    2dc6:	89 f0       	breq	.+34     	; 0x2dea <EXTI_enuSetSenseLevel+0x136>
    2dc8:	18 c0       	rjmp	.+48     	; 0x2dfa <EXTI_enuSetSenseLevel+0x146>
			{

			case LOW_LEVEL:
				break;
			case ANY_LOGIC:
				MCUCR |= (1<<2);
    2dca:	a5 e5       	ldi	r26, 0x55	; 85
    2dcc:	b0 e0       	ldi	r27, 0x00	; 0
    2dce:	e5 e5       	ldi	r30, 0x55	; 85
    2dd0:	f0 e0       	ldi	r31, 0x00	; 0
    2dd2:	80 81       	ld	r24, Z
    2dd4:	84 60       	ori	r24, 0x04	; 4
    2dd6:	8c 93       	st	X, r24
    2dd8:	13 c0       	rjmp	.+38     	; 0x2e00 <EXTI_enuSetSenseLevel+0x14c>
				break;
			case FALLING:
				MCUCR |= (1<<3);
    2dda:	a5 e5       	ldi	r26, 0x55	; 85
    2ddc:	b0 e0       	ldi	r27, 0x00	; 0
    2dde:	e5 e5       	ldi	r30, 0x55	; 85
    2de0:	f0 e0       	ldi	r31, 0x00	; 0
    2de2:	80 81       	ld	r24, Z
    2de4:	88 60       	ori	r24, 0x08	; 8
    2de6:	8c 93       	st	X, r24
    2de8:	0b c0       	rjmp	.+22     	; 0x2e00 <EXTI_enuSetSenseLevel+0x14c>
				break;
			case RISING:
				MCUCR |= (3<<2);
    2dea:	a5 e5       	ldi	r26, 0x55	; 85
    2dec:	b0 e0       	ldi	r27, 0x00	; 0
    2dee:	e5 e5       	ldi	r30, 0x55	; 85
    2df0:	f0 e0       	ldi	r31, 0x00	; 0
    2df2:	80 81       	ld	r24, Z
    2df4:	8c 60       	ori	r24, 0x0C	; 12
    2df6:	8c 93       	st	X, r24
    2df8:	03 c0       	rjmp	.+6      	; 0x2e00 <EXTI_enuSetSenseLevel+0x14c>
				break;
			default:
				return  ES_OUT_OF_RANGE ;
    2dfa:	92 e0       	ldi	r25, 0x02	; 2
    2dfc:	99 87       	std	Y+9, r25	; 0x09
    2dfe:	33 c0       	rjmp	.+102    	; 0x2e66 <EXTI_enuSetSenseLevel+0x1b2>
			}
			Local_enuErrorState=ES_OK;
    2e00:	19 82       	std	Y+1, r1	; 0x01
    2e02:	2f c0       	rjmp	.+94     	; 0x2e62 <EXTI_enuSetSenseLevel+0x1ae>
		}
		else if(Copy_pstrEXTIInfo->intPin == INT2)
    2e04:	ea 81       	ldd	r30, Y+2	; 0x02
    2e06:	fb 81       	ldd	r31, Y+3	; 0x03
    2e08:	80 81       	ld	r24, Z
    2e0a:	82 30       	cpi	r24, 0x02	; 2
    2e0c:	29 f5       	brne	.+74     	; 0x2e58 <EXTI_enuSetSenseLevel+0x1a4>
		{
			switch(Copy_u8SenseLevel)
    2e0e:	8c 81       	ldd	r24, Y+4	; 0x04
    2e10:	28 2f       	mov	r18, r24
    2e12:	30 e0       	ldi	r19, 0x00	; 0
    2e14:	3e 83       	std	Y+6, r19	; 0x06
    2e16:	2d 83       	std	Y+5, r18	; 0x05
    2e18:	8d 81       	ldd	r24, Y+5	; 0x05
    2e1a:	9e 81       	ldd	r25, Y+6	; 0x06
    2e1c:	8f 31       	cpi	r24, 0x1F	; 31
    2e1e:	91 05       	cpc	r25, r1
    2e20:	31 f0       	breq	.+12     	; 0x2e2e <EXTI_enuSetSenseLevel+0x17a>
    2e22:	2d 81       	ldd	r18, Y+5	; 0x05
    2e24:	3e 81       	ldd	r19, Y+6	; 0x06
    2e26:	22 36       	cpi	r18, 0x62	; 98
    2e28:	31 05       	cpc	r19, r1
    2e2a:	49 f0       	breq	.+18     	; 0x2e3e <EXTI_enuSetSenseLevel+0x18a>
    2e2c:	10 c0       	rjmp	.+32     	; 0x2e4e <EXTI_enuSetSenseLevel+0x19a>
			{
			case FALLING:
				MCUCSR &= ~(1<<6);
    2e2e:	a4 e5       	ldi	r26, 0x54	; 84
    2e30:	b0 e0       	ldi	r27, 0x00	; 0
    2e32:	e4 e5       	ldi	r30, 0x54	; 84
    2e34:	f0 e0       	ldi	r31, 0x00	; 0
    2e36:	80 81       	ld	r24, Z
    2e38:	8f 7b       	andi	r24, 0xBF	; 191
    2e3a:	8c 93       	st	X, r24
    2e3c:	0b c0       	rjmp	.+22     	; 0x2e54 <EXTI_enuSetSenseLevel+0x1a0>
				break;
			case RISING:
				MCUCSR |= (1<<6);
    2e3e:	a4 e5       	ldi	r26, 0x54	; 84
    2e40:	b0 e0       	ldi	r27, 0x00	; 0
    2e42:	e4 e5       	ldi	r30, 0x54	; 84
    2e44:	f0 e0       	ldi	r31, 0x00	; 0
    2e46:	80 81       	ld	r24, Z
    2e48:	80 64       	ori	r24, 0x40	; 64
    2e4a:	8c 93       	st	X, r24
    2e4c:	03 c0       	rjmp	.+6      	; 0x2e54 <EXTI_enuSetSenseLevel+0x1a0>
				break;
			default:
				return ES_OUT_OF_RANGE ;
    2e4e:	32 e0       	ldi	r19, 0x02	; 2
    2e50:	39 87       	std	Y+9, r19	; 0x09
    2e52:	09 c0       	rjmp	.+18     	; 0x2e66 <EXTI_enuSetSenseLevel+0x1b2>
			}
			Local_enuErrorState=ES_OK;
    2e54:	19 82       	std	Y+1, r1	; 0x01
    2e56:	05 c0       	rjmp	.+10     	; 0x2e62 <EXTI_enuSetSenseLevel+0x1ae>
		}
		else	return ES_OUT_OF_RANGE;
    2e58:	82 e0       	ldi	r24, 0x02	; 2
    2e5a:	89 87       	std	Y+9, r24	; 0x09
    2e5c:	04 c0       	rjmp	.+8      	; 0x2e66 <EXTI_enuSetSenseLevel+0x1b2>

	}
	else Local_enuErrorState = ES_NULL_POINTER;
    2e5e:	83 e0       	ldi	r24, 0x03	; 3
    2e60:	89 83       	std	Y+1, r24	; 0x01
	return Local_enuErrorState;
    2e62:	99 81       	ldd	r25, Y+1	; 0x01
    2e64:	99 87       	std	Y+9, r25	; 0x09
    2e66:	89 85       	ldd	r24, Y+9	; 0x09
}
    2e68:	2b 96       	adiw	r28, 0x0b	; 11
    2e6a:	0f b6       	in	r0, 0x3f	; 63
    2e6c:	f8 94       	cli
    2e6e:	de bf       	out	0x3e, r29	; 62
    2e70:	0f be       	out	0x3f, r0	; 63
    2e72:	cd bf       	out	0x3d, r28	; 61
    2e74:	cf 91       	pop	r28
    2e76:	df 91       	pop	r29
    2e78:	08 95       	ret

00002e7a <EXTI_enuEnableInterrupt>:

ES_t EXTI_enuEnableInterrupt(EXTI_t * Copy_pstrEXTIInfo)
{
    2e7a:	df 93       	push	r29
    2e7c:	cf 93       	push	r28
    2e7e:	00 d0       	rcall	.+0      	; 0x2e80 <EXTI_enuEnableInterrupt+0x6>
    2e80:	00 d0       	rcall	.+0      	; 0x2e82 <EXTI_enuEnableInterrupt+0x8>
    2e82:	cd b7       	in	r28, 0x3d	; 61
    2e84:	de b7       	in	r29, 0x3e	; 62
    2e86:	9b 83       	std	Y+3, r25	; 0x03
    2e88:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState= ES_NOK;
    2e8a:	81 e0       	ldi	r24, 0x01	; 1
    2e8c:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_pstrEXTIInfo!= NULL)
    2e8e:	8a 81       	ldd	r24, Y+2	; 0x02
    2e90:	9b 81       	ldd	r25, Y+3	; 0x03
    2e92:	00 97       	sbiw	r24, 0x00	; 0
    2e94:	69 f1       	breq	.+90     	; 0x2ef0 <EXTI_enuEnableInterrupt+0x76>
	{
		if(Copy_pstrEXTIInfo->intPin == INT0)
    2e96:	ea 81       	ldd	r30, Y+2	; 0x02
    2e98:	fb 81       	ldd	r31, Y+3	; 0x03
    2e9a:	80 81       	ld	r24, Z
    2e9c:	88 23       	and	r24, r24
    2e9e:	49 f4       	brne	.+18     	; 0x2eb2 <EXTI_enuEnableInterrupt+0x38>
		{
			GICR |=(1<<6);
    2ea0:	ab e5       	ldi	r26, 0x5B	; 91
    2ea2:	b0 e0       	ldi	r27, 0x00	; 0
    2ea4:	eb e5       	ldi	r30, 0x5B	; 91
    2ea6:	f0 e0       	ldi	r31, 0x00	; 0
    2ea8:	80 81       	ld	r24, Z
    2eaa:	80 64       	ori	r24, 0x40	; 64
    2eac:	8c 93       	st	X, r24
			Local_enuErrorState = ES_OK ;
    2eae:	19 82       	std	Y+1, r1	; 0x01
    2eb0:	21 c0       	rjmp	.+66     	; 0x2ef4 <EXTI_enuEnableInterrupt+0x7a>
		}
		else if(Copy_pstrEXTIInfo->intPin == INT1)
    2eb2:	ea 81       	ldd	r30, Y+2	; 0x02
    2eb4:	fb 81       	ldd	r31, Y+3	; 0x03
    2eb6:	80 81       	ld	r24, Z
    2eb8:	81 30       	cpi	r24, 0x01	; 1
    2eba:	49 f4       	brne	.+18     	; 0x2ece <EXTI_enuEnableInterrupt+0x54>
		{
			GICR |=(1<<7);
    2ebc:	ab e5       	ldi	r26, 0x5B	; 91
    2ebe:	b0 e0       	ldi	r27, 0x00	; 0
    2ec0:	eb e5       	ldi	r30, 0x5B	; 91
    2ec2:	f0 e0       	ldi	r31, 0x00	; 0
    2ec4:	80 81       	ld	r24, Z
    2ec6:	80 68       	ori	r24, 0x80	; 128
    2ec8:	8c 93       	st	X, r24
			Local_enuErrorState = ES_OK ;
    2eca:	19 82       	std	Y+1, r1	; 0x01
    2ecc:	13 c0       	rjmp	.+38     	; 0x2ef4 <EXTI_enuEnableInterrupt+0x7a>
		}
		else if(Copy_pstrEXTIInfo->intPin == INT2)
    2ece:	ea 81       	ldd	r30, Y+2	; 0x02
    2ed0:	fb 81       	ldd	r31, Y+3	; 0x03
    2ed2:	80 81       	ld	r24, Z
    2ed4:	82 30       	cpi	r24, 0x02	; 2
    2ed6:	49 f4       	brne	.+18     	; 0x2eea <EXTI_enuEnableInterrupt+0x70>
		{
			GICR |=(1<<5);
    2ed8:	ab e5       	ldi	r26, 0x5B	; 91
    2eda:	b0 e0       	ldi	r27, 0x00	; 0
    2edc:	eb e5       	ldi	r30, 0x5B	; 91
    2ede:	f0 e0       	ldi	r31, 0x00	; 0
    2ee0:	80 81       	ld	r24, Z
    2ee2:	80 62       	ori	r24, 0x20	; 32
    2ee4:	8c 93       	st	X, r24
			Local_enuErrorState = ES_OK ;
    2ee6:	19 82       	std	Y+1, r1	; 0x01
    2ee8:	05 c0       	rjmp	.+10     	; 0x2ef4 <EXTI_enuEnableInterrupt+0x7a>
		}
		else	return ES_OUT_OF_RANGE;
    2eea:	82 e0       	ldi	r24, 0x02	; 2
    2eec:	8c 83       	std	Y+4, r24	; 0x04
    2eee:	04 c0       	rjmp	.+8      	; 0x2ef8 <EXTI_enuEnableInterrupt+0x7e>

	}
	else Local_enuErrorState = ES_NULL_POINTER;
    2ef0:	83 e0       	ldi	r24, 0x03	; 3
    2ef2:	89 83       	std	Y+1, r24	; 0x01

	return Local_enuErrorState;
    2ef4:	89 81       	ldd	r24, Y+1	; 0x01
    2ef6:	8c 83       	std	Y+4, r24	; 0x04
    2ef8:	8c 81       	ldd	r24, Y+4	; 0x04
}
    2efa:	0f 90       	pop	r0
    2efc:	0f 90       	pop	r0
    2efe:	0f 90       	pop	r0
    2f00:	0f 90       	pop	r0
    2f02:	cf 91       	pop	r28
    2f04:	df 91       	pop	r29
    2f06:	08 95       	ret

00002f08 <EXTI_enuDisableInterrupt>:


ES_t EXTI_enuDisableInterrupt(EXTI_t * Copy_pstrEXTIInfo)
{
    2f08:	df 93       	push	r29
    2f0a:	cf 93       	push	r28
    2f0c:	00 d0       	rcall	.+0      	; 0x2f0e <EXTI_enuDisableInterrupt+0x6>
    2f0e:	00 d0       	rcall	.+0      	; 0x2f10 <EXTI_enuDisableInterrupt+0x8>
    2f10:	cd b7       	in	r28, 0x3d	; 61
    2f12:	de b7       	in	r29, 0x3e	; 62
    2f14:	9b 83       	std	Y+3, r25	; 0x03
    2f16:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState= ES_NOK;
    2f18:	81 e0       	ldi	r24, 0x01	; 1
    2f1a:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_pstrEXTIInfo!= NULL)
    2f1c:	8a 81       	ldd	r24, Y+2	; 0x02
    2f1e:	9b 81       	ldd	r25, Y+3	; 0x03
    2f20:	00 97       	sbiw	r24, 0x00	; 0
    2f22:	69 f1       	breq	.+90     	; 0x2f7e <EXTI_enuDisableInterrupt+0x76>
	{
		if(Copy_pstrEXTIInfo->intPin == INT0)
    2f24:	ea 81       	ldd	r30, Y+2	; 0x02
    2f26:	fb 81       	ldd	r31, Y+3	; 0x03
    2f28:	80 81       	ld	r24, Z
    2f2a:	88 23       	and	r24, r24
    2f2c:	49 f4       	brne	.+18     	; 0x2f40 <EXTI_enuDisableInterrupt+0x38>
		{
			GICR &=~(1<<6);
    2f2e:	ab e5       	ldi	r26, 0x5B	; 91
    2f30:	b0 e0       	ldi	r27, 0x00	; 0
    2f32:	eb e5       	ldi	r30, 0x5B	; 91
    2f34:	f0 e0       	ldi	r31, 0x00	; 0
    2f36:	80 81       	ld	r24, Z
    2f38:	8f 7b       	andi	r24, 0xBF	; 191
    2f3a:	8c 93       	st	X, r24
			Local_enuErrorState = ES_OK ;
    2f3c:	19 82       	std	Y+1, r1	; 0x01
    2f3e:	21 c0       	rjmp	.+66     	; 0x2f82 <EXTI_enuDisableInterrupt+0x7a>
		}
		else if(Copy_pstrEXTIInfo->intPin == INT1)
    2f40:	ea 81       	ldd	r30, Y+2	; 0x02
    2f42:	fb 81       	ldd	r31, Y+3	; 0x03
    2f44:	80 81       	ld	r24, Z
    2f46:	81 30       	cpi	r24, 0x01	; 1
    2f48:	49 f4       	brne	.+18     	; 0x2f5c <EXTI_enuDisableInterrupt+0x54>
		{
			GICR &=~(1<<7);
    2f4a:	ab e5       	ldi	r26, 0x5B	; 91
    2f4c:	b0 e0       	ldi	r27, 0x00	; 0
    2f4e:	eb e5       	ldi	r30, 0x5B	; 91
    2f50:	f0 e0       	ldi	r31, 0x00	; 0
    2f52:	80 81       	ld	r24, Z
    2f54:	8f 77       	andi	r24, 0x7F	; 127
    2f56:	8c 93       	st	X, r24
			Local_enuErrorState = ES_OK ;
    2f58:	19 82       	std	Y+1, r1	; 0x01
    2f5a:	13 c0       	rjmp	.+38     	; 0x2f82 <EXTI_enuDisableInterrupt+0x7a>
		}
		else if(Copy_pstrEXTIInfo->intPin == INT2)
    2f5c:	ea 81       	ldd	r30, Y+2	; 0x02
    2f5e:	fb 81       	ldd	r31, Y+3	; 0x03
    2f60:	80 81       	ld	r24, Z
    2f62:	82 30       	cpi	r24, 0x02	; 2
    2f64:	49 f4       	brne	.+18     	; 0x2f78 <EXTI_enuDisableInterrupt+0x70>
		{
			GICR &=~(1<<5);
    2f66:	ab e5       	ldi	r26, 0x5B	; 91
    2f68:	b0 e0       	ldi	r27, 0x00	; 0
    2f6a:	eb e5       	ldi	r30, 0x5B	; 91
    2f6c:	f0 e0       	ldi	r31, 0x00	; 0
    2f6e:	80 81       	ld	r24, Z
    2f70:	8f 7d       	andi	r24, 0xDF	; 223
    2f72:	8c 93       	st	X, r24
			Local_enuErrorState = ES_OK ;
    2f74:	19 82       	std	Y+1, r1	; 0x01
    2f76:	05 c0       	rjmp	.+10     	; 0x2f82 <EXTI_enuDisableInterrupt+0x7a>
		}
		else	return ES_OUT_OF_RANGE;
    2f78:	82 e0       	ldi	r24, 0x02	; 2
    2f7a:	8c 83       	std	Y+4, r24	; 0x04
    2f7c:	04 c0       	rjmp	.+8      	; 0x2f86 <EXTI_enuDisableInterrupt+0x7e>

	}
	else Local_enuErrorState = ES_NULL_POINTER;
    2f7e:	83 e0       	ldi	r24, 0x03	; 3
    2f80:	89 83       	std	Y+1, r24	; 0x01


	return Local_enuErrorState;
    2f82:	89 81       	ldd	r24, Y+1	; 0x01
    2f84:	8c 83       	std	Y+4, r24	; 0x04
    2f86:	8c 81       	ldd	r24, Y+4	; 0x04
}
    2f88:	0f 90       	pop	r0
    2f8a:	0f 90       	pop	r0
    2f8c:	0f 90       	pop	r0
    2f8e:	0f 90       	pop	r0
    2f90:	cf 91       	pop	r28
    2f92:	df 91       	pop	r29
    2f94:	08 95       	ret

00002f96 <EXTI_enuCallBack>:

ES_t EXTI_enuCallBack(EXTI_t * Copy_pstrEXTIInfo , void (*Copy_pfunAppFun)(void*) , void * Copy_pvidParameter)
{
    2f96:	df 93       	push	r29
    2f98:	cf 93       	push	r28
    2f9a:	cd b7       	in	r28, 0x3d	; 61
    2f9c:	de b7       	in	r29, 0x3e	; 62
    2f9e:	27 97       	sbiw	r28, 0x07	; 7
    2fa0:	0f b6       	in	r0, 0x3f	; 63
    2fa2:	f8 94       	cli
    2fa4:	de bf       	out	0x3e, r29	; 62
    2fa6:	0f be       	out	0x3f, r0	; 63
    2fa8:	cd bf       	out	0x3d, r28	; 61
    2faa:	9b 83       	std	Y+3, r25	; 0x03
    2fac:	8a 83       	std	Y+2, r24	; 0x02
    2fae:	7d 83       	std	Y+5, r23	; 0x05
    2fb0:	6c 83       	std	Y+4, r22	; 0x04
    2fb2:	5f 83       	std	Y+7, r21	; 0x07
    2fb4:	4e 83       	std	Y+6, r20	; 0x06
	ES_t Local_enuErrorState= ES_NOK;
    2fb6:	81 e0       	ldi	r24, 0x01	; 1
    2fb8:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_pstrEXTIInfo!= NULL && Copy_pfunAppFun!= NULL)
    2fba:	8a 81       	ldd	r24, Y+2	; 0x02
    2fbc:	9b 81       	ldd	r25, Y+3	; 0x03
    2fbe:	00 97       	sbiw	r24, 0x00	; 0
    2fc0:	51 f1       	breq	.+84     	; 0x3016 <EXTI_enuCallBack+0x80>
    2fc2:	8c 81       	ldd	r24, Y+4	; 0x04
    2fc4:	9d 81       	ldd	r25, Y+5	; 0x05
    2fc6:	00 97       	sbiw	r24, 0x00	; 0
    2fc8:	31 f1       	breq	.+76     	; 0x3016 <EXTI_enuCallBack+0x80>
	{
		if(Copy_pstrEXTIInfo->intPin <=INT2)
    2fca:	ea 81       	ldd	r30, Y+2	; 0x02
    2fcc:	fb 81       	ldd	r31, Y+3	; 0x03
    2fce:	80 81       	ld	r24, Z
    2fd0:	83 30       	cpi	r24, 0x03	; 3
    2fd2:	f0 f4       	brcc	.+60     	; 0x3010 <EXTI_enuCallBack+0x7a>
		{
			Local_enuErrorState = ES_OK ;
    2fd4:	19 82       	std	Y+1, r1	; 0x01
			EXTI_ApfunISRFun[Copy_pstrEXTIInfo->intPin] = Copy_pfunAppFun ;
    2fd6:	ea 81       	ldd	r30, Y+2	; 0x02
    2fd8:	fb 81       	ldd	r31, Y+3	; 0x03
    2fda:	80 81       	ld	r24, Z
    2fdc:	88 2f       	mov	r24, r24
    2fde:	90 e0       	ldi	r25, 0x00	; 0
    2fe0:	88 0f       	add	r24, r24
    2fe2:	99 1f       	adc	r25, r25
    2fe4:	fc 01       	movw	r30, r24
    2fe6:	e2 58       	subi	r30, 0x82	; 130
    2fe8:	fe 4f       	sbci	r31, 0xFE	; 254
    2fea:	8c 81       	ldd	r24, Y+4	; 0x04
    2fec:	9d 81       	ldd	r25, Y+5	; 0x05
    2fee:	91 83       	std	Z+1, r25	; 0x01
    2ff0:	80 83       	st	Z, r24
			EXTI_ApvidISRParameter [Copy_pstrEXTIInfo->intPin] = Copy_pvidParameter ;
    2ff2:	ea 81       	ldd	r30, Y+2	; 0x02
    2ff4:	fb 81       	ldd	r31, Y+3	; 0x03
    2ff6:	80 81       	ld	r24, Z
    2ff8:	88 2f       	mov	r24, r24
    2ffa:	90 e0       	ldi	r25, 0x00	; 0
    2ffc:	88 0f       	add	r24, r24
    2ffe:	99 1f       	adc	r25, r25
    3000:	fc 01       	movw	r30, r24
    3002:	ec 57       	subi	r30, 0x7C	; 124
    3004:	fe 4f       	sbci	r31, 0xFE	; 254
    3006:	8e 81       	ldd	r24, Y+6	; 0x06
    3008:	9f 81       	ldd	r25, Y+7	; 0x07
    300a:	91 83       	std	Z+1, r25	; 0x01
    300c:	80 83       	st	Z, r24
    300e:	05 c0       	rjmp	.+10     	; 0x301a <EXTI_enuCallBack+0x84>
		}
		else Local_enuErrorState=ES_OUT_OF_RANGE;
    3010:	82 e0       	ldi	r24, 0x02	; 2
    3012:	89 83       	std	Y+1, r24	; 0x01
    3014:	02 c0       	rjmp	.+4      	; 0x301a <EXTI_enuCallBack+0x84>
	}
	else Local_enuErrorState = ES_NULL_POINTER ;
    3016:	83 e0       	ldi	r24, 0x03	; 3
    3018:	89 83       	std	Y+1, r24	; 0x01
	return Local_enuErrorState;
    301a:	89 81       	ldd	r24, Y+1	; 0x01
}
    301c:	27 96       	adiw	r28, 0x07	; 7
    301e:	0f b6       	in	r0, 0x3f	; 63
    3020:	f8 94       	cli
    3022:	de bf       	out	0x3e, r29	; 62
    3024:	0f be       	out	0x3f, r0	; 63
    3026:	cd bf       	out	0x3d, r28	; 61
    3028:	cf 91       	pop	r28
    302a:	df 91       	pop	r29
    302c:	08 95       	ret

0000302e <__vector_1>:
void __vector_1 (void)__attribute__((signal)); //int0
void __vector_2 (void)__attribute__((signal));	//int1
void __vector_3 (void)__attribute__((signal));	//int2

void __vector_1 (void)
{
    302e:	1f 92       	push	r1
    3030:	0f 92       	push	r0
    3032:	0f b6       	in	r0, 0x3f	; 63
    3034:	0f 92       	push	r0
    3036:	11 24       	eor	r1, r1
    3038:	2f 93       	push	r18
    303a:	3f 93       	push	r19
    303c:	4f 93       	push	r20
    303e:	5f 93       	push	r21
    3040:	6f 93       	push	r22
    3042:	7f 93       	push	r23
    3044:	8f 93       	push	r24
    3046:	9f 93       	push	r25
    3048:	af 93       	push	r26
    304a:	bf 93       	push	r27
    304c:	ef 93       	push	r30
    304e:	ff 93       	push	r31
    3050:	df 93       	push	r29
    3052:	cf 93       	push	r28
    3054:	cd b7       	in	r28, 0x3d	; 61
    3056:	de b7       	in	r29, 0x3e	; 62
	if(EXTI_ApfunISRFun[INT0]!=NULL)
    3058:	80 91 7e 01 	lds	r24, 0x017E
    305c:	90 91 7f 01 	lds	r25, 0x017F
    3060:	00 97       	sbiw	r24, 0x00	; 0
    3062:	49 f0       	breq	.+18     	; 0x3076 <__vector_1+0x48>
	{
		EXTI_ApfunISRFun[INT0](EXTI_ApvidISRParameter[INT0]);
    3064:	e0 91 7e 01 	lds	r30, 0x017E
    3068:	f0 91 7f 01 	lds	r31, 0x017F
    306c:	80 91 84 01 	lds	r24, 0x0184
    3070:	90 91 85 01 	lds	r25, 0x0185
    3074:	09 95       	icall
	}
}
    3076:	cf 91       	pop	r28
    3078:	df 91       	pop	r29
    307a:	ff 91       	pop	r31
    307c:	ef 91       	pop	r30
    307e:	bf 91       	pop	r27
    3080:	af 91       	pop	r26
    3082:	9f 91       	pop	r25
    3084:	8f 91       	pop	r24
    3086:	7f 91       	pop	r23
    3088:	6f 91       	pop	r22
    308a:	5f 91       	pop	r21
    308c:	4f 91       	pop	r20
    308e:	3f 91       	pop	r19
    3090:	2f 91       	pop	r18
    3092:	0f 90       	pop	r0
    3094:	0f be       	out	0x3f, r0	; 63
    3096:	0f 90       	pop	r0
    3098:	1f 90       	pop	r1
    309a:	18 95       	reti

0000309c <__vector_2>:

void __vector_2 (void)
{
    309c:	1f 92       	push	r1
    309e:	0f 92       	push	r0
    30a0:	0f b6       	in	r0, 0x3f	; 63
    30a2:	0f 92       	push	r0
    30a4:	11 24       	eor	r1, r1
    30a6:	2f 93       	push	r18
    30a8:	3f 93       	push	r19
    30aa:	4f 93       	push	r20
    30ac:	5f 93       	push	r21
    30ae:	6f 93       	push	r22
    30b0:	7f 93       	push	r23
    30b2:	8f 93       	push	r24
    30b4:	9f 93       	push	r25
    30b6:	af 93       	push	r26
    30b8:	bf 93       	push	r27
    30ba:	ef 93       	push	r30
    30bc:	ff 93       	push	r31
    30be:	df 93       	push	r29
    30c0:	cf 93       	push	r28
    30c2:	cd b7       	in	r28, 0x3d	; 61
    30c4:	de b7       	in	r29, 0x3e	; 62
	if(EXTI_ApfunISRFun[INT1]!=NULL)
    30c6:	80 91 80 01 	lds	r24, 0x0180
    30ca:	90 91 81 01 	lds	r25, 0x0181
    30ce:	00 97       	sbiw	r24, 0x00	; 0
    30d0:	49 f0       	breq	.+18     	; 0x30e4 <__vector_2+0x48>
	{
		EXTI_ApfunISRFun[INT1](EXTI_ApvidISRParameter[INT1]);
    30d2:	e0 91 80 01 	lds	r30, 0x0180
    30d6:	f0 91 81 01 	lds	r31, 0x0181
    30da:	80 91 86 01 	lds	r24, 0x0186
    30de:	90 91 87 01 	lds	r25, 0x0187
    30e2:	09 95       	icall
	}
}
    30e4:	cf 91       	pop	r28
    30e6:	df 91       	pop	r29
    30e8:	ff 91       	pop	r31
    30ea:	ef 91       	pop	r30
    30ec:	bf 91       	pop	r27
    30ee:	af 91       	pop	r26
    30f0:	9f 91       	pop	r25
    30f2:	8f 91       	pop	r24
    30f4:	7f 91       	pop	r23
    30f6:	6f 91       	pop	r22
    30f8:	5f 91       	pop	r21
    30fa:	4f 91       	pop	r20
    30fc:	3f 91       	pop	r19
    30fe:	2f 91       	pop	r18
    3100:	0f 90       	pop	r0
    3102:	0f be       	out	0x3f, r0	; 63
    3104:	0f 90       	pop	r0
    3106:	1f 90       	pop	r1
    3108:	18 95       	reti

0000310a <__vector_3>:
void __vector_3 (void)
{
    310a:	1f 92       	push	r1
    310c:	0f 92       	push	r0
    310e:	0f b6       	in	r0, 0x3f	; 63
    3110:	0f 92       	push	r0
    3112:	11 24       	eor	r1, r1
    3114:	2f 93       	push	r18
    3116:	3f 93       	push	r19
    3118:	4f 93       	push	r20
    311a:	5f 93       	push	r21
    311c:	6f 93       	push	r22
    311e:	7f 93       	push	r23
    3120:	8f 93       	push	r24
    3122:	9f 93       	push	r25
    3124:	af 93       	push	r26
    3126:	bf 93       	push	r27
    3128:	ef 93       	push	r30
    312a:	ff 93       	push	r31
    312c:	df 93       	push	r29
    312e:	cf 93       	push	r28
    3130:	cd b7       	in	r28, 0x3d	; 61
    3132:	de b7       	in	r29, 0x3e	; 62
	if(EXTI_ApfunISRFun[INT2]!=NULL)
    3134:	80 91 82 01 	lds	r24, 0x0182
    3138:	90 91 83 01 	lds	r25, 0x0183
    313c:	00 97       	sbiw	r24, 0x00	; 0
    313e:	49 f0       	breq	.+18     	; 0x3152 <__vector_3+0x48>
	{
		EXTI_ApfunISRFun[INT2](EXTI_ApvidISRParameter[INT2]);
    3140:	e0 91 82 01 	lds	r30, 0x0182
    3144:	f0 91 83 01 	lds	r31, 0x0183
    3148:	80 91 88 01 	lds	r24, 0x0188
    314c:	90 91 89 01 	lds	r25, 0x0189
    3150:	09 95       	icall
	}
}
    3152:	cf 91       	pop	r28
    3154:	df 91       	pop	r29
    3156:	ff 91       	pop	r31
    3158:	ef 91       	pop	r30
    315a:	bf 91       	pop	r27
    315c:	af 91       	pop	r26
    315e:	9f 91       	pop	r25
    3160:	8f 91       	pop	r24
    3162:	7f 91       	pop	r23
    3164:	6f 91       	pop	r22
    3166:	5f 91       	pop	r21
    3168:	4f 91       	pop	r20
    316a:	3f 91       	pop	r19
    316c:	2f 91       	pop	r18
    316e:	0f 90       	pop	r0
    3170:	0f be       	out	0x3f, r0	; 63
    3172:	0f 90       	pop	r0
    3174:	1f 90       	pop	r1
    3176:	18 95       	reti

00003178 <EEPROM_write>:


#include"EEPROM_priv.h"

ES_t EEPROM_write(u16 copy_u16address,u8 copy_u8data)
{
    3178:	df 93       	push	r29
    317a:	cf 93       	push	r28
    317c:	00 d0       	rcall	.+0      	; 0x317e <EEPROM_write+0x6>
    317e:	00 d0       	rcall	.+0      	; 0x3180 <EEPROM_write+0x8>
    3180:	cd b7       	in	r28, 0x3d	; 61
    3182:	de b7       	in	r29, 0x3e	; 62
    3184:	9b 83       	std	Y+3, r25	; 0x03
    3186:	8a 83       	std	Y+2, r24	; 0x02
    3188:	6c 83       	std	Y+4, r22	; 0x04
	ES_t local_enuErrorState=ES_NOK;
    318a:	81 e0       	ldi	r24, 0x01	; 1
    318c:	89 83       	std	Y+1, r24	; 0x01

	while (1 == ((EECR>>1)&1));
    318e:	ec e3       	ldi	r30, 0x3C	; 60
    3190:	f0 e0       	ldi	r31, 0x00	; 0
    3192:	80 81       	ld	r24, Z
    3194:	86 95       	lsr	r24
    3196:	88 2f       	mov	r24, r24
    3198:	90 e0       	ldi	r25, 0x00	; 0
    319a:	81 70       	andi	r24, 0x01	; 1
    319c:	90 70       	andi	r25, 0x00	; 0
    319e:	88 23       	and	r24, r24
    31a0:	b1 f7       	brne	.-20     	; 0x318e <EEPROM_write+0x16>
	EEARH= (u8)(copy_u16address>>8);
    31a2:	ef e3       	ldi	r30, 0x3F	; 63
    31a4:	f0 e0       	ldi	r31, 0x00	; 0
    31a6:	8a 81       	ldd	r24, Y+2	; 0x02
    31a8:	9b 81       	ldd	r25, Y+3	; 0x03
    31aa:	89 2f       	mov	r24, r25
    31ac:	99 27       	eor	r25, r25
    31ae:	80 83       	st	Z, r24
	EEARL= (u8) copy_u16address;
    31b0:	ee e3       	ldi	r30, 0x3E	; 62
    31b2:	f0 e0       	ldi	r31, 0x00	; 0
    31b4:	8a 81       	ldd	r24, Y+2	; 0x02
    31b6:	80 83       	st	Z, r24
	EEDR = copy_u8data;
    31b8:	ed e3       	ldi	r30, 0x3D	; 61
    31ba:	f0 e0       	ldi	r31, 0x00	; 0
    31bc:	8c 81       	ldd	r24, Y+4	; 0x04
    31be:	80 83       	st	Z, r24
	EECR|= (1<<2);
    31c0:	ac e3       	ldi	r26, 0x3C	; 60
    31c2:	b0 e0       	ldi	r27, 0x00	; 0
    31c4:	ec e3       	ldi	r30, 0x3C	; 60
    31c6:	f0 e0       	ldi	r31, 0x00	; 0
    31c8:	80 81       	ld	r24, Z
    31ca:	84 60       	ori	r24, 0x04	; 4
    31cc:	8c 93       	st	X, r24
	asm("SBI 0x1C,2");
    31ce:	e2 9a       	sbi	0x1c, 2	; 28
	asm("SBI 0x1C,1");
    31d0:	e1 9a       	sbi	0x1c, 1	; 28
	local_enuErrorState=ES_OK;
    31d2:	19 82       	std	Y+1, r1	; 0x01
	return local_enuErrorState;
    31d4:	89 81       	ldd	r24, Y+1	; 0x01
}
    31d6:	0f 90       	pop	r0
    31d8:	0f 90       	pop	r0
    31da:	0f 90       	pop	r0
    31dc:	0f 90       	pop	r0
    31de:	cf 91       	pop	r28
    31e0:	df 91       	pop	r29
    31e2:	08 95       	ret

000031e4 <EEPROM_read>:
ES_t EEPROM_read(u16 copy_u16address,u8 *copy_u8data){
    31e4:	df 93       	push	r29
    31e6:	cf 93       	push	r28
    31e8:	00 d0       	rcall	.+0      	; 0x31ea <EEPROM_read+0x6>
    31ea:	00 d0       	rcall	.+0      	; 0x31ec <EEPROM_read+0x8>
    31ec:	0f 92       	push	r0
    31ee:	cd b7       	in	r28, 0x3d	; 61
    31f0:	de b7       	in	r29, 0x3e	; 62
    31f2:	9b 83       	std	Y+3, r25	; 0x03
    31f4:	8a 83       	std	Y+2, r24	; 0x02
    31f6:	7d 83       	std	Y+5, r23	; 0x05
    31f8:	6c 83       	std	Y+4, r22	; 0x04
	ES_t local_enuErrorState=ES_NOK;
    31fa:	81 e0       	ldi	r24, 0x01	; 1
    31fc:	89 83       	std	Y+1, r24	; 0x01

	while (1 == ((EECR>>1)&1));
    31fe:	ec e3       	ldi	r30, 0x3C	; 60
    3200:	f0 e0       	ldi	r31, 0x00	; 0
    3202:	80 81       	ld	r24, Z
    3204:	86 95       	lsr	r24
    3206:	88 2f       	mov	r24, r24
    3208:	90 e0       	ldi	r25, 0x00	; 0
    320a:	81 70       	andi	r24, 0x01	; 1
    320c:	90 70       	andi	r25, 0x00	; 0
    320e:	88 23       	and	r24, r24
    3210:	b1 f7       	brne	.-20     	; 0x31fe <EEPROM_read+0x1a>
	EEARH= (u8)(copy_u16address>>8);
    3212:	ef e3       	ldi	r30, 0x3F	; 63
    3214:	f0 e0       	ldi	r31, 0x00	; 0
    3216:	8a 81       	ldd	r24, Y+2	; 0x02
    3218:	9b 81       	ldd	r25, Y+3	; 0x03
    321a:	89 2f       	mov	r24, r25
    321c:	99 27       	eor	r25, r25
    321e:	80 83       	st	Z, r24
	EEARL= (u8) copy_u16address;
    3220:	ee e3       	ldi	r30, 0x3E	; 62
    3222:	f0 e0       	ldi	r31, 0x00	; 0
    3224:	8a 81       	ldd	r24, Y+2	; 0x02
    3226:	80 83       	st	Z, r24
	EECR|= (1<<0);
    3228:	ac e3       	ldi	r26, 0x3C	; 60
    322a:	b0 e0       	ldi	r27, 0x00	; 0
    322c:	ec e3       	ldi	r30, 0x3C	; 60
    322e:	f0 e0       	ldi	r31, 0x00	; 0
    3230:	80 81       	ld	r24, Z
    3232:	81 60       	ori	r24, 0x01	; 1
    3234:	8c 93       	st	X, r24
	*copy_u8data = EEDR;
    3236:	ed e3       	ldi	r30, 0x3D	; 61
    3238:	f0 e0       	ldi	r31, 0x00	; 0
    323a:	80 81       	ld	r24, Z
    323c:	ec 81       	ldd	r30, Y+4	; 0x04
    323e:	fd 81       	ldd	r31, Y+5	; 0x05
    3240:	80 83       	st	Z, r24

	return local_enuErrorState;
    3242:	89 81       	ldd	r24, Y+1	; 0x01
}
    3244:	0f 90       	pop	r0
    3246:	0f 90       	pop	r0
    3248:	0f 90       	pop	r0
    324a:	0f 90       	pop	r0
    324c:	0f 90       	pop	r0
    324e:	cf 91       	pop	r28
    3250:	df 91       	pop	r29
    3252:	08 95       	ret

00003254 <EEPROM_ADDString>:
ES_t EEPROM_ADDString(u16 Copy_u16address,u8 *copy_u8data)
{
    3254:	df 93       	push	r29
    3256:	cf 93       	push	r28
    3258:	cd b7       	in	r28, 0x3d	; 61
    325a:	de b7       	in	r29, 0x3e	; 62
    325c:	27 97       	sbiw	r28, 0x07	; 7
    325e:	0f b6       	in	r0, 0x3f	; 63
    3260:	f8 94       	cli
    3262:	de bf       	out	0x3e, r29	; 62
    3264:	0f be       	out	0x3f, r0	; 63
    3266:	cd bf       	out	0x3d, r28	; 61
    3268:	9c 83       	std	Y+4, r25	; 0x04
    326a:	8b 83       	std	Y+3, r24	; 0x03
    326c:	7e 83       	std	Y+6, r23	; 0x06
    326e:	6d 83       	std	Y+5, r22	; 0x05
	ES_t local_enuErrorState=ES_NOK;
    3270:	81 e0       	ldi	r24, 0x01	; 1
    3272:	8a 83       	std	Y+2, r24	; 0x02
	u8 i = 0;
    3274:	19 82       	std	Y+1, r1	; 0x01
	do
	{
		while (1 == ((EECR>>1)&1));
    3276:	ec e3       	ldi	r30, 0x3C	; 60
    3278:	f0 e0       	ldi	r31, 0x00	; 0
    327a:	80 81       	ld	r24, Z
    327c:	86 95       	lsr	r24
    327e:	88 2f       	mov	r24, r24
    3280:	90 e0       	ldi	r25, 0x00	; 0
    3282:	81 70       	andi	r24, 0x01	; 1
    3284:	90 70       	andi	r25, 0x00	; 0
    3286:	88 23       	and	r24, r24
    3288:	b1 f7       	brne	.-20     	; 0x3276 <EEPROM_ADDString+0x22>
		EEARH= (u8)(Copy_u16address+i>>8);
    328a:	ef e3       	ldi	r30, 0x3F	; 63
    328c:	f0 e0       	ldi	r31, 0x00	; 0
    328e:	89 81       	ldd	r24, Y+1	; 0x01
    3290:	28 2f       	mov	r18, r24
    3292:	30 e0       	ldi	r19, 0x00	; 0
    3294:	8b 81       	ldd	r24, Y+3	; 0x03
    3296:	9c 81       	ldd	r25, Y+4	; 0x04
    3298:	82 0f       	add	r24, r18
    329a:	93 1f       	adc	r25, r19
    329c:	89 2f       	mov	r24, r25
    329e:	99 27       	eor	r25, r25
    32a0:	80 83       	st	Z, r24
		EEARL= (u8) Copy_u16address+i;
    32a2:	ee e3       	ldi	r30, 0x3E	; 62
    32a4:	f0 e0       	ldi	r31, 0x00	; 0
    32a6:	9b 81       	ldd	r25, Y+3	; 0x03
    32a8:	89 81       	ldd	r24, Y+1	; 0x01
    32aa:	89 0f       	add	r24, r25
    32ac:	80 83       	st	Z, r24
		EEDR = copy_u8data[i];
    32ae:	ad e3       	ldi	r26, 0x3D	; 61
    32b0:	b0 e0       	ldi	r27, 0x00	; 0
    32b2:	89 81       	ldd	r24, Y+1	; 0x01
    32b4:	28 2f       	mov	r18, r24
    32b6:	30 e0       	ldi	r19, 0x00	; 0
    32b8:	8d 81       	ldd	r24, Y+5	; 0x05
    32ba:	9e 81       	ldd	r25, Y+6	; 0x06
    32bc:	fc 01       	movw	r30, r24
    32be:	e2 0f       	add	r30, r18
    32c0:	f3 1f       	adc	r31, r19
    32c2:	80 81       	ld	r24, Z
    32c4:	8c 93       	st	X, r24
		EECR|= (1<<2);
    32c6:	ac e3       	ldi	r26, 0x3C	; 60
    32c8:	b0 e0       	ldi	r27, 0x00	; 0
    32ca:	ec e3       	ldi	r30, 0x3C	; 60
    32cc:	f0 e0       	ldi	r31, 0x00	; 0
    32ce:	80 81       	ld	r24, Z
    32d0:	84 60       	ori	r24, 0x04	; 4
    32d2:	8c 93       	st	X, r24

		asm("SBI 0x1C,2");
    32d4:	e2 9a       	sbi	0x1c, 2	; 28
		asm("SBI 0x1C,1");
    32d6:	e1 9a       	sbi	0x1c, 1	; 28
	}while(copy_u8data[i++]);
    32d8:	89 81       	ldd	r24, Y+1	; 0x01
    32da:	28 2f       	mov	r18, r24
    32dc:	30 e0       	ldi	r19, 0x00	; 0
    32de:	8d 81       	ldd	r24, Y+5	; 0x05
    32e0:	9e 81       	ldd	r25, Y+6	; 0x06
    32e2:	fc 01       	movw	r30, r24
    32e4:	e2 0f       	add	r30, r18
    32e6:	f3 1f       	adc	r31, r19
    32e8:	80 81       	ld	r24, Z
    32ea:	8f 83       	std	Y+7, r24	; 0x07
    32ec:	8f 81       	ldd	r24, Y+7	; 0x07
    32ee:	88 23       	and	r24, r24
    32f0:	11 f0       	breq	.+4      	; 0x32f6 <EEPROM_ADDString+0xa2>
    32f2:	81 e0       	ldi	r24, 0x01	; 1
    32f4:	8f 83       	std	Y+7, r24	; 0x07
    32f6:	8f 81       	ldd	r24, Y+7	; 0x07
    32f8:	99 81       	ldd	r25, Y+1	; 0x01
    32fa:	9f 5f       	subi	r25, 0xFF	; 255
    32fc:	99 83       	std	Y+1, r25	; 0x01
    32fe:	88 23       	and	r24, r24
    3300:	09 f0       	breq	.+2      	; 0x3304 <EEPROM_ADDString+0xb0>
    3302:	b9 cf       	rjmp	.-142    	; 0x3276 <EEPROM_ADDString+0x22>
		return local_enuErrorState;
    3304:	8a 81       	ldd	r24, Y+2	; 0x02
}
    3306:	27 96       	adiw	r28, 0x07	; 7
    3308:	0f b6       	in	r0, 0x3f	; 63
    330a:	f8 94       	cli
    330c:	de bf       	out	0x3e, r29	; 62
    330e:	0f be       	out	0x3f, r0	; 63
    3310:	cd bf       	out	0x3d, r28	; 61
    3312:	cf 91       	pop	r28
    3314:	df 91       	pop	r29
    3316:	08 95       	ret

00003318 <EEPROM_ReadString>:

ES_t EEPROM_ReadString(u16 Copy_u16address,u8 *copy_u8data)
{
    3318:	df 93       	push	r29
    331a:	cf 93       	push	r28
    331c:	00 d0       	rcall	.+0      	; 0x331e <EEPROM_ReadString+0x6>
    331e:	00 d0       	rcall	.+0      	; 0x3320 <EEPROM_ReadString+0x8>
    3320:	00 d0       	rcall	.+0      	; 0x3322 <EEPROM_ReadString+0xa>
    3322:	cd b7       	in	r28, 0x3d	; 61
    3324:	de b7       	in	r29, 0x3e	; 62
    3326:	9b 83       	std	Y+3, r25	; 0x03
    3328:	8a 83       	std	Y+2, r24	; 0x02
    332a:	7d 83       	std	Y+5, r23	; 0x05
    332c:	6c 83       	std	Y+4, r22	; 0x04
	u8 i = 0;
    332e:	19 82       	std	Y+1, r1	; 0x01
		do
		{
			while (1 == ((EECR>>1)&1));
    3330:	ec e3       	ldi	r30, 0x3C	; 60
    3332:	f0 e0       	ldi	r31, 0x00	; 0
    3334:	80 81       	ld	r24, Z
    3336:	86 95       	lsr	r24
    3338:	88 2f       	mov	r24, r24
    333a:	90 e0       	ldi	r25, 0x00	; 0
    333c:	81 70       	andi	r24, 0x01	; 1
    333e:	90 70       	andi	r25, 0x00	; 0
    3340:	88 23       	and	r24, r24
    3342:	b1 f7       	brne	.-20     	; 0x3330 <EEPROM_ReadString+0x18>
			EEARH= (u8)(Copy_u16address+i>>8);
    3344:	ef e3       	ldi	r30, 0x3F	; 63
    3346:	f0 e0       	ldi	r31, 0x00	; 0
    3348:	89 81       	ldd	r24, Y+1	; 0x01
    334a:	28 2f       	mov	r18, r24
    334c:	30 e0       	ldi	r19, 0x00	; 0
    334e:	8a 81       	ldd	r24, Y+2	; 0x02
    3350:	9b 81       	ldd	r25, Y+3	; 0x03
    3352:	82 0f       	add	r24, r18
    3354:	93 1f       	adc	r25, r19
    3356:	89 2f       	mov	r24, r25
    3358:	99 27       	eor	r25, r25
    335a:	80 83       	st	Z, r24
			EEARL= (u8) Copy_u16address+i;
    335c:	ee e3       	ldi	r30, 0x3E	; 62
    335e:	f0 e0       	ldi	r31, 0x00	; 0
    3360:	9a 81       	ldd	r25, Y+2	; 0x02
    3362:	89 81       	ldd	r24, Y+1	; 0x01
    3364:	89 0f       	add	r24, r25
    3366:	80 83       	st	Z, r24
			EECR|= (1<<0);
    3368:	ac e3       	ldi	r26, 0x3C	; 60
    336a:	b0 e0       	ldi	r27, 0x00	; 0
    336c:	ec e3       	ldi	r30, 0x3C	; 60
    336e:	f0 e0       	ldi	r31, 0x00	; 0
    3370:	80 81       	ld	r24, Z
    3372:	81 60       	ori	r24, 0x01	; 1
    3374:	8c 93       	st	X, r24
			copy_u8data[i] = EEDR;
    3376:	89 81       	ldd	r24, Y+1	; 0x01
    3378:	28 2f       	mov	r18, r24
    337a:	30 e0       	ldi	r19, 0x00	; 0
    337c:	8c 81       	ldd	r24, Y+4	; 0x04
    337e:	9d 81       	ldd	r25, Y+5	; 0x05
    3380:	dc 01       	movw	r26, r24
    3382:	a2 0f       	add	r26, r18
    3384:	b3 1f       	adc	r27, r19
    3386:	ed e3       	ldi	r30, 0x3D	; 61
    3388:	f0 e0       	ldi	r31, 0x00	; 0
    338a:	80 81       	ld	r24, Z
    338c:	8c 93       	st	X, r24
		}while(copy_u8data[i++]);
    338e:	89 81       	ldd	r24, Y+1	; 0x01
    3390:	28 2f       	mov	r18, r24
    3392:	30 e0       	ldi	r19, 0x00	; 0
    3394:	8c 81       	ldd	r24, Y+4	; 0x04
    3396:	9d 81       	ldd	r25, Y+5	; 0x05
    3398:	fc 01       	movw	r30, r24
    339a:	e2 0f       	add	r30, r18
    339c:	f3 1f       	adc	r31, r19
    339e:	80 81       	ld	r24, Z
    33a0:	8e 83       	std	Y+6, r24	; 0x06
    33a2:	8e 81       	ldd	r24, Y+6	; 0x06
    33a4:	88 23       	and	r24, r24
    33a6:	11 f0       	breq	.+4      	; 0x33ac <EEPROM_ReadString+0x94>
    33a8:	81 e0       	ldi	r24, 0x01	; 1
    33aa:	8e 83       	std	Y+6, r24	; 0x06
    33ac:	8e 81       	ldd	r24, Y+6	; 0x06
    33ae:	99 81       	ldd	r25, Y+1	; 0x01
    33b0:	9f 5f       	subi	r25, 0xFF	; 255
    33b2:	99 83       	std	Y+1, r25	; 0x01
    33b4:	88 23       	and	r24, r24
    33b6:	09 f0       	breq	.+2      	; 0x33ba <EEPROM_ReadString+0xa2>
    33b8:	bb cf       	rjmp	.-138    	; 0x3330 <EEPROM_ReadString+0x18>
		return ES_OK;
    33ba:	80 e0       	ldi	r24, 0x00	; 0
}
    33bc:	26 96       	adiw	r28, 0x06	; 6
    33be:	0f b6       	in	r0, 0x3f	; 63
    33c0:	f8 94       	cli
    33c2:	de bf       	out	0x3e, r29	; 62
    33c4:	0f be       	out	0x3f, r0	; 63
    33c6:	cd bf       	out	0x3d, r28	; 61
    33c8:	cf 91       	pop	r28
    33ca:	df 91       	pop	r29
    33cc:	08 95       	ret

000033ce <EEPROM_intEnable>:



ES_t EEPROM_intEnable(void){
    33ce:	df 93       	push	r29
    33d0:	cf 93       	push	r28
    33d2:	0f 92       	push	r0
    33d4:	cd b7       	in	r28, 0x3d	; 61
    33d6:	de b7       	in	r29, 0x3e	; 62
	ES_t local_enuErrorState=ES_NOK;
    33d8:	81 e0       	ldi	r24, 0x01	; 1
    33da:	89 83       	std	Y+1, r24	; 0x01

	EECR|= (1<<3);
    33dc:	ac e3       	ldi	r26, 0x3C	; 60
    33de:	b0 e0       	ldi	r27, 0x00	; 0
    33e0:	ec e3       	ldi	r30, 0x3C	; 60
    33e2:	f0 e0       	ldi	r31, 0x00	; 0
    33e4:	80 81       	ld	r24, Z
    33e6:	88 60       	ori	r24, 0x08	; 8
    33e8:	8c 93       	st	X, r24

	return local_enuErrorState;
    33ea:	89 81       	ldd	r24, Y+1	; 0x01
}
    33ec:	0f 90       	pop	r0
    33ee:	cf 91       	pop	r28
    33f0:	df 91       	pop	r29
    33f2:	08 95       	ret

000033f4 <EEPROM_intDisable>:
ES_t EEPROM_intDisable(void){
    33f4:	df 93       	push	r29
    33f6:	cf 93       	push	r28
    33f8:	0f 92       	push	r0
    33fa:	cd b7       	in	r28, 0x3d	; 61
    33fc:	de b7       	in	r29, 0x3e	; 62
	ES_t local_enuErrorState=ES_NOK;
    33fe:	81 e0       	ldi	r24, 0x01	; 1
    3400:	89 83       	std	Y+1, r24	; 0x01
	EECR &=~(1<<3);
    3402:	ac e3       	ldi	r26, 0x3C	; 60
    3404:	b0 e0       	ldi	r27, 0x00	; 0
    3406:	ec e3       	ldi	r30, 0x3C	; 60
    3408:	f0 e0       	ldi	r31, 0x00	; 0
    340a:	80 81       	ld	r24, Z
    340c:	87 7f       	andi	r24, 0xF7	; 247
    340e:	8c 93       	st	X, r24
	return local_enuErrorState;
    3410:	89 81       	ldd	r24, Y+1	; 0x01
}
    3412:	0f 90       	pop	r0
    3414:	cf 91       	pop	r28
    3416:	df 91       	pop	r29
    3418:	08 95       	ret

0000341a <DIO_enuInit>:
#include "DIO_priv.h"
#include "DIO_config.h"


ES_t DIO_enuInit(void)
{
    341a:	df 93       	push	r29
    341c:	cf 93       	push	r28
    341e:	0f 92       	push	r0
    3420:	cd b7       	in	r28, 0x3d	; 61
    3422:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK;
    3424:	81 e0       	ldi	r24, 0x01	; 1
    3426:	89 83       	std	Y+1, r24	; 0x01

#if DIO_u8PA0DIR == DIO_u8INPUT
	DDRA &= ~(1<<0);
    3428:	aa e3       	ldi	r26, 0x3A	; 58
    342a:	b0 e0       	ldi	r27, 0x00	; 0
    342c:	ea e3       	ldi	r30, 0x3A	; 58
    342e:	f0 e0       	ldi	r31, 0x00	; 0
    3430:	80 81       	ld	r24, Z
    3432:	8e 7f       	andi	r24, 0xFE	; 254
    3434:	8c 93       	st	X, r24
	DDRA |= (1<<0);
#else
#error "Direction of PA0 is wrong ya latkh"
#endif

	return Local_enuErrorState;
    3436:	89 81       	ldd	r24, Y+1	; 0x01
}
    3438:	0f 90       	pop	r0
    343a:	cf 91       	pop	r28
    343c:	df 91       	pop	r29
    343e:	08 95       	ret

00003440 <DIO_enuSetPinDirection>:

ES_t DIO_enuSetPinDirection(u8 Copy_u8GroupID, u8 Copy_u8PinID, u8 Copy_u8Direction)
{
    3440:	df 93       	push	r29
    3442:	cf 93       	push	r28
    3444:	00 d0       	rcall	.+0      	; 0x3446 <DIO_enuSetPinDirection+0x6>
    3446:	00 d0       	rcall	.+0      	; 0x3448 <DIO_enuSetPinDirection+0x8>
    3448:	00 d0       	rcall	.+0      	; 0x344a <DIO_enuSetPinDirection+0xa>
    344a:	cd b7       	in	r28, 0x3d	; 61
    344c:	de b7       	in	r29, 0x3e	; 62
    344e:	8a 83       	std	Y+2, r24	; 0x02
    3450:	6b 83       	std	Y+3, r22	; 0x03
    3452:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    3454:	81 e0       	ldi	r24, 0x01	; 1
    3456:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8GroupID <= DIO_u8GROUP_D &&
    3458:	8a 81       	ldd	r24, Y+2	; 0x02
    345a:	84 30       	cpi	r24, 0x04	; 4
    345c:	08 f0       	brcs	.+2      	; 0x3460 <DIO_enuSetPinDirection+0x20>
    345e:	d0 c0       	rjmp	.+416    	; 0x3600 <DIO_enuSetPinDirection+0x1c0>
    3460:	8b 81       	ldd	r24, Y+3	; 0x03
    3462:	88 30       	cpi	r24, 0x08	; 8
    3464:	08 f0       	brcs	.+2      	; 0x3468 <DIO_enuSetPinDirection+0x28>
    3466:	cc c0       	rjmp	.+408    	; 0x3600 <DIO_enuSetPinDirection+0x1c0>
    3468:	8c 81       	ldd	r24, Y+4	; 0x04
    346a:	82 30       	cpi	r24, 0x02	; 2
    346c:	08 f0       	brcs	.+2      	; 0x3470 <DIO_enuSetPinDirection+0x30>
    346e:	c8 c0       	rjmp	.+400    	; 0x3600 <DIO_enuSetPinDirection+0x1c0>
			Copy_u8PinID<= DIO_u8PIN7 &&
			Copy_u8Direction <= DIO_u8OUTPUT)
	{
		switch (Copy_u8GroupID)
    3470:	8a 81       	ldd	r24, Y+2	; 0x02
    3472:	28 2f       	mov	r18, r24
    3474:	30 e0       	ldi	r19, 0x00	; 0
    3476:	3e 83       	std	Y+6, r19	; 0x06
    3478:	2d 83       	std	Y+5, r18	; 0x05
    347a:	6d 81       	ldd	r22, Y+5	; 0x05
    347c:	7e 81       	ldd	r23, Y+6	; 0x06
    347e:	61 30       	cpi	r22, 0x01	; 1
    3480:	71 05       	cpc	r23, r1
    3482:	09 f4       	brne	.+2      	; 0x3486 <DIO_enuSetPinDirection+0x46>
    3484:	41 c0       	rjmp	.+130    	; 0x3508 <DIO_enuSetPinDirection+0xc8>
    3486:	8d 81       	ldd	r24, Y+5	; 0x05
    3488:	9e 81       	ldd	r25, Y+6	; 0x06
    348a:	82 30       	cpi	r24, 0x02	; 2
    348c:	91 05       	cpc	r25, r1
    348e:	34 f4       	brge	.+12     	; 0x349c <DIO_enuSetPinDirection+0x5c>
    3490:	2d 81       	ldd	r18, Y+5	; 0x05
    3492:	3e 81       	ldd	r19, Y+6	; 0x06
    3494:	21 15       	cp	r18, r1
    3496:	31 05       	cpc	r19, r1
    3498:	71 f0       	breq	.+28     	; 0x34b6 <DIO_enuSetPinDirection+0x76>
    349a:	b0 c0       	rjmp	.+352    	; 0x35fc <DIO_enuSetPinDirection+0x1bc>
    349c:	6d 81       	ldd	r22, Y+5	; 0x05
    349e:	7e 81       	ldd	r23, Y+6	; 0x06
    34a0:	62 30       	cpi	r22, 0x02	; 2
    34a2:	71 05       	cpc	r23, r1
    34a4:	09 f4       	brne	.+2      	; 0x34a8 <DIO_enuSetPinDirection+0x68>
    34a6:	59 c0       	rjmp	.+178    	; 0x355a <DIO_enuSetPinDirection+0x11a>
    34a8:	8d 81       	ldd	r24, Y+5	; 0x05
    34aa:	9e 81       	ldd	r25, Y+6	; 0x06
    34ac:	83 30       	cpi	r24, 0x03	; 3
    34ae:	91 05       	cpc	r25, r1
    34b0:	09 f4       	brne	.+2      	; 0x34b4 <DIO_enuSetPinDirection+0x74>
    34b2:	7c c0       	rjmp	.+248    	; 0x35ac <DIO_enuSetPinDirection+0x16c>
    34b4:	a3 c0       	rjmp	.+326    	; 0x35fc <DIO_enuSetPinDirection+0x1bc>
		{
		case DIO_u8GROUP_A:
			DDRA &= ~(DIO_BIT_MASK << Copy_u8PinID);
    34b6:	aa e3       	ldi	r26, 0x3A	; 58
    34b8:	b0 e0       	ldi	r27, 0x00	; 0
    34ba:	ea e3       	ldi	r30, 0x3A	; 58
    34bc:	f0 e0       	ldi	r31, 0x00	; 0
    34be:	80 81       	ld	r24, Z
    34c0:	48 2f       	mov	r20, r24
    34c2:	8b 81       	ldd	r24, Y+3	; 0x03
    34c4:	28 2f       	mov	r18, r24
    34c6:	30 e0       	ldi	r19, 0x00	; 0
    34c8:	81 e0       	ldi	r24, 0x01	; 1
    34ca:	90 e0       	ldi	r25, 0x00	; 0
    34cc:	02 c0       	rjmp	.+4      	; 0x34d2 <DIO_enuSetPinDirection+0x92>
    34ce:	88 0f       	add	r24, r24
    34d0:	99 1f       	adc	r25, r25
    34d2:	2a 95       	dec	r18
    34d4:	e2 f7       	brpl	.-8      	; 0x34ce <DIO_enuSetPinDirection+0x8e>
    34d6:	80 95       	com	r24
    34d8:	84 23       	and	r24, r20
    34da:	8c 93       	st	X, r24
			DDRA |=  (Copy_u8Direction << Copy_u8PinID);
    34dc:	aa e3       	ldi	r26, 0x3A	; 58
    34de:	b0 e0       	ldi	r27, 0x00	; 0
    34e0:	ea e3       	ldi	r30, 0x3A	; 58
    34e2:	f0 e0       	ldi	r31, 0x00	; 0
    34e4:	80 81       	ld	r24, Z
    34e6:	48 2f       	mov	r20, r24
    34e8:	8c 81       	ldd	r24, Y+4	; 0x04
    34ea:	28 2f       	mov	r18, r24
    34ec:	30 e0       	ldi	r19, 0x00	; 0
    34ee:	8b 81       	ldd	r24, Y+3	; 0x03
    34f0:	88 2f       	mov	r24, r24
    34f2:	90 e0       	ldi	r25, 0x00	; 0
    34f4:	b9 01       	movw	r22, r18
    34f6:	02 c0       	rjmp	.+4      	; 0x34fc <DIO_enuSetPinDirection+0xbc>
    34f8:	66 0f       	add	r22, r22
    34fa:	77 1f       	adc	r23, r23
    34fc:	8a 95       	dec	r24
    34fe:	e2 f7       	brpl	.-8      	; 0x34f8 <DIO_enuSetPinDirection+0xb8>
    3500:	cb 01       	movw	r24, r22
    3502:	84 2b       	or	r24, r20
    3504:	8c 93       	st	X, r24
    3506:	7a c0       	rjmp	.+244    	; 0x35fc <DIO_enuSetPinDirection+0x1bc>
			break;

		case DIO_u8GROUP_B:
			DDRB &= ~(DIO_BIT_MASK << Copy_u8PinID);
    3508:	a7 e3       	ldi	r26, 0x37	; 55
    350a:	b0 e0       	ldi	r27, 0x00	; 0
    350c:	e7 e3       	ldi	r30, 0x37	; 55
    350e:	f0 e0       	ldi	r31, 0x00	; 0
    3510:	80 81       	ld	r24, Z
    3512:	48 2f       	mov	r20, r24
    3514:	8b 81       	ldd	r24, Y+3	; 0x03
    3516:	28 2f       	mov	r18, r24
    3518:	30 e0       	ldi	r19, 0x00	; 0
    351a:	81 e0       	ldi	r24, 0x01	; 1
    351c:	90 e0       	ldi	r25, 0x00	; 0
    351e:	02 c0       	rjmp	.+4      	; 0x3524 <DIO_enuSetPinDirection+0xe4>
    3520:	88 0f       	add	r24, r24
    3522:	99 1f       	adc	r25, r25
    3524:	2a 95       	dec	r18
    3526:	e2 f7       	brpl	.-8      	; 0x3520 <DIO_enuSetPinDirection+0xe0>
    3528:	80 95       	com	r24
    352a:	84 23       	and	r24, r20
    352c:	8c 93       	st	X, r24
			DDRB |=  (Copy_u8Direction << Copy_u8PinID);
    352e:	a7 e3       	ldi	r26, 0x37	; 55
    3530:	b0 e0       	ldi	r27, 0x00	; 0
    3532:	e7 e3       	ldi	r30, 0x37	; 55
    3534:	f0 e0       	ldi	r31, 0x00	; 0
    3536:	80 81       	ld	r24, Z
    3538:	48 2f       	mov	r20, r24
    353a:	8c 81       	ldd	r24, Y+4	; 0x04
    353c:	28 2f       	mov	r18, r24
    353e:	30 e0       	ldi	r19, 0x00	; 0
    3540:	8b 81       	ldd	r24, Y+3	; 0x03
    3542:	88 2f       	mov	r24, r24
    3544:	90 e0       	ldi	r25, 0x00	; 0
    3546:	b9 01       	movw	r22, r18
    3548:	02 c0       	rjmp	.+4      	; 0x354e <DIO_enuSetPinDirection+0x10e>
    354a:	66 0f       	add	r22, r22
    354c:	77 1f       	adc	r23, r23
    354e:	8a 95       	dec	r24
    3550:	e2 f7       	brpl	.-8      	; 0x354a <DIO_enuSetPinDirection+0x10a>
    3552:	cb 01       	movw	r24, r22
    3554:	84 2b       	or	r24, r20
    3556:	8c 93       	st	X, r24
    3558:	51 c0       	rjmp	.+162    	; 0x35fc <DIO_enuSetPinDirection+0x1bc>

			break;

		case DIO_u8GROUP_C:
			DDRC &= ~(DIO_BIT_MASK << Copy_u8PinID);
    355a:	a4 e3       	ldi	r26, 0x34	; 52
    355c:	b0 e0       	ldi	r27, 0x00	; 0
    355e:	e4 e3       	ldi	r30, 0x34	; 52
    3560:	f0 e0       	ldi	r31, 0x00	; 0
    3562:	80 81       	ld	r24, Z
    3564:	48 2f       	mov	r20, r24
    3566:	8b 81       	ldd	r24, Y+3	; 0x03
    3568:	28 2f       	mov	r18, r24
    356a:	30 e0       	ldi	r19, 0x00	; 0
    356c:	81 e0       	ldi	r24, 0x01	; 1
    356e:	90 e0       	ldi	r25, 0x00	; 0
    3570:	02 c0       	rjmp	.+4      	; 0x3576 <DIO_enuSetPinDirection+0x136>
    3572:	88 0f       	add	r24, r24
    3574:	99 1f       	adc	r25, r25
    3576:	2a 95       	dec	r18
    3578:	e2 f7       	brpl	.-8      	; 0x3572 <DIO_enuSetPinDirection+0x132>
    357a:	80 95       	com	r24
    357c:	84 23       	and	r24, r20
    357e:	8c 93       	st	X, r24
			DDRC |=  (Copy_u8Direction << Copy_u8PinID);
    3580:	a4 e3       	ldi	r26, 0x34	; 52
    3582:	b0 e0       	ldi	r27, 0x00	; 0
    3584:	e4 e3       	ldi	r30, 0x34	; 52
    3586:	f0 e0       	ldi	r31, 0x00	; 0
    3588:	80 81       	ld	r24, Z
    358a:	48 2f       	mov	r20, r24
    358c:	8c 81       	ldd	r24, Y+4	; 0x04
    358e:	28 2f       	mov	r18, r24
    3590:	30 e0       	ldi	r19, 0x00	; 0
    3592:	8b 81       	ldd	r24, Y+3	; 0x03
    3594:	88 2f       	mov	r24, r24
    3596:	90 e0       	ldi	r25, 0x00	; 0
    3598:	b9 01       	movw	r22, r18
    359a:	02 c0       	rjmp	.+4      	; 0x35a0 <DIO_enuSetPinDirection+0x160>
    359c:	66 0f       	add	r22, r22
    359e:	77 1f       	adc	r23, r23
    35a0:	8a 95       	dec	r24
    35a2:	e2 f7       	brpl	.-8      	; 0x359c <DIO_enuSetPinDirection+0x15c>
    35a4:	cb 01       	movw	r24, r22
    35a6:	84 2b       	or	r24, r20
    35a8:	8c 93       	st	X, r24
    35aa:	28 c0       	rjmp	.+80     	; 0x35fc <DIO_enuSetPinDirection+0x1bc>

			break;

		case DIO_u8GROUP_D:
			DDRD &= ~(DIO_BIT_MASK << Copy_u8PinID);
    35ac:	a1 e3       	ldi	r26, 0x31	; 49
    35ae:	b0 e0       	ldi	r27, 0x00	; 0
    35b0:	e1 e3       	ldi	r30, 0x31	; 49
    35b2:	f0 e0       	ldi	r31, 0x00	; 0
    35b4:	80 81       	ld	r24, Z
    35b6:	48 2f       	mov	r20, r24
    35b8:	8b 81       	ldd	r24, Y+3	; 0x03
    35ba:	28 2f       	mov	r18, r24
    35bc:	30 e0       	ldi	r19, 0x00	; 0
    35be:	81 e0       	ldi	r24, 0x01	; 1
    35c0:	90 e0       	ldi	r25, 0x00	; 0
    35c2:	02 c0       	rjmp	.+4      	; 0x35c8 <DIO_enuSetPinDirection+0x188>
    35c4:	88 0f       	add	r24, r24
    35c6:	99 1f       	adc	r25, r25
    35c8:	2a 95       	dec	r18
    35ca:	e2 f7       	brpl	.-8      	; 0x35c4 <DIO_enuSetPinDirection+0x184>
    35cc:	80 95       	com	r24
    35ce:	84 23       	and	r24, r20
    35d0:	8c 93       	st	X, r24
			DDRD |=  (Copy_u8Direction << Copy_u8PinID);
    35d2:	a1 e3       	ldi	r26, 0x31	; 49
    35d4:	b0 e0       	ldi	r27, 0x00	; 0
    35d6:	e1 e3       	ldi	r30, 0x31	; 49
    35d8:	f0 e0       	ldi	r31, 0x00	; 0
    35da:	80 81       	ld	r24, Z
    35dc:	48 2f       	mov	r20, r24
    35de:	8c 81       	ldd	r24, Y+4	; 0x04
    35e0:	28 2f       	mov	r18, r24
    35e2:	30 e0       	ldi	r19, 0x00	; 0
    35e4:	8b 81       	ldd	r24, Y+3	; 0x03
    35e6:	88 2f       	mov	r24, r24
    35e8:	90 e0       	ldi	r25, 0x00	; 0
    35ea:	b9 01       	movw	r22, r18
    35ec:	02 c0       	rjmp	.+4      	; 0x35f2 <DIO_enuSetPinDirection+0x1b2>
    35ee:	66 0f       	add	r22, r22
    35f0:	77 1f       	adc	r23, r23
    35f2:	8a 95       	dec	r24
    35f4:	e2 f7       	brpl	.-8      	; 0x35ee <DIO_enuSetPinDirection+0x1ae>
    35f6:	cb 01       	movw	r24, r22
    35f8:	84 2b       	or	r24, r20
    35fa:	8c 93       	st	X, r24

			break;

		}

		Local_enuErrorState = ES_OK;
    35fc:	19 82       	std	Y+1, r1	; 0x01
    35fe:	02 c0       	rjmp	.+4      	; 0x3604 <DIO_enuSetPinDirection+0x1c4>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    3600:	82 e0       	ldi	r24, 0x02	; 2
    3602:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    3604:	89 81       	ldd	r24, Y+1	; 0x01
}
    3606:	26 96       	adiw	r28, 0x06	; 6
    3608:	0f b6       	in	r0, 0x3f	; 63
    360a:	f8 94       	cli
    360c:	de bf       	out	0x3e, r29	; 62
    360e:	0f be       	out	0x3f, r0	; 63
    3610:	cd bf       	out	0x3d, r28	; 61
    3612:	cf 91       	pop	r28
    3614:	df 91       	pop	r29
    3616:	08 95       	ret

00003618 <DIO_enuSetPinValue>:

ES_t DIO_enuSetPinValue(u8 Copy_u8GroupID, u8 Copy_u8PinID, u8 Copy_u8Value)
{
    3618:	df 93       	push	r29
    361a:	cf 93       	push	r28
    361c:	00 d0       	rcall	.+0      	; 0x361e <DIO_enuSetPinValue+0x6>
    361e:	00 d0       	rcall	.+0      	; 0x3620 <DIO_enuSetPinValue+0x8>
    3620:	00 d0       	rcall	.+0      	; 0x3622 <DIO_enuSetPinValue+0xa>
    3622:	cd b7       	in	r28, 0x3d	; 61
    3624:	de b7       	in	r29, 0x3e	; 62
    3626:	8a 83       	std	Y+2, r24	; 0x02
    3628:	6b 83       	std	Y+3, r22	; 0x03
    362a:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    362c:	81 e0       	ldi	r24, 0x01	; 1
    362e:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8GroupID <= DIO_u8GROUP_D &&
    3630:	8a 81       	ldd	r24, Y+2	; 0x02
    3632:	84 30       	cpi	r24, 0x04	; 4
    3634:	08 f0       	brcs	.+2      	; 0x3638 <DIO_enuSetPinValue+0x20>
    3636:	d0 c0       	rjmp	.+416    	; 0x37d8 <DIO_enuSetPinValue+0x1c0>
    3638:	8b 81       	ldd	r24, Y+3	; 0x03
    363a:	88 30       	cpi	r24, 0x08	; 8
    363c:	08 f0       	brcs	.+2      	; 0x3640 <DIO_enuSetPinValue+0x28>
    363e:	cc c0       	rjmp	.+408    	; 0x37d8 <DIO_enuSetPinValue+0x1c0>
    3640:	8c 81       	ldd	r24, Y+4	; 0x04
    3642:	82 30       	cpi	r24, 0x02	; 2
    3644:	08 f0       	brcs	.+2      	; 0x3648 <DIO_enuSetPinValue+0x30>
    3646:	c8 c0       	rjmp	.+400    	; 0x37d8 <DIO_enuSetPinValue+0x1c0>
			Copy_u8PinID <= DIO_u8PIN7 &&
			Copy_u8Value <= DIO_u8HIGH)
	{
		switch (Copy_u8GroupID)
    3648:	8a 81       	ldd	r24, Y+2	; 0x02
    364a:	28 2f       	mov	r18, r24
    364c:	30 e0       	ldi	r19, 0x00	; 0
    364e:	3e 83       	std	Y+6, r19	; 0x06
    3650:	2d 83       	std	Y+5, r18	; 0x05
    3652:	6d 81       	ldd	r22, Y+5	; 0x05
    3654:	7e 81       	ldd	r23, Y+6	; 0x06
    3656:	61 30       	cpi	r22, 0x01	; 1
    3658:	71 05       	cpc	r23, r1
    365a:	09 f4       	brne	.+2      	; 0x365e <DIO_enuSetPinValue+0x46>
    365c:	41 c0       	rjmp	.+130    	; 0x36e0 <DIO_enuSetPinValue+0xc8>
    365e:	8d 81       	ldd	r24, Y+5	; 0x05
    3660:	9e 81       	ldd	r25, Y+6	; 0x06
    3662:	82 30       	cpi	r24, 0x02	; 2
    3664:	91 05       	cpc	r25, r1
    3666:	34 f4       	brge	.+12     	; 0x3674 <DIO_enuSetPinValue+0x5c>
    3668:	2d 81       	ldd	r18, Y+5	; 0x05
    366a:	3e 81       	ldd	r19, Y+6	; 0x06
    366c:	21 15       	cp	r18, r1
    366e:	31 05       	cpc	r19, r1
    3670:	71 f0       	breq	.+28     	; 0x368e <DIO_enuSetPinValue+0x76>
    3672:	b0 c0       	rjmp	.+352    	; 0x37d4 <DIO_enuSetPinValue+0x1bc>
    3674:	6d 81       	ldd	r22, Y+5	; 0x05
    3676:	7e 81       	ldd	r23, Y+6	; 0x06
    3678:	62 30       	cpi	r22, 0x02	; 2
    367a:	71 05       	cpc	r23, r1
    367c:	09 f4       	brne	.+2      	; 0x3680 <DIO_enuSetPinValue+0x68>
    367e:	59 c0       	rjmp	.+178    	; 0x3732 <DIO_enuSetPinValue+0x11a>
    3680:	8d 81       	ldd	r24, Y+5	; 0x05
    3682:	9e 81       	ldd	r25, Y+6	; 0x06
    3684:	83 30       	cpi	r24, 0x03	; 3
    3686:	91 05       	cpc	r25, r1
    3688:	09 f4       	brne	.+2      	; 0x368c <DIO_enuSetPinValue+0x74>
    368a:	7c c0       	rjmp	.+248    	; 0x3784 <DIO_enuSetPinValue+0x16c>
    368c:	a3 c0       	rjmp	.+326    	; 0x37d4 <DIO_enuSetPinValue+0x1bc>
		{
		case DIO_u8GROUP_A:
			PORTA &= ~(DIO_BIT_MASK << Copy_u8PinID);
    368e:	ab e3       	ldi	r26, 0x3B	; 59
    3690:	b0 e0       	ldi	r27, 0x00	; 0
    3692:	eb e3       	ldi	r30, 0x3B	; 59
    3694:	f0 e0       	ldi	r31, 0x00	; 0
    3696:	80 81       	ld	r24, Z
    3698:	48 2f       	mov	r20, r24
    369a:	8b 81       	ldd	r24, Y+3	; 0x03
    369c:	28 2f       	mov	r18, r24
    369e:	30 e0       	ldi	r19, 0x00	; 0
    36a0:	81 e0       	ldi	r24, 0x01	; 1
    36a2:	90 e0       	ldi	r25, 0x00	; 0
    36a4:	02 c0       	rjmp	.+4      	; 0x36aa <DIO_enuSetPinValue+0x92>
    36a6:	88 0f       	add	r24, r24
    36a8:	99 1f       	adc	r25, r25
    36aa:	2a 95       	dec	r18
    36ac:	e2 f7       	brpl	.-8      	; 0x36a6 <DIO_enuSetPinValue+0x8e>
    36ae:	80 95       	com	r24
    36b0:	84 23       	and	r24, r20
    36b2:	8c 93       	st	X, r24
			PORTA |=  (Copy_u8Value << Copy_u8PinID);
    36b4:	ab e3       	ldi	r26, 0x3B	; 59
    36b6:	b0 e0       	ldi	r27, 0x00	; 0
    36b8:	eb e3       	ldi	r30, 0x3B	; 59
    36ba:	f0 e0       	ldi	r31, 0x00	; 0
    36bc:	80 81       	ld	r24, Z
    36be:	48 2f       	mov	r20, r24
    36c0:	8c 81       	ldd	r24, Y+4	; 0x04
    36c2:	28 2f       	mov	r18, r24
    36c4:	30 e0       	ldi	r19, 0x00	; 0
    36c6:	8b 81       	ldd	r24, Y+3	; 0x03
    36c8:	88 2f       	mov	r24, r24
    36ca:	90 e0       	ldi	r25, 0x00	; 0
    36cc:	b9 01       	movw	r22, r18
    36ce:	02 c0       	rjmp	.+4      	; 0x36d4 <DIO_enuSetPinValue+0xbc>
    36d0:	66 0f       	add	r22, r22
    36d2:	77 1f       	adc	r23, r23
    36d4:	8a 95       	dec	r24
    36d6:	e2 f7       	brpl	.-8      	; 0x36d0 <DIO_enuSetPinValue+0xb8>
    36d8:	cb 01       	movw	r24, r22
    36da:	84 2b       	or	r24, r20
    36dc:	8c 93       	st	X, r24
    36de:	7a c0       	rjmp	.+244    	; 0x37d4 <DIO_enuSetPinValue+0x1bc>
			break;

		case DIO_u8GROUP_B:
			PORTB &= ~(DIO_BIT_MASK << Copy_u8PinID);
    36e0:	a8 e3       	ldi	r26, 0x38	; 56
    36e2:	b0 e0       	ldi	r27, 0x00	; 0
    36e4:	e8 e3       	ldi	r30, 0x38	; 56
    36e6:	f0 e0       	ldi	r31, 0x00	; 0
    36e8:	80 81       	ld	r24, Z
    36ea:	48 2f       	mov	r20, r24
    36ec:	8b 81       	ldd	r24, Y+3	; 0x03
    36ee:	28 2f       	mov	r18, r24
    36f0:	30 e0       	ldi	r19, 0x00	; 0
    36f2:	81 e0       	ldi	r24, 0x01	; 1
    36f4:	90 e0       	ldi	r25, 0x00	; 0
    36f6:	02 c0       	rjmp	.+4      	; 0x36fc <DIO_enuSetPinValue+0xe4>
    36f8:	88 0f       	add	r24, r24
    36fa:	99 1f       	adc	r25, r25
    36fc:	2a 95       	dec	r18
    36fe:	e2 f7       	brpl	.-8      	; 0x36f8 <DIO_enuSetPinValue+0xe0>
    3700:	80 95       	com	r24
    3702:	84 23       	and	r24, r20
    3704:	8c 93       	st	X, r24
			PORTB |=  (Copy_u8Value << Copy_u8PinID);
    3706:	a8 e3       	ldi	r26, 0x38	; 56
    3708:	b0 e0       	ldi	r27, 0x00	; 0
    370a:	e8 e3       	ldi	r30, 0x38	; 56
    370c:	f0 e0       	ldi	r31, 0x00	; 0
    370e:	80 81       	ld	r24, Z
    3710:	48 2f       	mov	r20, r24
    3712:	8c 81       	ldd	r24, Y+4	; 0x04
    3714:	28 2f       	mov	r18, r24
    3716:	30 e0       	ldi	r19, 0x00	; 0
    3718:	8b 81       	ldd	r24, Y+3	; 0x03
    371a:	88 2f       	mov	r24, r24
    371c:	90 e0       	ldi	r25, 0x00	; 0
    371e:	b9 01       	movw	r22, r18
    3720:	02 c0       	rjmp	.+4      	; 0x3726 <DIO_enuSetPinValue+0x10e>
    3722:	66 0f       	add	r22, r22
    3724:	77 1f       	adc	r23, r23
    3726:	8a 95       	dec	r24
    3728:	e2 f7       	brpl	.-8      	; 0x3722 <DIO_enuSetPinValue+0x10a>
    372a:	cb 01       	movw	r24, r22
    372c:	84 2b       	or	r24, r20
    372e:	8c 93       	st	X, r24
    3730:	51 c0       	rjmp	.+162    	; 0x37d4 <DIO_enuSetPinValue+0x1bc>

			break;

		case DIO_u8GROUP_C:
			PORTC &= ~(DIO_BIT_MASK << Copy_u8PinID);
    3732:	a5 e3       	ldi	r26, 0x35	; 53
    3734:	b0 e0       	ldi	r27, 0x00	; 0
    3736:	e5 e3       	ldi	r30, 0x35	; 53
    3738:	f0 e0       	ldi	r31, 0x00	; 0
    373a:	80 81       	ld	r24, Z
    373c:	48 2f       	mov	r20, r24
    373e:	8b 81       	ldd	r24, Y+3	; 0x03
    3740:	28 2f       	mov	r18, r24
    3742:	30 e0       	ldi	r19, 0x00	; 0
    3744:	81 e0       	ldi	r24, 0x01	; 1
    3746:	90 e0       	ldi	r25, 0x00	; 0
    3748:	02 c0       	rjmp	.+4      	; 0x374e <DIO_enuSetPinValue+0x136>
    374a:	88 0f       	add	r24, r24
    374c:	99 1f       	adc	r25, r25
    374e:	2a 95       	dec	r18
    3750:	e2 f7       	brpl	.-8      	; 0x374a <DIO_enuSetPinValue+0x132>
    3752:	80 95       	com	r24
    3754:	84 23       	and	r24, r20
    3756:	8c 93       	st	X, r24
			PORTC |=  (Copy_u8Value << Copy_u8PinID);
    3758:	a5 e3       	ldi	r26, 0x35	; 53
    375a:	b0 e0       	ldi	r27, 0x00	; 0
    375c:	e5 e3       	ldi	r30, 0x35	; 53
    375e:	f0 e0       	ldi	r31, 0x00	; 0
    3760:	80 81       	ld	r24, Z
    3762:	48 2f       	mov	r20, r24
    3764:	8c 81       	ldd	r24, Y+4	; 0x04
    3766:	28 2f       	mov	r18, r24
    3768:	30 e0       	ldi	r19, 0x00	; 0
    376a:	8b 81       	ldd	r24, Y+3	; 0x03
    376c:	88 2f       	mov	r24, r24
    376e:	90 e0       	ldi	r25, 0x00	; 0
    3770:	b9 01       	movw	r22, r18
    3772:	02 c0       	rjmp	.+4      	; 0x3778 <DIO_enuSetPinValue+0x160>
    3774:	66 0f       	add	r22, r22
    3776:	77 1f       	adc	r23, r23
    3778:	8a 95       	dec	r24
    377a:	e2 f7       	brpl	.-8      	; 0x3774 <DIO_enuSetPinValue+0x15c>
    377c:	cb 01       	movw	r24, r22
    377e:	84 2b       	or	r24, r20
    3780:	8c 93       	st	X, r24
    3782:	28 c0       	rjmp	.+80     	; 0x37d4 <DIO_enuSetPinValue+0x1bc>

			break;

		case DIO_u8GROUP_D:
			PORTD &= ~(DIO_BIT_MASK << Copy_u8PinID);
    3784:	a2 e3       	ldi	r26, 0x32	; 50
    3786:	b0 e0       	ldi	r27, 0x00	; 0
    3788:	e2 e3       	ldi	r30, 0x32	; 50
    378a:	f0 e0       	ldi	r31, 0x00	; 0
    378c:	80 81       	ld	r24, Z
    378e:	48 2f       	mov	r20, r24
    3790:	8b 81       	ldd	r24, Y+3	; 0x03
    3792:	28 2f       	mov	r18, r24
    3794:	30 e0       	ldi	r19, 0x00	; 0
    3796:	81 e0       	ldi	r24, 0x01	; 1
    3798:	90 e0       	ldi	r25, 0x00	; 0
    379a:	02 c0       	rjmp	.+4      	; 0x37a0 <DIO_enuSetPinValue+0x188>
    379c:	88 0f       	add	r24, r24
    379e:	99 1f       	adc	r25, r25
    37a0:	2a 95       	dec	r18
    37a2:	e2 f7       	brpl	.-8      	; 0x379c <DIO_enuSetPinValue+0x184>
    37a4:	80 95       	com	r24
    37a6:	84 23       	and	r24, r20
    37a8:	8c 93       	st	X, r24
			PORTD |=  (Copy_u8Value << Copy_u8PinID);
    37aa:	a2 e3       	ldi	r26, 0x32	; 50
    37ac:	b0 e0       	ldi	r27, 0x00	; 0
    37ae:	e2 e3       	ldi	r30, 0x32	; 50
    37b0:	f0 e0       	ldi	r31, 0x00	; 0
    37b2:	80 81       	ld	r24, Z
    37b4:	48 2f       	mov	r20, r24
    37b6:	8c 81       	ldd	r24, Y+4	; 0x04
    37b8:	28 2f       	mov	r18, r24
    37ba:	30 e0       	ldi	r19, 0x00	; 0
    37bc:	8b 81       	ldd	r24, Y+3	; 0x03
    37be:	88 2f       	mov	r24, r24
    37c0:	90 e0       	ldi	r25, 0x00	; 0
    37c2:	b9 01       	movw	r22, r18
    37c4:	02 c0       	rjmp	.+4      	; 0x37ca <DIO_enuSetPinValue+0x1b2>
    37c6:	66 0f       	add	r22, r22
    37c8:	77 1f       	adc	r23, r23
    37ca:	8a 95       	dec	r24
    37cc:	e2 f7       	brpl	.-8      	; 0x37c6 <DIO_enuSetPinValue+0x1ae>
    37ce:	cb 01       	movw	r24, r22
    37d0:	84 2b       	or	r24, r20
    37d2:	8c 93       	st	X, r24

			break;

		}

		Local_enuErrorState = ES_OK;
    37d4:	19 82       	std	Y+1, r1	; 0x01
    37d6:	02 c0       	rjmp	.+4      	; 0x37dc <DIO_enuSetPinValue+0x1c4>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    37d8:	82 e0       	ldi	r24, 0x02	; 2
    37da:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    37dc:	89 81       	ldd	r24, Y+1	; 0x01
}
    37de:	26 96       	adiw	r28, 0x06	; 6
    37e0:	0f b6       	in	r0, 0x3f	; 63
    37e2:	f8 94       	cli
    37e4:	de bf       	out	0x3e, r29	; 62
    37e6:	0f be       	out	0x3f, r0	; 63
    37e8:	cd bf       	out	0x3d, r28	; 61
    37ea:	cf 91       	pop	r28
    37ec:	df 91       	pop	r29
    37ee:	08 95       	ret

000037f0 <DIO_enuTogglePinValue>:

ES_t DIO_enuTogglePinValue(u8 Copy_u8GroupID, u8 Copy_u8PinID)
{
    37f0:	df 93       	push	r29
    37f2:	cf 93       	push	r28
    37f4:	00 d0       	rcall	.+0      	; 0x37f6 <DIO_enuTogglePinValue+0x6>
    37f6:	00 d0       	rcall	.+0      	; 0x37f8 <DIO_enuTogglePinValue+0x8>
    37f8:	0f 92       	push	r0
    37fa:	cd b7       	in	r28, 0x3d	; 61
    37fc:	de b7       	in	r29, 0x3e	; 62
    37fe:	8a 83       	std	Y+2, r24	; 0x02
    3800:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    3802:	81 e0       	ldi	r24, 0x01	; 1
    3804:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8GroupID <= DIO_u8GROUP_D &&
    3806:	8a 81       	ldd	r24, Y+2	; 0x02
    3808:	84 30       	cpi	r24, 0x04	; 4
    380a:	08 f0       	brcs	.+2      	; 0x380e <DIO_enuTogglePinValue+0x1e>
    380c:	74 c0       	rjmp	.+232    	; 0x38f6 <DIO_enuTogglePinValue+0x106>
    380e:	8b 81       	ldd	r24, Y+3	; 0x03
    3810:	88 30       	cpi	r24, 0x08	; 8
    3812:	08 f0       	brcs	.+2      	; 0x3816 <DIO_enuTogglePinValue+0x26>
    3814:	70 c0       	rjmp	.+224    	; 0x38f6 <DIO_enuTogglePinValue+0x106>
			Copy_u8PinID <= DIO_u8PIN7 )
	{
		switch (Copy_u8GroupID)
    3816:	8a 81       	ldd	r24, Y+2	; 0x02
    3818:	28 2f       	mov	r18, r24
    381a:	30 e0       	ldi	r19, 0x00	; 0
    381c:	3d 83       	std	Y+5, r19	; 0x05
    381e:	2c 83       	std	Y+4, r18	; 0x04
    3820:	8c 81       	ldd	r24, Y+4	; 0x04
    3822:	9d 81       	ldd	r25, Y+5	; 0x05
    3824:	81 30       	cpi	r24, 0x01	; 1
    3826:	91 05       	cpc	r25, r1
    3828:	49 f1       	breq	.+82     	; 0x387c <DIO_enuTogglePinValue+0x8c>
    382a:	2c 81       	ldd	r18, Y+4	; 0x04
    382c:	3d 81       	ldd	r19, Y+5	; 0x05
    382e:	22 30       	cpi	r18, 0x02	; 2
    3830:	31 05       	cpc	r19, r1
    3832:	2c f4       	brge	.+10     	; 0x383e <DIO_enuTogglePinValue+0x4e>
    3834:	8c 81       	ldd	r24, Y+4	; 0x04
    3836:	9d 81       	ldd	r25, Y+5	; 0x05
    3838:	00 97       	sbiw	r24, 0x00	; 0
    383a:	61 f0       	breq	.+24     	; 0x3854 <DIO_enuTogglePinValue+0x64>
    383c:	5a c0       	rjmp	.+180    	; 0x38f2 <DIO_enuTogglePinValue+0x102>
    383e:	2c 81       	ldd	r18, Y+4	; 0x04
    3840:	3d 81       	ldd	r19, Y+5	; 0x05
    3842:	22 30       	cpi	r18, 0x02	; 2
    3844:	31 05       	cpc	r19, r1
    3846:	71 f1       	breq	.+92     	; 0x38a4 <DIO_enuTogglePinValue+0xb4>
    3848:	8c 81       	ldd	r24, Y+4	; 0x04
    384a:	9d 81       	ldd	r25, Y+5	; 0x05
    384c:	83 30       	cpi	r24, 0x03	; 3
    384e:	91 05       	cpc	r25, r1
    3850:	e9 f1       	breq	.+122    	; 0x38cc <DIO_enuTogglePinValue+0xdc>
    3852:	4f c0       	rjmp	.+158    	; 0x38f2 <DIO_enuTogglePinValue+0x102>
		{
		case DIO_u8GROUP_A:
			PORTA ^=  (DIO_BIT_MASK << Copy_u8PinID);
    3854:	ab e3       	ldi	r26, 0x3B	; 59
    3856:	b0 e0       	ldi	r27, 0x00	; 0
    3858:	eb e3       	ldi	r30, 0x3B	; 59
    385a:	f0 e0       	ldi	r31, 0x00	; 0
    385c:	80 81       	ld	r24, Z
    385e:	48 2f       	mov	r20, r24
    3860:	8b 81       	ldd	r24, Y+3	; 0x03
    3862:	28 2f       	mov	r18, r24
    3864:	30 e0       	ldi	r19, 0x00	; 0
    3866:	81 e0       	ldi	r24, 0x01	; 1
    3868:	90 e0       	ldi	r25, 0x00	; 0
    386a:	02 2e       	mov	r0, r18
    386c:	02 c0       	rjmp	.+4      	; 0x3872 <DIO_enuTogglePinValue+0x82>
    386e:	88 0f       	add	r24, r24
    3870:	99 1f       	adc	r25, r25
    3872:	0a 94       	dec	r0
    3874:	e2 f7       	brpl	.-8      	; 0x386e <DIO_enuTogglePinValue+0x7e>
    3876:	84 27       	eor	r24, r20
    3878:	8c 93       	st	X, r24
    387a:	3b c0       	rjmp	.+118    	; 0x38f2 <DIO_enuTogglePinValue+0x102>
			break;

		case DIO_u8GROUP_B:
			PORTB ^=  (DIO_BIT_MASK << Copy_u8PinID);
    387c:	a8 e3       	ldi	r26, 0x38	; 56
    387e:	b0 e0       	ldi	r27, 0x00	; 0
    3880:	e8 e3       	ldi	r30, 0x38	; 56
    3882:	f0 e0       	ldi	r31, 0x00	; 0
    3884:	80 81       	ld	r24, Z
    3886:	48 2f       	mov	r20, r24
    3888:	8b 81       	ldd	r24, Y+3	; 0x03
    388a:	28 2f       	mov	r18, r24
    388c:	30 e0       	ldi	r19, 0x00	; 0
    388e:	81 e0       	ldi	r24, 0x01	; 1
    3890:	90 e0       	ldi	r25, 0x00	; 0
    3892:	02 2e       	mov	r0, r18
    3894:	02 c0       	rjmp	.+4      	; 0x389a <DIO_enuTogglePinValue+0xaa>
    3896:	88 0f       	add	r24, r24
    3898:	99 1f       	adc	r25, r25
    389a:	0a 94       	dec	r0
    389c:	e2 f7       	brpl	.-8      	; 0x3896 <DIO_enuTogglePinValue+0xa6>
    389e:	84 27       	eor	r24, r20
    38a0:	8c 93       	st	X, r24
    38a2:	27 c0       	rjmp	.+78     	; 0x38f2 <DIO_enuTogglePinValue+0x102>

			break;

		case DIO_u8GROUP_C:
			PORTC ^=  (DIO_BIT_MASK << Copy_u8PinID);
    38a4:	a5 e3       	ldi	r26, 0x35	; 53
    38a6:	b0 e0       	ldi	r27, 0x00	; 0
    38a8:	e5 e3       	ldi	r30, 0x35	; 53
    38aa:	f0 e0       	ldi	r31, 0x00	; 0
    38ac:	80 81       	ld	r24, Z
    38ae:	48 2f       	mov	r20, r24
    38b0:	8b 81       	ldd	r24, Y+3	; 0x03
    38b2:	28 2f       	mov	r18, r24
    38b4:	30 e0       	ldi	r19, 0x00	; 0
    38b6:	81 e0       	ldi	r24, 0x01	; 1
    38b8:	90 e0       	ldi	r25, 0x00	; 0
    38ba:	02 2e       	mov	r0, r18
    38bc:	02 c0       	rjmp	.+4      	; 0x38c2 <DIO_enuTogglePinValue+0xd2>
    38be:	88 0f       	add	r24, r24
    38c0:	99 1f       	adc	r25, r25
    38c2:	0a 94       	dec	r0
    38c4:	e2 f7       	brpl	.-8      	; 0x38be <DIO_enuTogglePinValue+0xce>
    38c6:	84 27       	eor	r24, r20
    38c8:	8c 93       	st	X, r24
    38ca:	13 c0       	rjmp	.+38     	; 0x38f2 <DIO_enuTogglePinValue+0x102>

			break;

		case DIO_u8GROUP_D:
			PORTD ^=  (DIO_BIT_MASK << Copy_u8PinID);
    38cc:	a2 e3       	ldi	r26, 0x32	; 50
    38ce:	b0 e0       	ldi	r27, 0x00	; 0
    38d0:	e2 e3       	ldi	r30, 0x32	; 50
    38d2:	f0 e0       	ldi	r31, 0x00	; 0
    38d4:	80 81       	ld	r24, Z
    38d6:	48 2f       	mov	r20, r24
    38d8:	8b 81       	ldd	r24, Y+3	; 0x03
    38da:	28 2f       	mov	r18, r24
    38dc:	30 e0       	ldi	r19, 0x00	; 0
    38de:	81 e0       	ldi	r24, 0x01	; 1
    38e0:	90 e0       	ldi	r25, 0x00	; 0
    38e2:	02 2e       	mov	r0, r18
    38e4:	02 c0       	rjmp	.+4      	; 0x38ea <DIO_enuTogglePinValue+0xfa>
    38e6:	88 0f       	add	r24, r24
    38e8:	99 1f       	adc	r25, r25
    38ea:	0a 94       	dec	r0
    38ec:	e2 f7       	brpl	.-8      	; 0x38e6 <DIO_enuTogglePinValue+0xf6>
    38ee:	84 27       	eor	r24, r20
    38f0:	8c 93       	st	X, r24

			break;

		}

		Local_enuErrorState = ES_OK;
    38f2:	19 82       	std	Y+1, r1	; 0x01
    38f4:	02 c0       	rjmp	.+4      	; 0x38fa <DIO_enuTogglePinValue+0x10a>
	}
	else
	{
		Local_enuErrorState = ES_OUT_OF_RANGE;
    38f6:	82 e0       	ldi	r24, 0x02	; 2
    38f8:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    38fa:	89 81       	ldd	r24, Y+1	; 0x01
}
    38fc:	0f 90       	pop	r0
    38fe:	0f 90       	pop	r0
    3900:	0f 90       	pop	r0
    3902:	0f 90       	pop	r0
    3904:	0f 90       	pop	r0
    3906:	cf 91       	pop	r28
    3908:	df 91       	pop	r29
    390a:	08 95       	ret

0000390c <DIO_enuGetPinValue>:

ES_t DIO_enuGetPinValue(u8 Copy_u8GroupID, u8 Copy_u8PinID, u8 * Copy_u8PinValue)
{
    390c:	df 93       	push	r29
    390e:	cf 93       	push	r28
    3910:	cd b7       	in	r28, 0x3d	; 61
    3912:	de b7       	in	r29, 0x3e	; 62
    3914:	27 97       	sbiw	r28, 0x07	; 7
    3916:	0f b6       	in	r0, 0x3f	; 63
    3918:	f8 94       	cli
    391a:	de bf       	out	0x3e, r29	; 62
    391c:	0f be       	out	0x3f, r0	; 63
    391e:	cd bf       	out	0x3d, r28	; 61
    3920:	8a 83       	std	Y+2, r24	; 0x02
    3922:	6b 83       	std	Y+3, r22	; 0x03
    3924:	5d 83       	std	Y+5, r21	; 0x05
    3926:	4c 83       	std	Y+4, r20	; 0x04
	ES_t Local_enuErrorState = ES_NOK;
    3928:	81 e0       	ldi	r24, 0x01	; 1
    392a:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8PinValue != NULL)
    392c:	8c 81       	ldd	r24, Y+4	; 0x04
    392e:	9d 81       	ldd	r25, Y+5	; 0x05
    3930:	00 97       	sbiw	r24, 0x00	; 0
    3932:	09 f4       	brne	.+2      	; 0x3936 <DIO_enuGetPinValue+0x2a>
    3934:	7d c0       	rjmp	.+250    	; 0x3a30 <DIO_enuGetPinValue+0x124>
	{
		if (Copy_u8GroupID <= DIO_u8GROUP_D &&
    3936:	8a 81       	ldd	r24, Y+2	; 0x02
    3938:	84 30       	cpi	r24, 0x04	; 4
    393a:	08 f0       	brcs	.+2      	; 0x393e <DIO_enuGetPinValue+0x32>
    393c:	76 c0       	rjmp	.+236    	; 0x3a2a <DIO_enuGetPinValue+0x11e>
    393e:	8b 81       	ldd	r24, Y+3	; 0x03
    3940:	88 30       	cpi	r24, 0x08	; 8
    3942:	08 f0       	brcs	.+2      	; 0x3946 <DIO_enuGetPinValue+0x3a>
    3944:	72 c0       	rjmp	.+228    	; 0x3a2a <DIO_enuGetPinValue+0x11e>
				Copy_u8PinID <= DIO_u8PIN7)
		{
			switch (Copy_u8GroupID)
    3946:	8a 81       	ldd	r24, Y+2	; 0x02
    3948:	28 2f       	mov	r18, r24
    394a:	30 e0       	ldi	r19, 0x00	; 0
    394c:	3f 83       	std	Y+7, r19	; 0x07
    394e:	2e 83       	std	Y+6, r18	; 0x06
    3950:	4e 81       	ldd	r20, Y+6	; 0x06
    3952:	5f 81       	ldd	r21, Y+7	; 0x07
    3954:	41 30       	cpi	r20, 0x01	; 1
    3956:	51 05       	cpc	r21, r1
    3958:	59 f1       	breq	.+86     	; 0x39b0 <DIO_enuGetPinValue+0xa4>
    395a:	8e 81       	ldd	r24, Y+6	; 0x06
    395c:	9f 81       	ldd	r25, Y+7	; 0x07
    395e:	82 30       	cpi	r24, 0x02	; 2
    3960:	91 05       	cpc	r25, r1
    3962:	34 f4       	brge	.+12     	; 0x3970 <DIO_enuGetPinValue+0x64>
    3964:	2e 81       	ldd	r18, Y+6	; 0x06
    3966:	3f 81       	ldd	r19, Y+7	; 0x07
    3968:	21 15       	cp	r18, r1
    396a:	31 05       	cpc	r19, r1
    396c:	69 f0       	breq	.+26     	; 0x3988 <DIO_enuGetPinValue+0x7c>
    396e:	5b c0       	rjmp	.+182    	; 0x3a26 <DIO_enuGetPinValue+0x11a>
    3970:	4e 81       	ldd	r20, Y+6	; 0x06
    3972:	5f 81       	ldd	r21, Y+7	; 0x07
    3974:	42 30       	cpi	r20, 0x02	; 2
    3976:	51 05       	cpc	r21, r1
    3978:	79 f1       	breq	.+94     	; 0x39d8 <DIO_enuGetPinValue+0xcc>
    397a:	8e 81       	ldd	r24, Y+6	; 0x06
    397c:	9f 81       	ldd	r25, Y+7	; 0x07
    397e:	83 30       	cpi	r24, 0x03	; 3
    3980:	91 05       	cpc	r25, r1
    3982:	09 f4       	brne	.+2      	; 0x3986 <DIO_enuGetPinValue+0x7a>
    3984:	3d c0       	rjmp	.+122    	; 0x3a00 <DIO_enuGetPinValue+0xf4>
    3986:	4f c0       	rjmp	.+158    	; 0x3a26 <DIO_enuGetPinValue+0x11a>
			{
			case DIO_u8GROUP_A:

				*Copy_u8PinValue =  ((PINA >> Copy_u8PinID) & DIO_BIT_MASK);
    3988:	e9 e3       	ldi	r30, 0x39	; 57
    398a:	f0 e0       	ldi	r31, 0x00	; 0
    398c:	80 81       	ld	r24, Z
    398e:	28 2f       	mov	r18, r24
    3990:	30 e0       	ldi	r19, 0x00	; 0
    3992:	8b 81       	ldd	r24, Y+3	; 0x03
    3994:	88 2f       	mov	r24, r24
    3996:	90 e0       	ldi	r25, 0x00	; 0
    3998:	a9 01       	movw	r20, r18
    399a:	02 c0       	rjmp	.+4      	; 0x39a0 <DIO_enuGetPinValue+0x94>
    399c:	55 95       	asr	r21
    399e:	47 95       	ror	r20
    39a0:	8a 95       	dec	r24
    39a2:	e2 f7       	brpl	.-8      	; 0x399c <DIO_enuGetPinValue+0x90>
    39a4:	ca 01       	movw	r24, r20
    39a6:	81 70       	andi	r24, 0x01	; 1
    39a8:	ec 81       	ldd	r30, Y+4	; 0x04
    39aa:	fd 81       	ldd	r31, Y+5	; 0x05
    39ac:	80 83       	st	Z, r24
    39ae:	3b c0       	rjmp	.+118    	; 0x3a26 <DIO_enuGetPinValue+0x11a>

				break;

			case DIO_u8GROUP_B:

				*Copy_u8PinValue =  ((PINB >> Copy_u8PinID) & DIO_BIT_MASK);
    39b0:	e6 e3       	ldi	r30, 0x36	; 54
    39b2:	f0 e0       	ldi	r31, 0x00	; 0
    39b4:	80 81       	ld	r24, Z
    39b6:	28 2f       	mov	r18, r24
    39b8:	30 e0       	ldi	r19, 0x00	; 0
    39ba:	8b 81       	ldd	r24, Y+3	; 0x03
    39bc:	88 2f       	mov	r24, r24
    39be:	90 e0       	ldi	r25, 0x00	; 0
    39c0:	a9 01       	movw	r20, r18
    39c2:	02 c0       	rjmp	.+4      	; 0x39c8 <DIO_enuGetPinValue+0xbc>
    39c4:	55 95       	asr	r21
    39c6:	47 95       	ror	r20
    39c8:	8a 95       	dec	r24
    39ca:	e2 f7       	brpl	.-8      	; 0x39c4 <DIO_enuGetPinValue+0xb8>
    39cc:	ca 01       	movw	r24, r20
    39ce:	81 70       	andi	r24, 0x01	; 1
    39d0:	ec 81       	ldd	r30, Y+4	; 0x04
    39d2:	fd 81       	ldd	r31, Y+5	; 0x05
    39d4:	80 83       	st	Z, r24
    39d6:	27 c0       	rjmp	.+78     	; 0x3a26 <DIO_enuGetPinValue+0x11a>

				break;

			case DIO_u8GROUP_C:

				*Copy_u8PinValue =  ((PINC >> Copy_u8PinID) & DIO_BIT_MASK);
    39d8:	e3 e3       	ldi	r30, 0x33	; 51
    39da:	f0 e0       	ldi	r31, 0x00	; 0
    39dc:	80 81       	ld	r24, Z
    39de:	28 2f       	mov	r18, r24
    39e0:	30 e0       	ldi	r19, 0x00	; 0
    39e2:	8b 81       	ldd	r24, Y+3	; 0x03
    39e4:	88 2f       	mov	r24, r24
    39e6:	90 e0       	ldi	r25, 0x00	; 0
    39e8:	a9 01       	movw	r20, r18
    39ea:	02 c0       	rjmp	.+4      	; 0x39f0 <DIO_enuGetPinValue+0xe4>
    39ec:	55 95       	asr	r21
    39ee:	47 95       	ror	r20
    39f0:	8a 95       	dec	r24
    39f2:	e2 f7       	brpl	.-8      	; 0x39ec <DIO_enuGetPinValue+0xe0>
    39f4:	ca 01       	movw	r24, r20
    39f6:	81 70       	andi	r24, 0x01	; 1
    39f8:	ec 81       	ldd	r30, Y+4	; 0x04
    39fa:	fd 81       	ldd	r31, Y+5	; 0x05
    39fc:	80 83       	st	Z, r24
    39fe:	13 c0       	rjmp	.+38     	; 0x3a26 <DIO_enuGetPinValue+0x11a>

				break;

			case DIO_u8GROUP_D:

				*Copy_u8PinValue =  ((PIND >> Copy_u8PinID) & DIO_BIT_MASK);
    3a00:	e0 e3       	ldi	r30, 0x30	; 48
    3a02:	f0 e0       	ldi	r31, 0x00	; 0
    3a04:	80 81       	ld	r24, Z
    3a06:	28 2f       	mov	r18, r24
    3a08:	30 e0       	ldi	r19, 0x00	; 0
    3a0a:	8b 81       	ldd	r24, Y+3	; 0x03
    3a0c:	88 2f       	mov	r24, r24
    3a0e:	90 e0       	ldi	r25, 0x00	; 0
    3a10:	a9 01       	movw	r20, r18
    3a12:	02 c0       	rjmp	.+4      	; 0x3a18 <DIO_enuGetPinValue+0x10c>
    3a14:	55 95       	asr	r21
    3a16:	47 95       	ror	r20
    3a18:	8a 95       	dec	r24
    3a1a:	e2 f7       	brpl	.-8      	; 0x3a14 <DIO_enuGetPinValue+0x108>
    3a1c:	ca 01       	movw	r24, r20
    3a1e:	81 70       	andi	r24, 0x01	; 1
    3a20:	ec 81       	ldd	r30, Y+4	; 0x04
    3a22:	fd 81       	ldd	r31, Y+5	; 0x05
    3a24:	80 83       	st	Z, r24

				break;
			}
			Local_enuErrorState = ES_OK;
    3a26:	19 82       	std	Y+1, r1	; 0x01
    3a28:	05 c0       	rjmp	.+10     	; 0x3a34 <DIO_enuGetPinValue+0x128>
		}
		else
		{
			Local_enuErrorState = ES_OUT_OF_RANGE;
    3a2a:	82 e0       	ldi	r24, 0x02	; 2
    3a2c:	89 83       	std	Y+1, r24	; 0x01
    3a2e:	02 c0       	rjmp	.+4      	; 0x3a34 <DIO_enuGetPinValue+0x128>
		}
	}
	else
	{
		Local_enuErrorState = ES_NULL_POINTER;
    3a30:	83 e0       	ldi	r24, 0x03	; 3
    3a32:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    3a34:	89 81       	ldd	r24, Y+1	; 0x01
}
    3a36:	27 96       	adiw	r28, 0x07	; 7
    3a38:	0f b6       	in	r0, 0x3f	; 63
    3a3a:	f8 94       	cli
    3a3c:	de bf       	out	0x3e, r29	; 62
    3a3e:	0f be       	out	0x3f, r0	; 63
    3a40:	cd bf       	out	0x3d, r28	; 61
    3a42:	cf 91       	pop	r28
    3a44:	df 91       	pop	r29
    3a46:	08 95       	ret

00003a48 <ADC_enuInit>:

/*static void (* ADC_pfunISRFun)(void * ) = NULL ;
static void * ADC_pvidISRParameter = NULL ;
*/
ES_t ADC_enuInit(void)
{
    3a48:	df 93       	push	r29
    3a4a:	cf 93       	push	r28
    3a4c:	0f 92       	push	r0
    3a4e:	cd b7       	in	r28, 0x3d	; 61
    3a50:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK ;
    3a52:	81 e0       	ldi	r24, 0x01	; 1
    3a54:	89 83       	std	Y+1, r24	; 0x01
#if ADC_REF<= 3 && ADC_ADJ <=1 && ADC_INIT_CHNL <=31
	ADMUX = 0;
    3a56:	e7 e2       	ldi	r30, 0x27	; 39
    3a58:	f0 e0       	ldi	r31, 0x00	; 0
    3a5a:	10 82       	st	Z, r1
	ADMUX |= (ADC_REF<<6);
    3a5c:	a7 e2       	ldi	r26, 0x27	; 39
    3a5e:	b0 e0       	ldi	r27, 0x00	; 0
    3a60:	e7 e2       	ldi	r30, 0x27	; 39
    3a62:	f0 e0       	ldi	r31, 0x00	; 0
    3a64:	80 81       	ld	r24, Z
    3a66:	80 64       	ori	r24, 0x40	; 64
    3a68:	8c 93       	st	X, r24
	ADMUX |= (ADC_ADJ<<5);
    3a6a:	a7 e2       	ldi	r26, 0x27	; 39
    3a6c:	b0 e0       	ldi	r27, 0x00	; 0
    3a6e:	e7 e2       	ldi	r30, 0x27	; 39
    3a70:	f0 e0       	ldi	r31, 0x00	; 0
    3a72:	80 81       	ld	r24, Z
    3a74:	80 62       	ori	r24, 0x20	; 32
    3a76:	8c 93       	st	X, r24
	ADMUX |= (ADC_INIT_CHNL);
    3a78:	a7 e2       	ldi	r26, 0x27	; 39
    3a7a:	b0 e0       	ldi	r27, 0x00	; 0
    3a7c:	e7 e2       	ldi	r30, 0x27	; 39
    3a7e:	f0 e0       	ldi	r31, 0x00	; 0
    3a80:	80 81       	ld	r24, Z
    3a82:	8c 93       	st	X, r24
#else
#error " initial values out of range "
#endif
	ADCSRA = 0;
    3a84:	e6 e2       	ldi	r30, 0x26	; 38
    3a86:	f0 e0       	ldi	r31, 0x00	; 0
    3a88:	10 82       	st	Z, r1
#if ADC_MODE <=CAPTUREEVENT_T1
	ADCSRA |= (1<<5);
	SFIOR &= (0x1F);
	SFIOR |= (ADC_MODE <<5);
#elif ADC_MODE == SINGLE
	ADCSRA &= ~(1<<5);
    3a8a:	a6 e2       	ldi	r26, 0x26	; 38
    3a8c:	b0 e0       	ldi	r27, 0x00	; 0
    3a8e:	e6 e2       	ldi	r30, 0x26	; 38
    3a90:	f0 e0       	ldi	r31, 0x00	; 0
    3a92:	80 81       	ld	r24, Z
    3a94:	8f 7d       	andi	r24, 0xDF	; 223
    3a96:	8c 93       	st	X, r24
#else
#error" initial values out of range"
#endif
#if ADC_INT_MODE <=1 && ADC_PRES <= 7
	ADCSRA |= (ADC_INT_MODE<<3);
    3a98:	a6 e2       	ldi	r26, 0x26	; 38
    3a9a:	b0 e0       	ldi	r27, 0x00	; 0
    3a9c:	e6 e2       	ldi	r30, 0x26	; 38
    3a9e:	f0 e0       	ldi	r31, 0x00	; 0
    3aa0:	80 81       	ld	r24, Z
    3aa2:	8c 93       	st	X, r24
	ADCSRA |= (ADC_PRES);
    3aa4:	a6 e2       	ldi	r26, 0x26	; 38
    3aa6:	b0 e0       	ldi	r27, 0x00	; 0
    3aa8:	e6 e2       	ldi	r30, 0x26	; 38
    3aaa:	f0 e0       	ldi	r31, 0x00	; 0
    3aac:	80 81       	ld	r24, Z
    3aae:	87 60       	ori	r24, 0x07	; 7
    3ab0:	8c 93       	st	X, r24
	Local_enuErrorState = ES_OK;
    3ab2:	19 82       	std	Y+1, r1	; 0x01
#else
#error " initial values out of range "
#endif
	ADCSRA |= (1<<7);			//enable ADC
    3ab4:	a6 e2       	ldi	r26, 0x26	; 38
    3ab6:	b0 e0       	ldi	r27, 0x00	; 0
    3ab8:	e6 e2       	ldi	r30, 0x26	; 38
    3aba:	f0 e0       	ldi	r31, 0x00	; 0
    3abc:	80 81       	ld	r24, Z
    3abe:	80 68       	ori	r24, 0x80	; 128
    3ac0:	8c 93       	st	X, r24
	return  Local_enuErrorState ;
    3ac2:	89 81       	ldd	r24, Y+1	; 0x01
}
    3ac4:	0f 90       	pop	r0
    3ac6:	cf 91       	pop	r28
    3ac8:	df 91       	pop	r29
    3aca:	08 95       	ret

00003acc <ADC_enuStartConversion>:
	ADMUX |= Copy_u8ChannelID;
	return  Local_enuErrorState ;
}*/

ES_t ADC_enuStartConversion(void)
{
    3acc:	df 93       	push	r29
    3ace:	cf 93       	push	r28
    3ad0:	0f 92       	push	r0
    3ad2:	cd b7       	in	r28, 0x3d	; 61
    3ad4:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_OK ;
    3ad6:	19 82       	std	Y+1, r1	; 0x01

	ADCSRA |= (1<<6);
    3ad8:	a6 e2       	ldi	r26, 0x26	; 38
    3ada:	b0 e0       	ldi	r27, 0x00	; 0
    3adc:	e6 e2       	ldi	r30, 0x26	; 38
    3ade:	f0 e0       	ldi	r31, 0x00	; 0
    3ae0:	80 81       	ld	r24, Z
    3ae2:	80 64       	ori	r24, 0x40	; 64
    3ae4:	8c 93       	st	X, r24
	return  Local_enuErrorState ;
    3ae6:	89 81       	ldd	r24, Y+1	; 0x01
}
    3ae8:	0f 90       	pop	r0
    3aea:	cf 91       	pop	r28
    3aec:	df 91       	pop	r29
    3aee:	08 95       	ret

00003af0 <ADC_enuRead>:

ES_t ADC_enuRead(u16 * Copy_pu16Value)
{
    3af0:	df 93       	push	r29
    3af2:	cf 93       	push	r28
    3af4:	00 d0       	rcall	.+0      	; 0x3af6 <ADC_enuRead+0x6>
    3af6:	00 d0       	rcall	.+0      	; 0x3af8 <ADC_enuRead+0x8>
    3af8:	cd b7       	in	r28, 0x3d	; 61
    3afa:	de b7       	in	r29, 0x3e	; 62
    3afc:	9b 83       	std	Y+3, r25	; 0x03
    3afe:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK ;
    3b00:	81 e0       	ldi	r24, 0x01	; 1
    3b02:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_pu16Value==NULL)	return ES_NULL_POINTER;
    3b04:	8a 81       	ldd	r24, Y+2	; 0x02
    3b06:	9b 81       	ldd	r25, Y+3	; 0x03
    3b08:	00 97       	sbiw	r24, 0x00	; 0
    3b0a:	19 f4       	brne	.+6      	; 0x3b12 <ADC_enuRead+0x22>
    3b0c:	83 e0       	ldi	r24, 0x03	; 3
    3b0e:	8c 83       	std	Y+4, r24	; 0x04
    3b10:	45 c0       	rjmp	.+138    	; 0x3b9c <ADC_enuRead+0xac>
	while(!(((ADCSRA)>>4)&1));
    3b12:	e6 e2       	ldi	r30, 0x26	; 38
    3b14:	f0 e0       	ldi	r31, 0x00	; 0
    3b16:	80 81       	ld	r24, Z
    3b18:	82 95       	swap	r24
    3b1a:	8f 70       	andi	r24, 0x0F	; 15
    3b1c:	88 2f       	mov	r24, r24
    3b1e:	90 e0       	ldi	r25, 0x00	; 0
    3b20:	81 70       	andi	r24, 0x01	; 1
    3b22:	90 70       	andi	r25, 0x00	; 0
    3b24:	00 97       	sbiw	r24, 0x00	; 0
    3b26:	a9 f3       	breq	.-22     	; 0x3b12 <ADC_enuRead+0x22>
	if(((ADMUX>>5)&1)==LEFT_ADJ)	* Copy_pu16Value = (ADCL>>6)|((u16)ADCH<<2);
    3b28:	e7 e2       	ldi	r30, 0x27	; 39
    3b2a:	f0 e0       	ldi	r31, 0x00	; 0
    3b2c:	80 81       	ld	r24, Z
    3b2e:	82 95       	swap	r24
    3b30:	86 95       	lsr	r24
    3b32:	87 70       	andi	r24, 0x07	; 7
    3b34:	88 2f       	mov	r24, r24
    3b36:	90 e0       	ldi	r25, 0x00	; 0
    3b38:	81 70       	andi	r24, 0x01	; 1
    3b3a:	90 70       	andi	r25, 0x00	; 0
    3b3c:	88 23       	and	r24, r24
    3b3e:	c9 f0       	breq	.+50     	; 0x3b72 <ADC_enuRead+0x82>
    3b40:	e4 e2       	ldi	r30, 0x24	; 36
    3b42:	f0 e0       	ldi	r31, 0x00	; 0
    3b44:	80 81       	ld	r24, Z
    3b46:	82 95       	swap	r24
    3b48:	86 95       	lsr	r24
    3b4a:	86 95       	lsr	r24
    3b4c:	83 70       	andi	r24, 0x03	; 3
    3b4e:	28 2f       	mov	r18, r24
    3b50:	30 e0       	ldi	r19, 0x00	; 0
    3b52:	e5 e2       	ldi	r30, 0x25	; 37
    3b54:	f0 e0       	ldi	r31, 0x00	; 0
    3b56:	80 81       	ld	r24, Z
    3b58:	88 2f       	mov	r24, r24
    3b5a:	90 e0       	ldi	r25, 0x00	; 0
    3b5c:	88 0f       	add	r24, r24
    3b5e:	99 1f       	adc	r25, r25
    3b60:	88 0f       	add	r24, r24
    3b62:	99 1f       	adc	r25, r25
    3b64:	82 2b       	or	r24, r18
    3b66:	93 2b       	or	r25, r19
    3b68:	ea 81       	ldd	r30, Y+2	; 0x02
    3b6a:	fb 81       	ldd	r31, Y+3	; 0x03
    3b6c:	91 83       	std	Z+1, r25	; 0x01
    3b6e:	80 83       	st	Z, r24
    3b70:	12 c0       	rjmp	.+36     	; 0x3b96 <ADC_enuRead+0xa6>
	else * Copy_pu16Value = ADCL | ((u16)ADCH<<8);
    3b72:	e4 e2       	ldi	r30, 0x24	; 36
    3b74:	f0 e0       	ldi	r31, 0x00	; 0
    3b76:	80 81       	ld	r24, Z
    3b78:	28 2f       	mov	r18, r24
    3b7a:	30 e0       	ldi	r19, 0x00	; 0
    3b7c:	e5 e2       	ldi	r30, 0x25	; 37
    3b7e:	f0 e0       	ldi	r31, 0x00	; 0
    3b80:	80 81       	ld	r24, Z
    3b82:	88 2f       	mov	r24, r24
    3b84:	90 e0       	ldi	r25, 0x00	; 0
    3b86:	98 2f       	mov	r25, r24
    3b88:	88 27       	eor	r24, r24
    3b8a:	82 2b       	or	r24, r18
    3b8c:	93 2b       	or	r25, r19
    3b8e:	ea 81       	ldd	r30, Y+2	; 0x02
    3b90:	fb 81       	ldd	r31, Y+3	; 0x03
    3b92:	91 83       	std	Z+1, r25	; 0x01
    3b94:	80 83       	st	Z, r24
	Local_enuErrorState = ES_OK ;
    3b96:	19 82       	std	Y+1, r1	; 0x01
	return  Local_enuErrorState ;
    3b98:	89 81       	ldd	r24, Y+1	; 0x01
    3b9a:	8c 83       	std	Y+4, r24	; 0x04
    3b9c:	8c 81       	ldd	r24, Y+4	; 0x04
}
    3b9e:	0f 90       	pop	r0
    3ba0:	0f 90       	pop	r0
    3ba2:	0f 90       	pop	r0
    3ba4:	0f 90       	pop	r0
    3ba6:	cf 91       	pop	r28
    3ba8:	df 91       	pop	r29
    3baa:	08 95       	ret

00003bac <ADC_enuPollingRead>:
	else if(Copy_pfunAppFun == NULL) Local_enuErrorState = ES_NULL_POINTER;
	return  Local_enuErrorState ;
}*/

ES_t ADC_enuPollingRead(u16 * Copy_pu16ADCValue)
{
    3bac:	df 93       	push	r29
    3bae:	cf 93       	push	r28
    3bb0:	00 d0       	rcall	.+0      	; 0x3bb2 <ADC_enuPollingRead+0x6>
    3bb2:	00 d0       	rcall	.+0      	; 0x3bb4 <ADC_enuPollingRead+0x8>
    3bb4:	cd b7       	in	r28, 0x3d	; 61
    3bb6:	de b7       	in	r29, 0x3e	; 62
    3bb8:	9b 83       	std	Y+3, r25	; 0x03
    3bba:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK ;
    3bbc:	81 e0       	ldi	r24, 0x01	; 1
    3bbe:	89 83       	std	Y+1, r24	; 0x01
	if (Copy_pu16ADCValue==NULL)	return ES_NULL_POINTER;
    3bc0:	8a 81       	ldd	r24, Y+2	; 0x02
    3bc2:	9b 81       	ldd	r25, Y+3	; 0x03
    3bc4:	00 97       	sbiw	r24, 0x00	; 0
    3bc6:	19 f4       	brne	.+6      	; 0x3bce <ADC_enuPollingRead+0x22>
    3bc8:	83 e0       	ldi	r24, 0x03	; 3
    3bca:	8c 83       	std	Y+4, r24	; 0x04
    3bcc:	4c c0       	rjmp	.+152    	; 0x3c66 <ADC_enuPollingRead+0xba>
	while(!((ADCSRA>>4)&1));
    3bce:	e6 e2       	ldi	r30, 0x26	; 38
    3bd0:	f0 e0       	ldi	r31, 0x00	; 0
    3bd2:	80 81       	ld	r24, Z
    3bd4:	82 95       	swap	r24
    3bd6:	8f 70       	andi	r24, 0x0F	; 15
    3bd8:	88 2f       	mov	r24, r24
    3bda:	90 e0       	ldi	r25, 0x00	; 0
    3bdc:	81 70       	andi	r24, 0x01	; 1
    3bde:	90 70       	andi	r25, 0x00	; 0
    3be0:	00 97       	sbiw	r24, 0x00	; 0
    3be2:	a9 f3       	breq	.-22     	; 0x3bce <ADC_enuPollingRead+0x22>
	if(((ADMUX>>5)&1)==LEFT_ADJ)
    3be4:	e7 e2       	ldi	r30, 0x27	; 39
    3be6:	f0 e0       	ldi	r31, 0x00	; 0
    3be8:	80 81       	ld	r24, Z
    3bea:	82 95       	swap	r24
    3bec:	86 95       	lsr	r24
    3bee:	87 70       	andi	r24, 0x07	; 7
    3bf0:	88 2f       	mov	r24, r24
    3bf2:	90 e0       	ldi	r25, 0x00	; 0
    3bf4:	81 70       	andi	r24, 0x01	; 1
    3bf6:	90 70       	andi	r25, 0x00	; 0
    3bf8:	88 23       	and	r24, r24
    3bfa:	c9 f0       	breq	.+50     	; 0x3c2e <ADC_enuPollingRead+0x82>
	{

		* Copy_pu16ADCValue = (ADCL>>6)|((u16)ADCH<<2);
    3bfc:	e4 e2       	ldi	r30, 0x24	; 36
    3bfe:	f0 e0       	ldi	r31, 0x00	; 0
    3c00:	80 81       	ld	r24, Z
    3c02:	82 95       	swap	r24
    3c04:	86 95       	lsr	r24
    3c06:	86 95       	lsr	r24
    3c08:	83 70       	andi	r24, 0x03	; 3
    3c0a:	28 2f       	mov	r18, r24
    3c0c:	30 e0       	ldi	r19, 0x00	; 0
    3c0e:	e5 e2       	ldi	r30, 0x25	; 37
    3c10:	f0 e0       	ldi	r31, 0x00	; 0
    3c12:	80 81       	ld	r24, Z
    3c14:	88 2f       	mov	r24, r24
    3c16:	90 e0       	ldi	r25, 0x00	; 0
    3c18:	88 0f       	add	r24, r24
    3c1a:	99 1f       	adc	r25, r25
    3c1c:	88 0f       	add	r24, r24
    3c1e:	99 1f       	adc	r25, r25
    3c20:	82 2b       	or	r24, r18
    3c22:	93 2b       	or	r25, r19
    3c24:	ea 81       	ldd	r30, Y+2	; 0x02
    3c26:	fb 81       	ldd	r31, Y+3	; 0x03
    3c28:	91 83       	std	Z+1, r25	; 0x01
    3c2a:	80 83       	st	Z, r24
    3c2c:	12 c0       	rjmp	.+36     	; 0x3c52 <ADC_enuPollingRead+0xa6>
	}
	else
	{
		* Copy_pu16ADCValue = ADCL | ((u16)ADCH<<8);
    3c2e:	e4 e2       	ldi	r30, 0x24	; 36
    3c30:	f0 e0       	ldi	r31, 0x00	; 0
    3c32:	80 81       	ld	r24, Z
    3c34:	28 2f       	mov	r18, r24
    3c36:	30 e0       	ldi	r19, 0x00	; 0
    3c38:	e5 e2       	ldi	r30, 0x25	; 37
    3c3a:	f0 e0       	ldi	r31, 0x00	; 0
    3c3c:	80 81       	ld	r24, Z
    3c3e:	88 2f       	mov	r24, r24
    3c40:	90 e0       	ldi	r25, 0x00	; 0
    3c42:	98 2f       	mov	r25, r24
    3c44:	88 27       	eor	r24, r24
    3c46:	82 2b       	or	r24, r18
    3c48:	93 2b       	or	r25, r19
    3c4a:	ea 81       	ldd	r30, Y+2	; 0x02
    3c4c:	fb 81       	ldd	r31, Y+3	; 0x03
    3c4e:	91 83       	std	Z+1, r25	; 0x01
    3c50:	80 83       	st	Z, r24
	}
	ADCSRA |= (1<<4);
    3c52:	a6 e2       	ldi	r26, 0x26	; 38
    3c54:	b0 e0       	ldi	r27, 0x00	; 0
    3c56:	e6 e2       	ldi	r30, 0x26	; 38
    3c58:	f0 e0       	ldi	r31, 0x00	; 0
    3c5a:	80 81       	ld	r24, Z
    3c5c:	80 61       	ori	r24, 0x10	; 16
    3c5e:	8c 93       	st	X, r24
	Local_enuErrorState = ES_OK ;
    3c60:	19 82       	std	Y+1, r1	; 0x01

	return  Local_enuErrorState ;
    3c62:	89 81       	ldd	r24, Y+1	; 0x01
    3c64:	8c 83       	std	Y+4, r24	; 0x04
    3c66:	8c 81       	ldd	r24, Y+4	; 0x04
}
    3c68:	0f 90       	pop	r0
    3c6a:	0f 90       	pop	r0
    3c6c:	0f 90       	pop	r0
    3c6e:	0f 90       	pop	r0
    3c70:	cf 91       	pop	r28
    3c72:	df 91       	pop	r29
    3c74:	08 95       	ret

00003c76 <S7SEG2_enuInit>:
#include "../../LIBRARY/errorState.h"
#include "../../LIBRARY/stdTypes.h"
#include "two_7SEG_priv.h"
#include "two_7SEG_config.h"
ES_t S7SEG2_enuInit(void)
{
    3c76:	df 93       	push	r29
    3c78:	cf 93       	push	r28
    3c7a:	0f 92       	push	r0
    3c7c:	cd b7       	in	r28, 0x3d	; 61
    3c7e:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState= ES_NOK;
    3c80:	81 e0       	ldi	r24, 0x01	; 1
    3c82:	89 83       	std	Y+1, r24	; 0x01

	Group_dir = DIO_u8GROUPOUTPUT;
    3c84:	e4 e3       	ldi	r30, 0x34	; 52
    3c86:	f0 e0       	ldi	r31, 0x00	; 0
    3c88:	8f ef       	ldi	r24, 0xFF	; 255
    3c8a:	80 83       	st	Z, r24
	Local_enuErrorState = ES_OK;
    3c8c:	19 82       	std	Y+1, r1	; 0x01

	return Local_enuErrorState;
    3c8e:	89 81       	ldd	r24, Y+1	; 0x01

}
    3c90:	0f 90       	pop	r0
    3c92:	cf 91       	pop	r28
    3c94:	df 91       	pop	r29
    3c96:	08 95       	ret

00003c98 <S7SEG2_enuSendInteger>:

ES_t S7SEG2_enuSendInteger(u8 Copy_u8Integer)
{
    3c98:	df 93       	push	r29
    3c9a:	cf 93       	push	r28
    3c9c:	00 d0       	rcall	.+0      	; 0x3c9e <S7SEG2_enuSendInteger+0x6>
    3c9e:	cd b7       	in	r28, 0x3d	; 61
    3ca0:	de b7       	in	r29, 0x3e	; 62
    3ca2:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState= ES_NOK;
    3ca4:	81 e0       	ldi	r24, 0x01	; 1
    3ca6:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8Integer<=99)
    3ca8:	8a 81       	ldd	r24, Y+2	; 0x02
    3caa:	84 36       	cpi	r24, 0x64	; 100
    3cac:	f0 f4       	brcc	.+60     	; 0x3cea <S7SEG2_enuSendInteger+0x52>
	{
		Group = (Copy_u8Integer % 10)|(((Copy_u8Integer/10)%10)<<4);
    3cae:	e5 e3       	ldi	r30, 0x35	; 53
    3cb0:	f0 e0       	ldi	r31, 0x00	; 0
    3cb2:	8a 81       	ldd	r24, Y+2	; 0x02
    3cb4:	9a e0       	ldi	r25, 0x0A	; 10
    3cb6:	69 2f       	mov	r22, r25
    3cb8:	0e 94 74 21 	call	0x42e8	; 0x42e8 <__udivmodqi4>
    3cbc:	89 2f       	mov	r24, r25
    3cbe:	28 2f       	mov	r18, r24
    3cc0:	8a 81       	ldd	r24, Y+2	; 0x02
    3cc2:	9a e0       	ldi	r25, 0x0A	; 10
    3cc4:	69 2f       	mov	r22, r25
    3cc6:	0e 94 74 21 	call	0x42e8	; 0x42e8 <__udivmodqi4>
    3cca:	9a e0       	ldi	r25, 0x0A	; 10
    3ccc:	69 2f       	mov	r22, r25
    3cce:	0e 94 74 21 	call	0x42e8	; 0x42e8 <__udivmodqi4>
    3cd2:	89 2f       	mov	r24, r25
    3cd4:	88 2f       	mov	r24, r24
    3cd6:	90 e0       	ldi	r25, 0x00	; 0
    3cd8:	82 95       	swap	r24
    3cda:	92 95       	swap	r25
    3cdc:	90 7f       	andi	r25, 0xF0	; 240
    3cde:	98 27       	eor	r25, r24
    3ce0:	80 7f       	andi	r24, 0xF0	; 240
    3ce2:	98 27       	eor	r25, r24
    3ce4:	82 2b       	or	r24, r18
    3ce6:	80 83       	st	Z, r24
		Local_enuErrorState=ES_OK;
    3ce8:	19 82       	std	Y+1, r1	; 0x01

	}

	return Local_enuErrorState;
    3cea:	89 81       	ldd	r24, Y+1	; 0x01

}
    3cec:	0f 90       	pop	r0
    3cee:	0f 90       	pop	r0
    3cf0:	cf 91       	pop	r28
    3cf2:	df 91       	pop	r29
    3cf4:	08 95       	ret

00003cf6 <TEMP_voidInit>:

#include "Temp_sensor_config.h"
#include "Temp_sensor_priv.h"

ES_t TEMP_voidInit(void)
{
    3cf6:	df 93       	push	r29
    3cf8:	cf 93       	push	r28
    3cfa:	0f 92       	push	r0
    3cfc:	cd b7       	in	r28, 0x3d	; 61
    3cfe:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_ennErrorState=ES_NOK;
    3d00:	81 e0       	ldi	r24, 0x01	; 1
    3d02:	89 83       	std	Y+1, r24	; 0x01
	ADC_enuInit();
    3d04:	0e 94 24 1d 	call	0x3a48	; 0x3a48 <ADC_enuInit>

	Local_ennErrorState=ES_OK;
    3d08:	19 82       	std	Y+1, r1	; 0x01


	return Local_ennErrorState;
    3d0a:	89 81       	ldd	r24, Y+1	; 0x01
}
    3d0c:	0f 90       	pop	r0
    3d0e:	cf 91       	pop	r28
    3d10:	df 91       	pop	r29
    3d12:	08 95       	ret

00003d14 <TEMP_u16GetValue>:


ES_t TEMP_u16GetValue(u16*Copy_pu16tempvalue)
{
    3d14:	2f 92       	push	r2
    3d16:	3f 92       	push	r3
    3d18:	4f 92       	push	r4
    3d1a:	5f 92       	push	r5
    3d1c:	6f 92       	push	r6
    3d1e:	7f 92       	push	r7
    3d20:	8f 92       	push	r8
    3d22:	9f 92       	push	r9
    3d24:	af 92       	push	r10
    3d26:	bf 92       	push	r11
    3d28:	cf 92       	push	r12
    3d2a:	df 92       	push	r13
    3d2c:	ef 92       	push	r14
    3d2e:	ff 92       	push	r15
    3d30:	0f 93       	push	r16
    3d32:	1f 93       	push	r17
    3d34:	df 93       	push	r29
    3d36:	cf 93       	push	r28
    3d38:	00 d0       	rcall	.+0      	; 0x3d3a <TEMP_u16GetValue+0x26>
    3d3a:	00 d0       	rcall	.+0      	; 0x3d3c <TEMP_u16GetValue+0x28>
    3d3c:	0f 92       	push	r0
    3d3e:	cd b7       	in	r28, 0x3d	; 61
    3d40:	de b7       	in	r29, 0x3e	; 62
    3d42:	9d 83       	std	Y+5, r25	; 0x05
    3d44:	8c 83       	std	Y+4, r24	; 0x04
	ES_t Local_ennErrorState=ES_NOK;
    3d46:	81 e0       	ldi	r24, 0x01	; 1
    3d48:	89 83       	std	Y+1, r24	; 0x01

	if (NULL!=Copy_pu16tempvalue )
    3d4a:	8c 81       	ldd	r24, Y+4	; 0x04
    3d4c:	9d 81       	ldd	r25, Y+5	; 0x05
    3d4e:	00 97       	sbiw	r24, 0x00	; 0
    3d50:	09 f4       	brne	.+2      	; 0x3d54 <TEMP_u16GetValue+0x40>
    3d52:	57 c0       	rjmp	.+174    	; 0x3e02 <TEMP_u16GetValue+0xee>
	{
		u16 Local_u16Analogve;

		ADC_enuStartConversion();
    3d54:	0e 94 66 1d 	call	0x3acc	; 0x3acc <ADC_enuStartConversion>
		ADC_enuPollingRead(&Local_u16Analogve);
    3d58:	ce 01       	movw	r24, r28
    3d5a:	02 96       	adiw	r24, 0x02	; 2
    3d5c:	0e 94 d6 1d 	call	0x3bac	; 0x3bac <ADC_enuPollingRead>
		*Copy_pu16tempvalue=((u64)Local_u16Analogve*150*5)/((u64)1023*1.5);
    3d60:	8a 81       	ldd	r24, Y+2	; 0x02
    3d62:	9b 81       	ldd	r25, Y+3	; 0x03
    3d64:	5c 01       	movw	r10, r24
    3d66:	cc 24       	eor	r12, r12
    3d68:	dd 24       	eor	r13, r13
    3d6a:	ee 24       	eor	r14, r14
    3d6c:	ff 24       	eor	r15, r15
    3d6e:	87 01       	movw	r16, r14
    3d70:	2a 2d       	mov	r18, r10
    3d72:	3b 2d       	mov	r19, r11
    3d74:	4c 2d       	mov	r20, r12
    3d76:	5d 2d       	mov	r21, r13
    3d78:	6e 2d       	mov	r22, r14
    3d7a:	7f 2d       	mov	r23, r15
    3d7c:	80 2f       	mov	r24, r16
    3d7e:	91 2f       	mov	r25, r17
    3d80:	0f 2e       	mov	r0, r31
    3d82:	fe ee       	ldi	r31, 0xEE	; 238
    3d84:	af 2e       	mov	r10, r31
    3d86:	f0 2d       	mov	r31, r0
    3d88:	bb 24       	eor	r11, r11
    3d8a:	68 94       	set
    3d8c:	b1 f8       	bld	r11, 1
    3d8e:	cc 24       	eor	r12, r12
    3d90:	dd 24       	eor	r13, r13
    3d92:	ee 24       	eor	r14, r14
    3d94:	ff 24       	eor	r15, r15
    3d96:	00 e0       	ldi	r16, 0x00	; 0
    3d98:	10 e0       	ldi	r17, 0x00	; 0
    3d9a:	0e 94 49 00 	call	0x92	; 0x92 <__muldi3>
    3d9e:	22 2e       	mov	r2, r18
    3da0:	33 2e       	mov	r3, r19
    3da2:	44 2e       	mov	r4, r20
    3da4:	55 2e       	mov	r5, r21
    3da6:	66 2e       	mov	r6, r22
    3da8:	77 2e       	mov	r7, r23
    3daa:	88 2e       	mov	r8, r24
    3dac:	99 2e       	mov	r9, r25
    3dae:	a2 2c       	mov	r10, r2
    3db0:	b3 2c       	mov	r11, r3
    3db2:	c4 2c       	mov	r12, r4
    3db4:	d5 2c       	mov	r13, r5
    3db6:	e6 2c       	mov	r14, r6
    3db8:	f7 2c       	mov	r15, r7
    3dba:	08 2d       	mov	r16, r8
    3dbc:	19 2d       	mov	r17, r9
    3dbe:	2a 2d       	mov	r18, r10
    3dc0:	3b 2d       	mov	r19, r11
    3dc2:	4c 2d       	mov	r20, r12
    3dc4:	5d 2d       	mov	r21, r13
    3dc6:	6e 2d       	mov	r22, r14
    3dc8:	7f 2d       	mov	r23, r15
    3dca:	80 2f       	mov	r24, r16
    3dcc:	91 2f       	mov	r25, r17
    3dce:	0e 94 ef 01 	call	0x3de	; 0x3de <__floatundisf>
    3dd2:	dc 01       	movw	r26, r24
    3dd4:	cb 01       	movw	r24, r22
    3dd6:	bc 01       	movw	r22, r24
    3dd8:	cd 01       	movw	r24, r26
    3dda:	20 e0       	ldi	r18, 0x00	; 0
    3ddc:	30 ed       	ldi	r19, 0xD0	; 208
    3dde:	4f eb       	ldi	r20, 0xBF	; 191
    3de0:	54 e4       	ldi	r21, 0x44	; 68
    3de2:	0e 94 6f 05 	call	0xade	; 0xade <__divsf3>
    3de6:	dc 01       	movw	r26, r24
    3de8:	cb 01       	movw	r24, r22
    3dea:	bc 01       	movw	r22, r24
    3dec:	cd 01       	movw	r24, r26
    3dee:	0e 94 c3 01 	call	0x386	; 0x386 <__fixunssfsi>
    3df2:	dc 01       	movw	r26, r24
    3df4:	cb 01       	movw	r24, r22
    3df6:	ec 81       	ldd	r30, Y+4	; 0x04
    3df8:	fd 81       	ldd	r31, Y+5	; 0x05
    3dfa:	91 83       	std	Z+1, r25	; 0x01
    3dfc:	80 83       	st	Z, r24

		Local_ennErrorState=ES_OK;
    3dfe:	19 82       	std	Y+1, r1	; 0x01
    3e00:	02 c0       	rjmp	.+4      	; 0x3e06 <TEMP_u16GetValue+0xf2>


	}
	else
	{
		Local_ennErrorState=ES_NULL_POINTER;
    3e02:	83 e0       	ldi	r24, 0x03	; 3
    3e04:	89 83       	std	Y+1, r24	; 0x01

	}
	return Local_ennErrorState;
    3e06:	89 81       	ldd	r24, Y+1	; 0x01
}
    3e08:	0f 90       	pop	r0
    3e0a:	0f 90       	pop	r0
    3e0c:	0f 90       	pop	r0
    3e0e:	0f 90       	pop	r0
    3e10:	0f 90       	pop	r0
    3e12:	cf 91       	pop	r28
    3e14:	df 91       	pop	r29
    3e16:	1f 91       	pop	r17
    3e18:	0f 91       	pop	r16
    3e1a:	ff 90       	pop	r15
    3e1c:	ef 90       	pop	r14
    3e1e:	df 90       	pop	r13
    3e20:	cf 90       	pop	r12
    3e22:	bf 90       	pop	r11
    3e24:	af 90       	pop	r10
    3e26:	9f 90       	pop	r9
    3e28:	8f 90       	pop	r8
    3e2a:	7f 90       	pop	r7
    3e2c:	6f 90       	pop	r6
    3e2e:	5f 90       	pop	r5
    3e30:	4f 90       	pop	r4
    3e32:	3f 90       	pop	r3
    3e34:	2f 90       	pop	r2
    3e36:	08 95       	ret

00003e38 <EXTI_ONOFFfun>:
typedef enum{ON,OFF}Power;

Power Controller_PowerMood=OFF;

void EXTI_ONOFFfun()
{
    3e38:	df 93       	push	r29
    3e3a:	cf 93       	push	r28
    3e3c:	cd b7       	in	r28, 0x3d	; 61
    3e3e:	de b7       	in	r29, 0x3e	; 62

	if(Controller_PowerMood == OFF)
    3e40:	80 91 74 01 	lds	r24, 0x0174
    3e44:	81 30       	cpi	r24, 0x01	; 1
    3e46:	71 f4       	brne	.+28     	; 0x3e64 <EXTI_ONOFFfun+0x2c>
	{
		EXTI_enuEnableInterrupt(&EXTI_AstrEXTIConfig[0]);
    3e48:	89 e6       	ldi	r24, 0x69	; 105
    3e4a:	91 e0       	ldi	r25, 0x01	; 1
    3e4c:	0e 94 3d 17 	call	0x2e7a	; 0x2e7a <EXTI_enuEnableInterrupt>
		EXTI_enuEnableInterrupt(&EXTI_AstrEXTIConfig[1]);
    3e50:	8c e6       	ldi	r24, 0x6C	; 108
    3e52:	91 e0       	ldi	r25, 0x01	; 1
    3e54:	0e 94 3d 17 	call	0x2e7a	; 0x2e7a <EXTI_enuEnableInterrupt>
		TIMER2_enuEnableInterrupt(TIM2_OVERFLOW_INTER);
    3e58:	80 e4       	ldi	r24, 0x40	; 64
    3e5a:	0e 94 94 13 	call	0x2728	; 0x2728 <TIMER2_enuEnableInterrupt>
		Controller_PowerMood = ON;
    3e5e:	10 92 74 01 	sts	0x0174, r1
    3e62:	25 c0       	rjmp	.+74     	; 0x3eae <EXTI_ONOFFfun+0x76>
	}
	else
	{
		EXTI_enuDisableInterrupt(&EXTI_AstrEXTIConfig[0]);
    3e64:	89 e6       	ldi	r24, 0x69	; 105
    3e66:	91 e0       	ldi	r25, 0x01	; 1
    3e68:	0e 94 84 17 	call	0x2f08	; 0x2f08 <EXTI_enuDisableInterrupt>
		EXTI_enuDisableInterrupt(&EXTI_AstrEXTIConfig[1]);
    3e6c:	8c e6       	ldi	r24, 0x6C	; 108
    3e6e:	91 e0       	ldi	r25, 0x01	; 1
    3e70:	0e 94 84 17 	call	0x2f08	; 0x2f08 <EXTI_enuDisableInterrupt>
		TIMER2_enuDisableInterrupt(TIM2_OVERFLOW_INTER);
    3e74:	80 e4       	ldi	r24, 0x40	; 64
    3e76:	0e 94 b4 13 	call	0x2768	; 0x2768 <TIMER2_enuDisableInterrupt>
		Controller_PowerMood = OFF;
    3e7a:	81 e0       	ldi	r24, 0x01	; 1
    3e7c:	80 93 74 01 	sts	0x0174, r24
		S7SEG2_enuSendInteger(0);
    3e80:	80 e0       	ldi	r24, 0x00	; 0
    3e82:	0e 94 4c 1e 	call	0x3c98	; 0x3c98 <S7SEG2_enuSendInteger>
		DIO_enuSetPinValue(Heater_Pin,DIO_u8LOW);
    3e86:	80 e0       	ldi	r24, 0x00	; 0
    3e88:	61 e0       	ldi	r22, 0x01	; 1
    3e8a:	40 e0       	ldi	r20, 0x00	; 0
    3e8c:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>
		DIO_enuSetPinValue(HeaterLed_Pin,DIO_u8LOW);
    3e90:	81 e0       	ldi	r24, 0x01	; 1
    3e92:	61 e0       	ldi	r22, 0x01	; 1
    3e94:	40 e0       	ldi	r20, 0x00	; 0
    3e96:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>
		DIO_enuSetPinValue(CoolantLed_Pin,DIO_u8LOW);
    3e9a:	81 e0       	ldi	r24, 0x01	; 1
    3e9c:	63 e0       	ldi	r22, 0x03	; 3
    3e9e:	40 e0       	ldi	r20, 0x00	; 0
    3ea0:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>
		DIO_enuSetPinValue(Coolant_Pin,DIO_u8LOW);
    3ea4:	81 e0       	ldi	r24, 0x01	; 1
    3ea6:	60 e0       	ldi	r22, 0x00	; 0
    3ea8:	40 e0       	ldi	r20, 0x00	; 0
    3eaa:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>
	}
}
    3eae:	cf 91       	pop	r28
    3eb0:	df 91       	pop	r29
    3eb2:	08 95       	ret

00003eb4 <IncreaseTemp>:

void IncreaseTemp()
{
    3eb4:	df 93       	push	r29
    3eb6:	cf 93       	push	r28
    3eb8:	cd b7       	in	r28, 0x3d	; 61
    3eba:	de b7       	in	r29, 0x3e	; 62


	if(tempre_set<75 && TempSetCounter)
    3ebc:	80 91 73 01 	lds	r24, 0x0173
    3ec0:	8b 34       	cpi	r24, 0x4B	; 75
    3ec2:	58 f4       	brcc	.+22     	; 0x3eda <IncreaseTemp+0x26>
    3ec4:	80 91 8a 01 	lds	r24, 0x018A
    3ec8:	90 91 8b 01 	lds	r25, 0x018B
    3ecc:	00 97       	sbiw	r24, 0x00	; 0
    3ece:	29 f0       	breq	.+10     	; 0x3eda <IncreaseTemp+0x26>
	{
		tempre_set += 5;
    3ed0:	80 91 73 01 	lds	r24, 0x0173
    3ed4:	8b 5f       	subi	r24, 0xFB	; 251
    3ed6:	80 93 73 01 	sts	0x0173, r24
	}
	TempSetCounter = OVFSTempSetCounts;
    3eda:	81 e3       	ldi	r24, 0x31	; 49
    3edc:	91 e0       	ldi	r25, 0x01	; 1
    3ede:	90 93 8b 01 	sts	0x018B, r25
    3ee2:	80 93 8a 01 	sts	0x018A, r24
}
    3ee6:	cf 91       	pop	r28
    3ee8:	df 91       	pop	r29
    3eea:	08 95       	ret

00003eec <DecreaseTemp>:

void DecreaseTemp()
{
    3eec:	df 93       	push	r29
    3eee:	cf 93       	push	r28
    3ef0:	cd b7       	in	r28, 0x3d	; 61
    3ef2:	de b7       	in	r29, 0x3e	; 62

	if(tempre_set>35 && TempSetCounter)
    3ef4:	80 91 73 01 	lds	r24, 0x0173
    3ef8:	84 32       	cpi	r24, 0x24	; 36
    3efa:	58 f0       	brcs	.+22     	; 0x3f12 <DecreaseTemp+0x26>
    3efc:	80 91 8a 01 	lds	r24, 0x018A
    3f00:	90 91 8b 01 	lds	r25, 0x018B
    3f04:	00 97       	sbiw	r24, 0x00	; 0
    3f06:	29 f0       	breq	.+10     	; 0x3f12 <DecreaseTemp+0x26>
	{
		tempre_set -= 5;
    3f08:	80 91 73 01 	lds	r24, 0x0173
    3f0c:	85 50       	subi	r24, 0x05	; 5
    3f0e:	80 93 73 01 	sts	0x0173, r24
	}
	TempSetCounter = OVFSTempSetCounts;
    3f12:	81 e3       	ldi	r24, 0x31	; 49
    3f14:	91 e0       	ldi	r25, 0x01	; 1
    3f16:	90 93 8b 01 	sts	0x018B, r25
    3f1a:	80 93 8a 01 	sts	0x018A, r24
}
    3f1e:	cf 91       	pop	r28
    3f20:	df 91       	pop	r29
    3f22:	08 95       	ret

00003f24 <Timerovfcounter>:

void Timerovfcounter()
{
    3f24:	df 93       	push	r29
    3f26:	cf 93       	push	r28
    3f28:	cd b7       	in	r28, 0x3d	; 61
    3f2a:	de b7       	in	r29, 0x3e	; 62
	if(GlobalCounter)	GlobalCounter--;
    3f2c:	80 91 8c 01 	lds	r24, 0x018C
    3f30:	90 91 8d 01 	lds	r25, 0x018D
    3f34:	00 97       	sbiw	r24, 0x00	; 0
    3f36:	49 f0       	breq	.+18     	; 0x3f4a <Timerovfcounter+0x26>
    3f38:	80 91 8c 01 	lds	r24, 0x018C
    3f3c:	90 91 8d 01 	lds	r25, 0x018D
    3f40:	01 97       	sbiw	r24, 0x01	; 1
    3f42:	90 93 8d 01 	sts	0x018D, r25
    3f46:	80 93 8c 01 	sts	0x018C, r24
	if(OneSecCounts)	OneSecCounts--;
    3f4a:	80 91 72 01 	lds	r24, 0x0172
    3f4e:	88 23       	and	r24, r24
    3f50:	29 f0       	breq	.+10     	; 0x3f5c <Timerovfcounter+0x38>
    3f52:	80 91 72 01 	lds	r24, 0x0172
    3f56:	81 50       	subi	r24, 0x01	; 1
    3f58:	80 93 72 01 	sts	0x0172, r24
	if(TempSetCounter)
    3f5c:	80 91 8a 01 	lds	r24, 0x018A
    3f60:	90 91 8b 01 	lds	r25, 0x018B
    3f64:	00 97       	sbiw	r24, 0x00	; 0
    3f66:	c1 f0       	breq	.+48     	; 0x3f98 <Timerovfcounter+0x74>
	{
		TempSetCounter--;
    3f68:	80 91 8a 01 	lds	r24, 0x018A
    3f6c:	90 91 8b 01 	lds	r25, 0x018B
    3f70:	01 97       	sbiw	r24, 0x01	; 1
    3f72:	90 93 8b 01 	sts	0x018B, r25
    3f76:	80 93 8a 01 	sts	0x018A, r24
		if(!TempSetCounter)
    3f7a:	80 91 8a 01 	lds	r24, 0x018A
    3f7e:	90 91 8b 01 	lds	r25, 0x018B
    3f82:	00 97       	sbiw	r24, 0x00	; 0
    3f84:	49 f4       	brne	.+18     	; 0x3f98 <Timerovfcounter+0x74>
			EEPROM_write(TepretureADD,tempre_set);
    3f86:	80 91 73 01 	lds	r24, 0x0173
    3f8a:	28 2f       	mov	r18, r24
    3f8c:	30 e0       	ldi	r19, 0x00	; 0
    3f8e:	80 e0       	ldi	r24, 0x00	; 0
    3f90:	90 e0       	ldi	r25, 0x00	; 0
    3f92:	b9 01       	movw	r22, r18
    3f94:	0e 94 bc 18 	call	0x3178	; 0x3178 <EEPROM_write>
	}
}
    3f98:	cf 91       	pop	r28
    3f9a:	df 91       	pop	r29
    3f9c:	08 95       	ret

00003f9e <main>:




int main(void)
{
    3f9e:	df 93       	push	r29
    3fa0:	cf 93       	push	r28
    3fa2:	cd b7       	in	r28, 0x3d	; 61
    3fa4:	de b7       	in	r29, 0x3e	; 62
    3fa6:	61 97       	sbiw	r28, 0x11	; 17
    3fa8:	0f b6       	in	r0, 0x3f	; 63
    3faa:	f8 94       	cli
    3fac:	de bf       	out	0x3e, r29	; 62
    3fae:	0f be       	out	0x3f, r0	; 63
    3fb0:	cd bf       	out	0x3d, r28	; 61

	u16 Current_Temp;
	S7SEG2_enuInit();
    3fb2:	0e 94 3b 1e 	call	0x3c76	; 0x3c76 <S7SEG2_enuInit>
	EXTI_enuInit();
    3fb6:	0e 94 ad 14 	call	0x295a	; 0x295a <EXTI_enuInit>
	EXTI_enuCallBack(&EXTI_AstrEXTIConfig[0],IncreaseTemp,NULL);
    3fba:	2a e5       	ldi	r18, 0x5A	; 90
    3fbc:	3f e1       	ldi	r19, 0x1F	; 31
    3fbe:	89 e6       	ldi	r24, 0x69	; 105
    3fc0:	91 e0       	ldi	r25, 0x01	; 1
    3fc2:	b9 01       	movw	r22, r18
    3fc4:	40 e0       	ldi	r20, 0x00	; 0
    3fc6:	50 e0       	ldi	r21, 0x00	; 0
    3fc8:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <EXTI_enuCallBack>
	EXTI_enuCallBack(&EXTI_AstrEXTIConfig[1],DecreaseTemp,NULL);
    3fcc:	26 e7       	ldi	r18, 0x76	; 118
    3fce:	3f e1       	ldi	r19, 0x1F	; 31
    3fd0:	8c e6       	ldi	r24, 0x6C	; 108
    3fd2:	91 e0       	ldi	r25, 0x01	; 1
    3fd4:	b9 01       	movw	r22, r18
    3fd6:	40 e0       	ldi	r20, 0x00	; 0
    3fd8:	50 e0       	ldi	r21, 0x00	; 0
    3fda:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <EXTI_enuCallBack>
	EXTI_enuCallBack(&EXTI_AstrEXTIConfig[2],EXTI_ONOFFfun,NULL);
    3fde:	2c e1       	ldi	r18, 0x1C	; 28
    3fe0:	3f e1       	ldi	r19, 0x1F	; 31
    3fe2:	8f e6       	ldi	r24, 0x6F	; 111
    3fe4:	91 e0       	ldi	r25, 0x01	; 1
    3fe6:	b9 01       	movw	r22, r18
    3fe8:	40 e0       	ldi	r20, 0x00	; 0
    3fea:	50 e0       	ldi	r21, 0x00	; 0
    3fec:	0e 94 cb 17 	call	0x2f96	; 0x2f96 <EXTI_enuCallBack>
	DIO_enuSetPinDirection(UP_Button,DIO_u8INPUT);
    3ff0:	83 e0       	ldi	r24, 0x03	; 3
    3ff2:	62 e0       	ldi	r22, 0x02	; 2
    3ff4:	40 e0       	ldi	r20, 0x00	; 0
    3ff6:	0e 94 20 1a 	call	0x3440	; 0x3440 <DIO_enuSetPinDirection>
	DIO_enuSetPinDirection(DOWN_Button,DIO_u8INPUT);
    3ffa:	83 e0       	ldi	r24, 0x03	; 3
    3ffc:	63 e0       	ldi	r22, 0x03	; 3
    3ffe:	40 e0       	ldi	r20, 0x00	; 0
    4000:	0e 94 20 1a 	call	0x3440	; 0x3440 <DIO_enuSetPinDirection>
	DIO_enuSetPinDirection(ONOFF_Button,DIO_u8INPUT);
    4004:	81 e0       	ldi	r24, 0x01	; 1
    4006:	62 e0       	ldi	r22, 0x02	; 2
    4008:	40 e0       	ldi	r20, 0x00	; 0
    400a:	0e 94 20 1a 	call	0x3440	; 0x3440 <DIO_enuSetPinDirection>
	DIO_enuSetPinValue(UP_Button,DIO_u8HIGH);
    400e:	83 e0       	ldi	r24, 0x03	; 3
    4010:	62 e0       	ldi	r22, 0x02	; 2
    4012:	41 e0       	ldi	r20, 0x01	; 1
    4014:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>
	DIO_enuSetPinValue(DOWN_Button,DIO_u8HIGH);
    4018:	83 e0       	ldi	r24, 0x03	; 3
    401a:	63 e0       	ldi	r22, 0x03	; 3
    401c:	41 e0       	ldi	r20, 0x01	; 1
    401e:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>
	DIO_enuSetPinValue(ONOFF_Button,DIO_u8HIGH);
    4022:	81 e0       	ldi	r24, 0x01	; 1
    4024:	62 e0       	ldi	r22, 0x02	; 2
    4026:	41 e0       	ldi	r20, 0x01	; 1
    4028:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>

	DIO_enuSetPinDirection(Heater_Pin,DIO_u8OUTPUT);
    402c:	80 e0       	ldi	r24, 0x00	; 0
    402e:	61 e0       	ldi	r22, 0x01	; 1
    4030:	41 e0       	ldi	r20, 0x01	; 1
    4032:	0e 94 20 1a 	call	0x3440	; 0x3440 <DIO_enuSetPinDirection>
	DIO_enuSetPinDirection(HeaterLed_Pin,DIO_u8OUTPUT);
    4036:	81 e0       	ldi	r24, 0x01	; 1
    4038:	61 e0       	ldi	r22, 0x01	; 1
    403a:	41 e0       	ldi	r20, 0x01	; 1
    403c:	0e 94 20 1a 	call	0x3440	; 0x3440 <DIO_enuSetPinDirection>
	DIO_enuSetPinValue(Heater_Pin,DIO_u8LOW);
    4040:	80 e0       	ldi	r24, 0x00	; 0
    4042:	61 e0       	ldi	r22, 0x01	; 1
    4044:	40 e0       	ldi	r20, 0x00	; 0
    4046:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>
	DIO_enuSetPinValue(HeaterLed_Pin,DIO_u8LOW);
    404a:	81 e0       	ldi	r24, 0x01	; 1
    404c:	61 e0       	ldi	r22, 0x01	; 1
    404e:	40 e0       	ldi	r20, 0x00	; 0
    4050:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>

	DIO_enuSetPinDirection(Coolant_Pin,DIO_u8OUTPUT);
    4054:	81 e0       	ldi	r24, 0x01	; 1
    4056:	60 e0       	ldi	r22, 0x00	; 0
    4058:	41 e0       	ldi	r20, 0x01	; 1
    405a:	0e 94 20 1a 	call	0x3440	; 0x3440 <DIO_enuSetPinDirection>
	DIO_enuSetPinDirection(CoolantLed_Pin,DIO_u8OUTPUT);
    405e:	81 e0       	ldi	r24, 0x01	; 1
    4060:	63 e0       	ldi	r22, 0x03	; 3
    4062:	41 e0       	ldi	r20, 0x01	; 1
    4064:	0e 94 20 1a 	call	0x3440	; 0x3440 <DIO_enuSetPinDirection>
	DIO_enuSetPinValue(CoolantLed_Pin,DIO_u8LOW);
    4068:	81 e0       	ldi	r24, 0x01	; 1
    406a:	63 e0       	ldi	r22, 0x03	; 3
    406c:	40 e0       	ldi	r20, 0x00	; 0
    406e:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>
	DIO_enuSetPinValue(Coolant_Pin,DIO_u8LOW);
    4072:	81 e0       	ldi	r24, 0x01	; 1
    4074:	60 e0       	ldi	r22, 0x00	; 0
    4076:	40 e0       	ldi	r20, 0x00	; 0
    4078:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>

	TEMP_voidInit();
    407c:	0e 94 7b 1e 	call	0x3cf6	; 0x3cf6 <TEMP_voidInit>
	TEMP_u16GetValue(&Current_Temp);
    4080:	ce 01       	movw	r24, r28
    4082:	03 96       	adiw	r24, 0x03	; 3
    4084:	0e 94 8a 1e 	call	0x3d14	; 0x3d14 <TEMP_u16GetValue>
	GIE_enuEnable();
    4088:	0e 94 9b 14 	call	0x2936	; 0x2936 <GIE_enuEnable>
	TIMER2_enuInit();
    408c:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <TIMER2_enuInit>
	TIMER2_enuCallBackFun(TIM2_OVERFLOW_INTER,Timerovfcounter,NULL);
    4090:	22 e9       	ldi	r18, 0x92	; 146
    4092:	3f e1       	ldi	r19, 0x1F	; 31
    4094:	80 e4       	ldi	r24, 0x40	; 64
    4096:	b9 01       	movw	r22, r18
    4098:	40 e0       	ldi	r20, 0x00	; 0
    409a:	50 e0       	ldi	r21, 0x00	; 0
    409c:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <TIMER2_enuCallBackFun>
	TempSetCounter = 0;
    40a0:	10 92 8b 01 	sts	0x018B, r1
    40a4:	10 92 8a 01 	sts	0x018A, r1
	{
		u8 EpromRead;
		EEPROM_read(TepretureADD,&EpromRead);
    40a8:	9e 01       	movw	r18, r28
    40aa:	21 5f       	subi	r18, 0xF1	; 241
    40ac:	3f 4f       	sbci	r19, 0xFF	; 255
    40ae:	80 e0       	ldi	r24, 0x00	; 0
    40b0:	90 e0       	ldi	r25, 0x00	; 0
    40b2:	b9 01       	movw	r22, r18
    40b4:	0e 94 f2 18 	call	0x31e4	; 0x31e4 <EEPROM_read>
		if(EpromRead!=0XFF)		tempre_set=EpromRead;
    40b8:	8f 85       	ldd	r24, Y+15	; 0x0f
    40ba:	8f 3f       	cpi	r24, 0xFF	; 255
    40bc:	19 f0       	breq	.+6      	; 0x40c4 <main+0x126>
    40be:	8f 85       	ldd	r24, Y+15	; 0x0f
    40c0:	80 93 73 01 	sts	0x0173, r24
	}

	u8 TempArray[10]={Current_Temp,Current_Temp,Current_Temp,Current_Temp,Current_Temp,Current_Temp,Current_Temp,Current_Temp,Current_Temp,Current_Temp};
    40c4:	8b 81       	ldd	r24, Y+3	; 0x03
    40c6:	9c 81       	ldd	r25, Y+4	; 0x04
    40c8:	28 2f       	mov	r18, r24
    40ca:	8b 81       	ldd	r24, Y+3	; 0x03
    40cc:	9c 81       	ldd	r25, Y+4	; 0x04
    40ce:	38 2f       	mov	r19, r24
    40d0:	8b 81       	ldd	r24, Y+3	; 0x03
    40d2:	9c 81       	ldd	r25, Y+4	; 0x04
    40d4:	48 2f       	mov	r20, r24
    40d6:	8b 81       	ldd	r24, Y+3	; 0x03
    40d8:	9c 81       	ldd	r25, Y+4	; 0x04
    40da:	58 2f       	mov	r21, r24
    40dc:	8b 81       	ldd	r24, Y+3	; 0x03
    40de:	9c 81       	ldd	r25, Y+4	; 0x04
    40e0:	68 2f       	mov	r22, r24
    40e2:	8b 81       	ldd	r24, Y+3	; 0x03
    40e4:	9c 81       	ldd	r25, Y+4	; 0x04
    40e6:	78 2f       	mov	r23, r24
    40e8:	8b 81       	ldd	r24, Y+3	; 0x03
    40ea:	9c 81       	ldd	r25, Y+4	; 0x04
    40ec:	e8 2f       	mov	r30, r24
    40ee:	8b 81       	ldd	r24, Y+3	; 0x03
    40f0:	9c 81       	ldd	r25, Y+4	; 0x04
    40f2:	f8 2f       	mov	r31, r24
    40f4:	8b 81       	ldd	r24, Y+3	; 0x03
    40f6:	9c 81       	ldd	r25, Y+4	; 0x04
    40f8:	a8 2f       	mov	r26, r24
    40fa:	8b 81       	ldd	r24, Y+3	; 0x03
    40fc:	9c 81       	ldd	r25, Y+4	; 0x04
    40fe:	2d 83       	std	Y+5, r18	; 0x05
    4100:	3e 83       	std	Y+6, r19	; 0x06
    4102:	4f 83       	std	Y+7, r20	; 0x07
    4104:	58 87       	std	Y+8, r21	; 0x08
    4106:	69 87       	std	Y+9, r22	; 0x09
    4108:	7a 87       	std	Y+10, r23	; 0x0a
    410a:	eb 87       	std	Y+11, r30	; 0x0b
    410c:	fc 87       	std	Y+12, r31	; 0x0c
    410e:	ad 87       	std	Y+13, r26	; 0x0d
    4110:	8e 87       	std	Y+14, r24	; 0x0e
	Controller_PowerMood=OFF;
    4112:	81 e0       	ldi	r24, 0x01	; 1
    4114:	80 93 74 01 	sts	0x0174, r24
	EXTI_enuDisableInterrupt(&EXTI_AstrEXTIConfig[0]);
    4118:	89 e6       	ldi	r24, 0x69	; 105
    411a:	91 e0       	ldi	r25, 0x01	; 1
    411c:	0e 94 84 17 	call	0x2f08	; 0x2f08 <EXTI_enuDisableInterrupt>
	EXTI_enuDisableInterrupt(&EXTI_AstrEXTIConfig[1]);
    4120:	8c e6       	ldi	r24, 0x6C	; 108
    4122:	91 e0       	ldi	r25, 0x01	; 1
    4124:	0e 94 84 17 	call	0x2f08	; 0x2f08 <EXTI_enuDisableInterrupt>
	TIMER2_enuDisableInterrupt(TIM2_OVERFLOW_INTER);
    4128:	80 e4       	ldi	r24, 0x40	; 64
    412a:	0e 94 b4 13 	call	0x2768	; 0x2768 <TIMER2_enuDisableInterrupt>
	while(1)
	{
		while(Controller_PowerMood == OFF);
    412e:	80 91 74 01 	lds	r24, 0x0174
    4132:	81 30       	cpi	r24, 0x01	; 1
    4134:	e1 f3       	breq	.-8      	; 0x412e <main+0x190>


		if(TempSetCounter)		S7SEG2_enuSendInteger(tempre_set);
    4136:	80 91 8a 01 	lds	r24, 0x018A
    413a:	90 91 8b 01 	lds	r25, 0x018B
    413e:	00 97       	sbiw	r24, 0x00	; 0
    4140:	29 f0       	breq	.+10     	; 0x414c <main+0x1ae>
    4142:	80 91 73 01 	lds	r24, 0x0173
    4146:	0e 94 4c 1e 	call	0x3c98	; 0x3c98 <S7SEG2_enuSendInteger>
    414a:	04 c0       	rjmp	.+8      	; 0x4154 <main+0x1b6>
		else			S7SEG2_enuSendInteger(Current_Temp);
    414c:	8b 81       	ldd	r24, Y+3	; 0x03
    414e:	9c 81       	ldd	r25, Y+4	; 0x04
    4150:	0e 94 4c 1e 	call	0x3c98	; 0x3c98 <S7SEG2_enuSendInteger>
		if(!GlobalCounter)
    4154:	80 91 8c 01 	lds	r24, 0x018C
    4158:	90 91 8d 01 	lds	r25, 0x018D
    415c:	00 97       	sbiw	r24, 0x00	; 0
    415e:	09 f5       	brne	.+66     	; 0x41a2 <main+0x204>
		{
			GlobalCounter=TempReadCounts;
    4160:	86 e0       	ldi	r24, 0x06	; 6
    4162:	90 e0       	ldi	r25, 0x00	; 0
    4164:	90 93 8d 01 	sts	0x018D, r25
    4168:	80 93 8c 01 	sts	0x018C, r24
			static u8 TempIndex=0;
			TEMP_u16GetValue(&Current_Temp);
    416c:	ce 01       	movw	r24, r28
    416e:	03 96       	adiw	r24, 0x03	; 3
    4170:	0e 94 8a 1e 	call	0x3d14	; 0x3d14 <TEMP_u16GetValue>
			if(TempIndex == 10 )
    4174:	80 91 8e 01 	lds	r24, 0x018E
    4178:	8a 30       	cpi	r24, 0x0A	; 10
    417a:	11 f4       	brne	.+4      	; 0x4180 <main+0x1e2>
				TempIndex = 0;
    417c:	10 92 8e 01 	sts	0x018E, r1
			TempArray[TempIndex++] =  Current_Temp;
    4180:	50 91 8e 01 	lds	r21, 0x018E
    4184:	25 2f       	mov	r18, r21
    4186:	30 e0       	ldi	r19, 0x00	; 0
    4188:	8b 81       	ldd	r24, Y+3	; 0x03
    418a:	9c 81       	ldd	r25, Y+4	; 0x04
    418c:	48 2f       	mov	r20, r24
    418e:	ce 01       	movw	r24, r28
    4190:	05 96       	adiw	r24, 0x05	; 5
    4192:	fc 01       	movw	r30, r24
    4194:	e2 0f       	add	r30, r18
    4196:	f3 1f       	adc	r31, r19
    4198:	40 83       	st	Z, r20
    419a:	85 2f       	mov	r24, r21
    419c:	8f 5f       	subi	r24, 0xFF	; 255
    419e:	80 93 8e 01 	sts	0x018E, r24

		}
		u16 TempAvarage=(TempArray[0]+TempArray[1]+TempArray[2]+TempArray[3]+TempArray[4]+TempArray[5]+TempArray[6]+TempArray[7]+TempArray[8]+TempArray[9])/10;
    41a2:	8d 81       	ldd	r24, Y+5	; 0x05
    41a4:	28 2f       	mov	r18, r24
    41a6:	30 e0       	ldi	r19, 0x00	; 0
    41a8:	8e 81       	ldd	r24, Y+6	; 0x06
    41aa:	88 2f       	mov	r24, r24
    41ac:	90 e0       	ldi	r25, 0x00	; 0
    41ae:	28 0f       	add	r18, r24
    41b0:	39 1f       	adc	r19, r25
    41b2:	8f 81       	ldd	r24, Y+7	; 0x07
    41b4:	88 2f       	mov	r24, r24
    41b6:	90 e0       	ldi	r25, 0x00	; 0
    41b8:	28 0f       	add	r18, r24
    41ba:	39 1f       	adc	r19, r25
    41bc:	88 85       	ldd	r24, Y+8	; 0x08
    41be:	88 2f       	mov	r24, r24
    41c0:	90 e0       	ldi	r25, 0x00	; 0
    41c2:	28 0f       	add	r18, r24
    41c4:	39 1f       	adc	r19, r25
    41c6:	89 85       	ldd	r24, Y+9	; 0x09
    41c8:	88 2f       	mov	r24, r24
    41ca:	90 e0       	ldi	r25, 0x00	; 0
    41cc:	28 0f       	add	r18, r24
    41ce:	39 1f       	adc	r19, r25
    41d0:	8a 85       	ldd	r24, Y+10	; 0x0a
    41d2:	88 2f       	mov	r24, r24
    41d4:	90 e0       	ldi	r25, 0x00	; 0
    41d6:	28 0f       	add	r18, r24
    41d8:	39 1f       	adc	r19, r25
    41da:	8b 85       	ldd	r24, Y+11	; 0x0b
    41dc:	88 2f       	mov	r24, r24
    41de:	90 e0       	ldi	r25, 0x00	; 0
    41e0:	28 0f       	add	r18, r24
    41e2:	39 1f       	adc	r19, r25
    41e4:	8c 85       	ldd	r24, Y+12	; 0x0c
    41e6:	88 2f       	mov	r24, r24
    41e8:	90 e0       	ldi	r25, 0x00	; 0
    41ea:	28 0f       	add	r18, r24
    41ec:	39 1f       	adc	r19, r25
    41ee:	8d 85       	ldd	r24, Y+13	; 0x0d
    41f0:	88 2f       	mov	r24, r24
    41f2:	90 e0       	ldi	r25, 0x00	; 0
    41f4:	28 0f       	add	r18, r24
    41f6:	39 1f       	adc	r19, r25
    41f8:	8e 85       	ldd	r24, Y+14	; 0x0e
    41fa:	88 2f       	mov	r24, r24
    41fc:	90 e0       	ldi	r25, 0x00	; 0
    41fe:	82 0f       	add	r24, r18
    4200:	93 1f       	adc	r25, r19
    4202:	2a e0       	ldi	r18, 0x0A	; 10
    4204:	30 e0       	ldi	r19, 0x00	; 0
    4206:	b9 01       	movw	r22, r18
    4208:	0e 94 80 21 	call	0x4300	; 0x4300 <__divmodhi4>
    420c:	cb 01       	movw	r24, r22
    420e:	9a 83       	std	Y+2, r25	; 0x02
    4210:	89 83       	std	Y+1, r24	; 0x01
		//*((volatile u8*)0X3F)=TempAvarage;
		u8 Coolerpinstate;
		DIO_enuGetPinValue(Coolant_Pin,&Coolerpinstate);
    4212:	9e 01       	movw	r18, r28
    4214:	20 5f       	subi	r18, 0xF0	; 240
    4216:	3f 4f       	sbci	r19, 0xFF	; 255
    4218:	81 e0       	ldi	r24, 0x01	; 1
    421a:	60 e0       	ldi	r22, 0x00	; 0
    421c:	a9 01       	movw	r20, r18
    421e:	0e 94 86 1c 	call	0x390c	; 0x390c <DIO_enuGetPinValue>
		u8 Heaterpinstate;
		DIO_enuGetPinValue(Heater_Pin,&Heaterpinstate);
    4222:	9e 01       	movw	r18, r28
    4224:	2f 5e       	subi	r18, 0xEF	; 239
    4226:	3f 4f       	sbci	r19, 0xFF	; 255
    4228:	80 e0       	ldi	r24, 0x00	; 0
    422a:	61 e0       	ldi	r22, 0x01	; 1
    422c:	a9 01       	movw	r20, r18
    422e:	0e 94 86 1c 	call	0x390c	; 0x390c <DIO_enuGetPinValue>

		if(TempAvarage < (tempre_set-5))
    4232:	80 91 73 01 	lds	r24, 0x0173
    4236:	88 2f       	mov	r24, r24
    4238:	90 e0       	ldi	r25, 0x00	; 0
    423a:	05 97       	sbiw	r24, 0x05	; 5
    423c:	9c 01       	movw	r18, r24
    423e:	89 81       	ldd	r24, Y+1	; 0x01
    4240:	9a 81       	ldd	r25, Y+2	; 0x02
    4242:	82 17       	cp	r24, r18
    4244:	93 07       	cpc	r25, r19
    4246:	98 f4       	brcc	.+38     	; 0x426e <main+0x2d0>
		{

			if(Heaterpinstate!=DIO_u8HIGH)
    4248:	89 89       	ldd	r24, Y+17	; 0x11
    424a:	81 30       	cpi	r24, 0x01	; 1
    424c:	69 f1       	breq	.+90     	; 0x42a8 <main+0x30a>
			{
				DIO_enuSetPinValue(Heater_Pin,DIO_u8HIGH);
    424e:	80 e0       	ldi	r24, 0x00	; 0
    4250:	61 e0       	ldi	r22, 0x01	; 1
    4252:	41 e0       	ldi	r20, 0x01	; 1
    4254:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>
				DIO_enuSetPinValue(Coolant_Pin,DIO_u8LOW);
    4258:	81 e0       	ldi	r24, 0x01	; 1
    425a:	60 e0       	ldi	r22, 0x00	; 0
    425c:	40 e0       	ldi	r20, 0x00	; 0
    425e:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>
				DIO_enuSetPinValue(CoolantLed_Pin,DIO_u8LOW);
    4262:	81 e0       	ldi	r24, 0x01	; 1
    4264:	63 e0       	ldi	r22, 0x03	; 3
    4266:	40 e0       	ldi	r20, 0x00	; 0
    4268:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>
    426c:	1d c0       	rjmp	.+58     	; 0x42a8 <main+0x30a>

			}


		}
		else if( TempAvarage > ( tempre_set+5))
    426e:	80 91 73 01 	lds	r24, 0x0173
    4272:	88 2f       	mov	r24, r24
    4274:	90 e0       	ldi	r25, 0x00	; 0
    4276:	05 96       	adiw	r24, 0x05	; 5
    4278:	9c 01       	movw	r18, r24
    427a:	89 81       	ldd	r24, Y+1	; 0x01
    427c:	9a 81       	ldd	r25, Y+2	; 0x02
    427e:	28 17       	cp	r18, r24
    4280:	39 07       	cpc	r19, r25
    4282:	90 f4       	brcc	.+36     	; 0x42a8 <main+0x30a>
		{

			if(Coolerpinstate!=DIO_u8HIGH)
    4284:	88 89       	ldd	r24, Y+16	; 0x10
    4286:	81 30       	cpi	r24, 0x01	; 1
    4288:	79 f0       	breq	.+30     	; 0x42a8 <main+0x30a>
			{
				DIO_enuSetPinValue(Heater_Pin,DIO_u8LOW);
    428a:	80 e0       	ldi	r24, 0x00	; 0
    428c:	61 e0       	ldi	r22, 0x01	; 1
    428e:	40 e0       	ldi	r20, 0x00	; 0
    4290:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>
				DIO_enuSetPinValue(Coolant_Pin,DIO_u8HIGH);
    4294:	81 e0       	ldi	r24, 0x01	; 1
    4296:	60 e0       	ldi	r22, 0x00	; 0
    4298:	41 e0       	ldi	r20, 0x01	; 1
    429a:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>
				DIO_enuSetPinValue(HeaterLed_Pin,DIO_u8LOW);
    429e:	81 e0       	ldi	r24, 0x01	; 1
    42a0:	61 e0       	ldi	r22, 0x01	; 1
    42a2:	40 e0       	ldi	r20, 0x00	; 0
    42a4:	0e 94 0c 1b 	call	0x3618	; 0x3618 <DIO_enuSetPinValue>
			}

		}
		if(!(OneSecCounts)&& Coolerpinstate==DIO_u8HIGH)
    42a8:	80 91 72 01 	lds	r24, 0x0172
    42ac:	88 23       	and	r24, r24
    42ae:	59 f4       	brne	.+22     	; 0x42c6 <main+0x328>
    42b0:	88 89       	ldd	r24, Y+16	; 0x10
    42b2:	81 30       	cpi	r24, 0x01	; 1
    42b4:	41 f4       	brne	.+16     	; 0x42c6 <main+0x328>
		{
			OneSecCounts = One_secound;
    42b6:	8d e3       	ldi	r24, 0x3D	; 61
    42b8:	80 93 72 01 	sts	0x0172, r24
			DIO_enuTogglePinValue(CoolantLed_Pin);
    42bc:	81 e0       	ldi	r24, 0x01	; 1
    42be:	63 e0       	ldi	r22, 0x03	; 3
    42c0:	0e 94 f8 1b 	call	0x37f0	; 0x37f0 <DIO_enuTogglePinValue>
    42c4:	34 cf       	rjmp	.-408    	; 0x412e <main+0x190>
		}
		else if(!(OneSecCounts)&&Heaterpinstate==DIO_u8HIGH)
    42c6:	80 91 72 01 	lds	r24, 0x0172
    42ca:	88 23       	and	r24, r24
    42cc:	09 f0       	breq	.+2      	; 0x42d0 <main+0x332>
    42ce:	2f cf       	rjmp	.-418    	; 0x412e <main+0x190>
    42d0:	89 89       	ldd	r24, Y+17	; 0x11
    42d2:	81 30       	cpi	r24, 0x01	; 1
    42d4:	09 f0       	breq	.+2      	; 0x42d8 <main+0x33a>
    42d6:	2b cf       	rjmp	.-426    	; 0x412e <main+0x190>
		{
			OneSecCounts = One_secound;
    42d8:	8d e3       	ldi	r24, 0x3D	; 61
    42da:	80 93 72 01 	sts	0x0172, r24
			DIO_enuTogglePinValue(HeaterLed_Pin);
    42de:	81 e0       	ldi	r24, 0x01	; 1
    42e0:	61 e0       	ldi	r22, 0x01	; 1
    42e2:	0e 94 f8 1b 	call	0x37f0	; 0x37f0 <DIO_enuTogglePinValue>
    42e6:	23 cf       	rjmp	.-442    	; 0x412e <main+0x190>

000042e8 <__udivmodqi4>:
    42e8:	99 1b       	sub	r25, r25
    42ea:	79 e0       	ldi	r23, 0x09	; 9
    42ec:	04 c0       	rjmp	.+8      	; 0x42f6 <__udivmodqi4_ep>

000042ee <__udivmodqi4_loop>:
    42ee:	99 1f       	adc	r25, r25
    42f0:	96 17       	cp	r25, r22
    42f2:	08 f0       	brcs	.+2      	; 0x42f6 <__udivmodqi4_ep>
    42f4:	96 1b       	sub	r25, r22

000042f6 <__udivmodqi4_ep>:
    42f6:	88 1f       	adc	r24, r24
    42f8:	7a 95       	dec	r23
    42fa:	c9 f7       	brne	.-14     	; 0x42ee <__udivmodqi4_loop>
    42fc:	80 95       	com	r24
    42fe:	08 95       	ret

00004300 <__divmodhi4>:
    4300:	97 fb       	bst	r25, 7
    4302:	09 2e       	mov	r0, r25
    4304:	07 26       	eor	r0, r23
    4306:	0a d0       	rcall	.+20     	; 0x431c <__divmodhi4_neg1>
    4308:	77 fd       	sbrc	r23, 7
    430a:	04 d0       	rcall	.+8      	; 0x4314 <__divmodhi4_neg2>
    430c:	2b d0       	rcall	.+86     	; 0x4364 <__udivmodhi4>
    430e:	06 d0       	rcall	.+12     	; 0x431c <__divmodhi4_neg1>
    4310:	00 20       	and	r0, r0
    4312:	1a f4       	brpl	.+6      	; 0x431a <__divmodhi4_exit>

00004314 <__divmodhi4_neg2>:
    4314:	70 95       	com	r23
    4316:	61 95       	neg	r22
    4318:	7f 4f       	sbci	r23, 0xFF	; 255

0000431a <__divmodhi4_exit>:
    431a:	08 95       	ret

0000431c <__divmodhi4_neg1>:
    431c:	f6 f7       	brtc	.-4      	; 0x431a <__divmodhi4_exit>
    431e:	90 95       	com	r25
    4320:	81 95       	neg	r24
    4322:	9f 4f       	sbci	r25, 0xFF	; 255
    4324:	08 95       	ret

00004326 <__mulsi3>:
    4326:	62 9f       	mul	r22, r18
    4328:	d0 01       	movw	r26, r0
    432a:	73 9f       	mul	r23, r19
    432c:	f0 01       	movw	r30, r0
    432e:	82 9f       	mul	r24, r18
    4330:	e0 0d       	add	r30, r0
    4332:	f1 1d       	adc	r31, r1
    4334:	64 9f       	mul	r22, r20
    4336:	e0 0d       	add	r30, r0
    4338:	f1 1d       	adc	r31, r1
    433a:	92 9f       	mul	r25, r18
    433c:	f0 0d       	add	r31, r0
    433e:	83 9f       	mul	r24, r19
    4340:	f0 0d       	add	r31, r0
    4342:	74 9f       	mul	r23, r20
    4344:	f0 0d       	add	r31, r0
    4346:	65 9f       	mul	r22, r21
    4348:	f0 0d       	add	r31, r0
    434a:	99 27       	eor	r25, r25
    434c:	72 9f       	mul	r23, r18
    434e:	b0 0d       	add	r27, r0
    4350:	e1 1d       	adc	r30, r1
    4352:	f9 1f       	adc	r31, r25
    4354:	63 9f       	mul	r22, r19
    4356:	b0 0d       	add	r27, r0
    4358:	e1 1d       	adc	r30, r1
    435a:	f9 1f       	adc	r31, r25
    435c:	bd 01       	movw	r22, r26
    435e:	cf 01       	movw	r24, r30
    4360:	11 24       	eor	r1, r1
    4362:	08 95       	ret

00004364 <__udivmodhi4>:
    4364:	aa 1b       	sub	r26, r26
    4366:	bb 1b       	sub	r27, r27
    4368:	51 e1       	ldi	r21, 0x11	; 17
    436a:	07 c0       	rjmp	.+14     	; 0x437a <__udivmodhi4_ep>

0000436c <__udivmodhi4_loop>:
    436c:	aa 1f       	adc	r26, r26
    436e:	bb 1f       	adc	r27, r27
    4370:	a6 17       	cp	r26, r22
    4372:	b7 07       	cpc	r27, r23
    4374:	10 f0       	brcs	.+4      	; 0x437a <__udivmodhi4_ep>
    4376:	a6 1b       	sub	r26, r22
    4378:	b7 0b       	sbc	r27, r23

0000437a <__udivmodhi4_ep>:
    437a:	88 1f       	adc	r24, r24
    437c:	99 1f       	adc	r25, r25
    437e:	5a 95       	dec	r21
    4380:	a9 f7       	brne	.-22     	; 0x436c <__udivmodhi4_loop>
    4382:	80 95       	com	r24
    4384:	90 95       	com	r25
    4386:	bc 01       	movw	r22, r24
    4388:	cd 01       	movw	r24, r26
    438a:	08 95       	ret

0000438c <__prologue_saves__>:
    438c:	2f 92       	push	r2
    438e:	3f 92       	push	r3
    4390:	4f 92       	push	r4
    4392:	5f 92       	push	r5
    4394:	6f 92       	push	r6
    4396:	7f 92       	push	r7
    4398:	8f 92       	push	r8
    439a:	9f 92       	push	r9
    439c:	af 92       	push	r10
    439e:	bf 92       	push	r11
    43a0:	cf 92       	push	r12
    43a2:	df 92       	push	r13
    43a4:	ef 92       	push	r14
    43a6:	ff 92       	push	r15
    43a8:	0f 93       	push	r16
    43aa:	1f 93       	push	r17
    43ac:	cf 93       	push	r28
    43ae:	df 93       	push	r29
    43b0:	cd b7       	in	r28, 0x3d	; 61
    43b2:	de b7       	in	r29, 0x3e	; 62
    43b4:	ca 1b       	sub	r28, r26
    43b6:	db 0b       	sbc	r29, r27
    43b8:	0f b6       	in	r0, 0x3f	; 63
    43ba:	f8 94       	cli
    43bc:	de bf       	out	0x3e, r29	; 62
    43be:	0f be       	out	0x3f, r0	; 63
    43c0:	cd bf       	out	0x3d, r28	; 61
    43c2:	09 94       	ijmp

000043c4 <__epilogue_restores__>:
    43c4:	2a 88       	ldd	r2, Y+18	; 0x12
    43c6:	39 88       	ldd	r3, Y+17	; 0x11
    43c8:	48 88       	ldd	r4, Y+16	; 0x10
    43ca:	5f 84       	ldd	r5, Y+15	; 0x0f
    43cc:	6e 84       	ldd	r6, Y+14	; 0x0e
    43ce:	7d 84       	ldd	r7, Y+13	; 0x0d
    43d0:	8c 84       	ldd	r8, Y+12	; 0x0c
    43d2:	9b 84       	ldd	r9, Y+11	; 0x0b
    43d4:	aa 84       	ldd	r10, Y+10	; 0x0a
    43d6:	b9 84       	ldd	r11, Y+9	; 0x09
    43d8:	c8 84       	ldd	r12, Y+8	; 0x08
    43da:	df 80       	ldd	r13, Y+7	; 0x07
    43dc:	ee 80       	ldd	r14, Y+6	; 0x06
    43de:	fd 80       	ldd	r15, Y+5	; 0x05
    43e0:	0c 81       	ldd	r16, Y+4	; 0x04
    43e2:	1b 81       	ldd	r17, Y+3	; 0x03
    43e4:	aa 81       	ldd	r26, Y+2	; 0x02
    43e6:	b9 81       	ldd	r27, Y+1	; 0x01
    43e8:	ce 0f       	add	r28, r30
    43ea:	d1 1d       	adc	r29, r1
    43ec:	0f b6       	in	r0, 0x3f	; 63
    43ee:	f8 94       	cli
    43f0:	de bf       	out	0x3e, r29	; 62
    43f2:	0f be       	out	0x3f, r0	; 63
    43f4:	cd bf       	out	0x3d, r28	; 61
    43f6:	ed 01       	movw	r28, r26
    43f8:	08 95       	ret

000043fa <_exit>:
    43fa:	f8 94       	cli

000043fc <__stop_program>:
    43fc:	ff cf       	rjmp	.-2      	; 0x43fc <__stop_program>
